/* eslint-disable */
/* tslint:disable */
// noinspection JSUnusedGlobalSymbols
// biome-ignore-all
/*
 * ------------------------------------------------------------
 * ## This file was automatically generated by drizzle-zero. ##
 * ## Any changes you make to this file will be overwritten. ##
 * ##                                                        ##
 * ## Additionally, you should also exclude this file from   ##
 * ## your linter and/or formatter to prevent it from being  ##
 * ## checked or modified.                                   ##
 * ##                                                        ##
 * ## SOURCE: https://github.com/0xcadams/drizzle-zero        ##
 * ------------------------------------------------------------
 */

import type { Row } from "@rocicorp/zero";
import { createBuilder } from "@rocicorp/zero";
import type { ZeroCustomType } from "drizzle-zero";
import type { default as zeroSchema } from "../../drizzle-zero.config";

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
  tables: {
    tasks: {
      name: "tasks",
      columns: {
        id: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "tasks",
            "id"
          >,
        },
        title: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "tasks",
            "title"
          >,
        },
        description: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "tasks",
            "description"
          >,
        },
        due_date: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "tasks",
            "due_date"
          >,
        },
        status: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "tasks",
            "status"
          >,
        },
        created_at: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "tasks",
            "created_at"
          >,
        },
        updated_at: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "tasks",
            "updated_at"
          >,
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "tasks",
            "userId"
          >,
          serverName: "user_id",
        },
      },
      primaryKey: ["id"],
    },
    user: {
      name: "user",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "user",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "user",
            "name"
          >,
        },
        email: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "user",
            "email"
          >,
        },
        role: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "user",
            "role"
          >,
        },
      },
      primaryKey: ["id"],
    },
  },
  relationships: {},
  enableLegacyQueries: true,
  enableLegacyMutators: true,
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
/**
 * Represents a row from the "tasks" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Task = Row<Schema["tables"]["tasks"]>;
/**
 * Represents a row from the "user" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type User = Row<Schema["tables"]["user"]>;

/**
 * Represents the Zero schema query builder.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const builder = createBuilder(schema);
