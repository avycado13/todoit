{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_a71539c9.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_a71539c9-module__T19VSG__className\",\n  \"variable\": \"geist_a71539c9-module__T19VSG__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_a71539c9.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,gKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,gKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,gKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_8d43a2aa.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_8d43a2aa-module__8Li5zG__className\",\n  \"variable\": \"geist_mono_8d43a2aa-module__8Li5zG__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_8d43a2aa.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/db/db.ts"],"sourcesContent":["// Make sure to install the 'pg' package \nimport { drizzle } from \"drizzle-orm/node-postgres\";\nimport { Pool } from \"pg\";\n\nconst pool = new Pool({\n  connectionString: process.env.DATABASE_URL,\n});\nexport const db = drizzle({ client: pool });\n "],"names":[],"mappings":"AAAA,yCAAyC;;;;;AACzC;AACA;;;;;;;;AAEA,MAAM,OAAO,IAAI,4GAAI,CAAC;IACpB,kBAAkB,QAAQ,GAAG,CAAC,YAAY;AAC5C;AACO,MAAM,KAAK,IAAA,6WAAO,EAAC;IAAE,QAAQ;AAAK","debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/lib/auth.ts"],"sourcesContent":["import { betterAuth } from \"better-auth\";\nimport { drizzleAdapter } from \"better-auth/adapters/drizzle\";\nimport { db } from \"@/db/db\"; // your drizzle instance\nimport { jwt } from \"better-auth/plugins\"\n\nexport const auth = betterAuth({\n    database: drizzleAdapter(db, {\n        provider: \"pg\", // or \"mysql\", \"sqlite\"\n    }),\n    plugins: [ \n        jwt(), \n    ] \n});\n\nexport type Auth = typeof auth;\nexport type Session = typeof auth.$Infer.Session;\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AACA,qLAA8B,wBAAwB;AACtD;AAAA;;;;;;;;;AAEO,MAAM,OAAO,IAAA,kbAAU,EAAC;IAC3B,UAAU,IAAA,sZAAc,EAAC,8GAAE,EAAE;QACzB,UAAU;IACd;IACA,SAAS;QACL,IAAA,2YAAG;KACN;AACL","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport { headers } from \"next/headers\"\nimport \"./globals.css\";\nimport { auth } from \"@/lib/auth\";\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: \"Create Next App\",\n  description: \"Generated by create next app\",\n};\n\nexport default async function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  const session = await auth.api.getSession({\n    headers: await headers()\n  });\n  const userID = session?.user.id ?? '';\n  const jwtToken = await auth.api.getToken({ headers: await headers() });\n\n  return (\n\n    <html lang=\"en\">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n\n      >\n\n          {children}\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;AAEA;AAEA;;;;;;;;;;;AAYO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,eAAe,WAAW,EACvC,QAAQ,EAGR;IACA,MAAM,UAAU,MAAM,mHAAI,CAAC,GAAG,CAAC,UAAU,CAAC;QACxC,SAAS,MAAM,IAAA,iTAAO;IACxB;IACA,MAAM,SAAS,SAAS,KAAK,MAAM;IACnC,MAAM,WAAW,MAAM,mHAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;QAAE,SAAS,MAAM,IAAA,iTAAO;IAAG;IAEpE,qBAEE,qZAAC;QAAK,MAAK;kBACT,cAAA,qZAAC;YACC,WAAW,GAAG,oJAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,yJAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;sBAIjE;;;;;;;;;;;AAIX","debugId":null}}]
}