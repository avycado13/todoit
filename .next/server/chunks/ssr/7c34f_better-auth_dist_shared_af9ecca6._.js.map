{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.CW6D9eSx.mjs"],"sourcesContent":["const getDate = (span, unit = \"ms\") => {\n  return new Date(Date.now() + (unit === \"sec\" ? span * 1e3 : span));\n};\n\nexport { getDate as g };\n"],"names":[],"mappings":";;;;AAAA,MAAM,UAAU,CAAC,MAAM,OAAO,IAAI;IAChC,OAAO,IAAI,KAAK,KAAK,GAAG,KAAK,CAAC,SAAS,QAAQ,OAAO,MAAM,IAAI;AAClE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.DdzSJf-n.mjs"],"sourcesContent":["class BetterAuthError extends Error {\n  constructor(message, cause) {\n    super(message);\n    this.name = \"BetterAuthError\";\n    this.message = message;\n    this.cause = cause;\n    this.stack = \"\";\n  }\n}\nclass MissingDependencyError extends BetterAuthError {\n  constructor(pkgName) {\n    super(\n      `The package \"${pkgName}\" is required. Make sure it is installed.`,\n      pkgName\n    );\n  }\n}\n\nexport { BetterAuthError as B, MissingDependencyError as M };\n"],"names":[],"mappings":";;;;;;AAAA,MAAM,wBAAwB;IAC5B,YAAY,OAAO,EAAE,KAAK,CAAE;QAC1B,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,KAAK,GAAG;IACf;AACF;AACA,MAAM,+BAA+B;IACnC,YAAY,OAAO,CAAE;QACnB,KAAK,CACH,CAAC,aAAa,EAAE,QAAQ,yCAAyC,CAAC,EAClE;IAEJ;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.CiuwFiHM.mjs"],"sourcesContent":["const _envShim = /* @__PURE__ */ Object.create(null);\nconst _getEnv = (useShim) => globalThis.process?.env || //@ts-expect-error\nglobalThis.Deno?.env.toObject() || //@ts-expect-error\nglobalThis.__env__ || (useShim ? _envShim : globalThis);\nconst env = new Proxy(_envShim, {\n  get(_, prop) {\n    const env2 = _getEnv();\n    return env2[prop] ?? _envShim[prop];\n  },\n  has(_, prop) {\n    const env2 = _getEnv();\n    return prop in env2 || prop in _envShim;\n  },\n  set(_, prop, value) {\n    const env2 = _getEnv(true);\n    env2[prop] = value;\n    return true;\n  },\n  deleteProperty(_, prop) {\n    if (!prop) {\n      return false;\n    }\n    const env2 = _getEnv(true);\n    delete env2[prop];\n    return true;\n  },\n  ownKeys() {\n    const env2 = _getEnv(true);\n    return Object.keys(env2);\n  }\n});\nfunction toBoolean(val) {\n  return val ? val !== \"false\" : false;\n}\nconst nodeENV = typeof process !== \"undefined\" && process.env && process.env.NODE_ENV || \"\";\nconst isProduction = nodeENV === \"production\";\nconst isDevelopment = nodeENV === \"dev\" || nodeENV === \"development\";\nconst isTest = () => nodeENV === \"test\" || toBoolean(env.TEST);\nfunction getEnvVar(key, fallback) {\n  if (typeof process !== \"undefined\" && process.env) {\n    return process.env[key] ?? fallback;\n  }\n  if (typeof Deno !== \"undefined\") {\n    return Deno.env.get(key) ?? fallback;\n  }\n  if (typeof Bun !== \"undefined\") {\n    return Bun.env[key] ?? fallback;\n  }\n  return fallback;\n}\nfunction getBooleanEnvVar(key, fallback = true) {\n  const value = getEnvVar(key);\n  if (!value) return fallback;\n  return value !== \"0\" && value.toLowerCase() !== \"false\" && value !== \"\";\n}\nconst ENV = {\n  get BETTER_AUTH_TELEMETRY_ENDPOINT() {\n    return getEnvVar(\n      \"BETTER_AUTH_TELEMETRY_ENDPOINT\",\n      \"https://telemetry.better-auth.com/v1/track\"\n    );\n  }\n};\n\nexport { ENV as E, isDevelopment as a, isProduction as b, getBooleanEnvVar as c, env as e, getEnvVar as g, isTest as i };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,MAAM,WAAW,aAAa,GAAG,OAAO,MAAM,CAAC;AAC/C,MAAM,UAAU,CAAC,UAAY,WAAW,OAAO,EAAE,OAAO,kBAAkB;IAC1E,WAAW,IAAI,EAAE,IAAI,cAAc,kBAAkB;IACrD,WAAW,OAAO,IAAI,CAAC,UAAU,WAAW,UAAU;AACtD,MAAM,MAAM,IAAI,MAAM,UAAU;IAC9B,KAAI,CAAC,EAAE,IAAI;QACT,MAAM,OAAO;QACb,OAAO,IAAI,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK;IACrC;IACA,KAAI,CAAC,EAAE,IAAI;QACT,MAAM,OAAO;QACb,OAAO,QAAQ,QAAQ,QAAQ;IACjC;IACA,KAAI,CAAC,EAAE,IAAI,EAAE,KAAK;QAChB,MAAM,OAAO,QAAQ;QACrB,IAAI,CAAC,KAAK,GAAG;QACb,OAAO;IACT;IACA,gBAAe,CAAC,EAAE,IAAI;QACpB,IAAI,CAAC,MAAM;YACT,OAAO;QACT;QACA,MAAM,OAAO,QAAQ;QACrB,OAAO,IAAI,CAAC,KAAK;QACjB,OAAO;IACT;IACA;QACE,MAAM,OAAO,QAAQ;QACrB,OAAO,OAAO,IAAI,CAAC;IACrB;AACF;AACA,SAAS,UAAU,GAAG;IACpB,OAAO,MAAM,QAAQ,UAAU;AACjC;AACA,MAAM,UAAU,OAAO,YAAY,eAAe,QAAQ,GAAG,uDAA4B;AACzF,MAAM,eAAe,YAAY;AACjC,MAAM,gBAAgB,YAAY,SAAS,YAAY;AACvD,MAAM,SAAS,IAAM,YAAY,UAAU,UAAU,IAAI,IAAI;AAC7D,SAAS,UAAU,GAAG,EAAE,QAAQ;IAC9B,IAAI,OAAO,YAAY,eAAe,QAAQ,GAAG,EAAE;QACjD,OAAO,QAAQ,GAAG,CAAC,IAAI,IAAI;IAC7B;IACA,IAAI,OAAO,SAAS,aAAa;QAC/B,OAAO,KAAK,GAAG,CAAC,GAAG,CAAC,QAAQ;IAC9B;IACA,IAAI,OAAO,QAAQ,aAAa;QAC9B,OAAO,IAAI,GAAG,CAAC,IAAI,IAAI;IACzB;IACA,OAAO;AACT;AACA,SAAS,iBAAiB,GAAG,EAAE,WAAW,IAAI;IAC5C,MAAM,QAAQ,UAAU;IACxB,IAAI,CAAC,OAAO,OAAO;IACnB,OAAO,UAAU,OAAO,MAAM,WAAW,OAAO,WAAW,UAAU;AACvE;AACA,MAAM,MAAM;IACV,IAAI,kCAAiC;QACnC,OAAO,UACL,kCACA;IAEJ;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.DgGir396.mjs"],"sourcesContent":["import { g as getEnvVar, e as env } from './better-auth.CiuwFiHM.mjs';\n\nconst COLORS_2 = 1;\nconst COLORS_16 = 4;\nconst COLORS_256 = 8;\nconst COLORS_16m = 24;\nconst TERM_ENVS = {\n  eterm: COLORS_16,\n  cons25: COLORS_16,\n  console: COLORS_16,\n  cygwin: COLORS_16,\n  dtterm: COLORS_16,\n  gnome: COLORS_16,\n  hurd: COLORS_16,\n  jfbterm: COLORS_16,\n  konsole: COLORS_16,\n  kterm: COLORS_16,\n  mlterm: COLORS_16,\n  mosh: COLORS_16m,\n  putty: COLORS_16,\n  st: COLORS_16,\n  // http://lists.schmorp.de/pipermail/rxvt-unicode/2016q2/002261.html\n  \"rxvt-unicode-24bit\": COLORS_16m,\n  // https://bugs.launchpad.net/terminator/+bug/1030562\n  terminator: COLORS_16m,\n  \"xterm-kitty\": COLORS_16m\n};\nconst CI_ENVS_MAP = new Map(\n  Object.entries({\n    APPVEYOR: COLORS_256,\n    BUILDKITE: COLORS_256,\n    CIRCLECI: COLORS_16m,\n    DRONE: COLORS_256,\n    GITEA_ACTIONS: COLORS_16m,\n    GITHUB_ACTIONS: COLORS_16m,\n    GITLAB_CI: COLORS_256,\n    TRAVIS: COLORS_256\n  })\n);\nconst TERM_ENVS_REG_EXP = [\n  /ansi/,\n  /color/,\n  /linux/,\n  /direct/,\n  /^con[0-9]*x[0-9]/,\n  /^rxvt/,\n  /^screen/,\n  /^xterm/,\n  /^vt100/,\n  /^vt220/\n];\nfunction getColorDepth() {\n  if (getEnvVar(\"FORCE_COLOR\") !== void 0) {\n    switch (getEnvVar(\"FORCE_COLOR\")) {\n      case \"\":\n      case \"1\":\n      case \"true\":\n        return COLORS_16;\n      case \"2\":\n        return COLORS_256;\n      case \"3\":\n        return COLORS_16m;\n      default:\n        return COLORS_2;\n    }\n  }\n  if (getEnvVar(\"NODE_DISABLE_COLORS\") !== void 0 && getEnvVar(\"NODE_DISABLE_COLORS\") !== \"\" || // See https://no-color.org/\n  getEnvVar(\"NO_COLOR\") !== void 0 && getEnvVar(\"NO_COLOR\") !== \"\" || // The \"dumb\" special terminal, as defined by terminfo, doesn't support\n  // ANSI color control codes.\n  // See https://invisible-island.net/ncurses/terminfo.ti.html#toc-_Specials\n  getEnvVar(\"TERM\") === \"dumb\") {\n    return COLORS_2;\n  }\n  if (typeof process !== \"undefined\" && process.platform === \"win32\") {\n    return COLORS_16m;\n  }\n  if (getEnvVar(\"TMUX\")) {\n    return COLORS_16m;\n  }\n  if (\"TF_BUILD\" in env && \"AGENT_NAME\" in env) {\n    return COLORS_16;\n  }\n  if (\"CI\" in env) {\n    for (const { 0: envName, 1: colors } of CI_ENVS_MAP) {\n      if (envName in env) {\n        return colors;\n      }\n    }\n    if (getEnvVar(\"CI_NAME\") === \"codeship\") {\n      return COLORS_256;\n    }\n    return COLORS_2;\n  }\n  if (\"TEAMCITY_VERSION\" in env) {\n    return /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.exec(\n      getEnvVar(\"TEAMCITY_VERSION\")\n    ) !== null ? COLORS_16 : COLORS_2;\n  }\n  switch (getEnvVar(\"TERM_PROGRAM\")) {\n    case \"iTerm.app\":\n      if (!getEnvVar(\"TERM_PROGRAM_VERSION\") || /^[0-2]\\./.exec(getEnvVar(\"TERM_PROGRAM_VERSION\")) !== null) {\n        return COLORS_256;\n      }\n      return COLORS_16m;\n    case \"HyperTerm\":\n    case \"MacTerm\":\n      return COLORS_16m;\n    case \"Apple_Terminal\":\n      return COLORS_256;\n  }\n  if (getEnvVar(\"COLORTERM\") === \"truecolor\" || getEnvVar(\"COLORTERM\") === \"24bit\") {\n    return COLORS_16m;\n  }\n  if (getEnvVar(\"TERM\")) {\n    if (/truecolor/.exec(getEnvVar(\"TERM\")) !== null) {\n      return COLORS_16m;\n    }\n    if (/^xterm-256/.exec(getEnvVar(\"TERM\")) !== null) {\n      return COLORS_256;\n    }\n    const termEnv = getEnvVar(\"TERM\").toLowerCase();\n    if (TERM_ENVS[termEnv]) {\n      return TERM_ENVS[termEnv];\n    }\n    if (TERM_ENVS_REG_EXP.some((term) => term.exec(termEnv) !== null)) {\n      return COLORS_16;\n    }\n  }\n  if (getEnvVar(\"COLORTERM\")) {\n    return COLORS_16;\n  }\n  return COLORS_2;\n}\n\nconst colors = {\n  reset: \"\\x1B[0m\",\n  bright: \"\\x1B[1m\",\n  dim: \"\\x1B[2m\",\n  fg: {\n    red: \"\\x1B[31m\",\n    green: \"\\x1B[32m\",\n    yellow: \"\\x1B[33m\",\n    blue: \"\\x1B[34m\",\n    magenta: \"\\x1B[35m\"},\n  bg: {\n    black: \"\\x1B[40m\"}\n};\n\nconst levels = [\"info\", \"success\", \"warn\", \"error\", \"debug\"];\nfunction shouldPublishLog(currentLogLevel, logLevel) {\n  return levels.indexOf(logLevel) <= levels.indexOf(currentLogLevel);\n}\nconst levelColors = {\n  info: colors.fg.blue,\n  success: colors.fg.green,\n  warn: colors.fg.yellow,\n  error: colors.fg.red,\n  debug: colors.fg.magenta\n};\nconst formatMessage = (level, message, colorsEnabled) => {\n  const timestamp = (/* @__PURE__ */ new Date()).toISOString();\n  if (colorsEnabled) {\n    return `${colors.dim}${timestamp}${colors.reset} ${levelColors[level]}${level.toUpperCase()}${colors.reset} ${colors.bright}[Better Auth]:${colors.reset} ${message}`;\n  }\n  return `${timestamp} ${level.toUpperCase()} [Better Auth]: ${message}`;\n};\nconst createLogger = (options) => {\n  const enabled = options?.disabled !== true;\n  const logLevel = options?.level ?? \"error\";\n  const isDisableColorsSpecified = options?.disableColors !== void 0;\n  const colorsEnabled = isDisableColorsSpecified ? !options.disableColors : getColorDepth() !== 1;\n  const LogFunc = (level, message, args = []) => {\n    if (!enabled || !shouldPublishLog(logLevel, level)) {\n      return;\n    }\n    const formattedMessage = formatMessage(level, message, colorsEnabled);\n    if (!options || typeof options.log !== \"function\") {\n      if (level === \"error\") {\n        console.error(formattedMessage, ...args);\n      } else if (level === \"warn\") {\n        console.warn(formattedMessage, ...args);\n      } else {\n        console.log(formattedMessage, ...args);\n      }\n      return;\n    }\n    options.log(level === \"success\" ? \"info\" : level, message, ...args);\n  };\n  const logger2 = Object.fromEntries(\n    levels.map((level) => [\n      level,\n      (...[message, ...args]) => LogFunc(level, message, args)\n    ])\n  );\n  return {\n    ...logger2,\n    get level() {\n      return logLevel;\n    }\n  };\n};\nconst logger = createLogger();\n\nexport { logger as a, colors as b, createLogger as c, levels as l, shouldPublishLog as s };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.BTrSrKsi.mjs"],"sourcesContent":["import { a as logger } from './better-auth.DgGir396.mjs';\n\nfunction safeJSONParse(data) {\n  function reviver(_, value) {\n    if (typeof value === \"string\") {\n      const iso8601Regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?Z$/;\n      if (iso8601Regex.test(value)) {\n        const date = new Date(value);\n        if (!isNaN(date.getTime())) {\n          return date;\n        }\n      }\n    }\n    return value;\n  }\n  try {\n    if (typeof data !== \"string\") {\n      return data;\n    }\n    return JSON.parse(data, reviver);\n  } catch (e) {\n    logger.error(\"Error parsing JSON\", { error: e });\n    return null;\n  }\n}\n\nexport { safeJSONParse as s };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,SAAS,cAAc,IAAI;IACzB,SAAS,QAAQ,CAAC,EAAE,KAAK;QACvB,IAAI,OAAO,UAAU,UAAU;YAC7B,MAAM,eAAe;YACrB,IAAI,aAAa,IAAI,CAAC,QAAQ;gBAC5B,MAAM,OAAO,IAAI,KAAK;gBACtB,IAAI,CAAC,MAAM,KAAK,OAAO,KAAK;oBAC1B,OAAO;gBACT;YACF;QACF;QACA,OAAO;IACT;IACA,IAAI;QACF,IAAI,OAAO,SAAS,UAAU;YAC5B,OAAO;QACT;QACA,OAAO,KAAK,KAAK,CAAC,MAAM;IAC1B,EAAE,OAAO,GAAG;QACV,sYAAM,CAAC,KAAK,CAAC,sBAAsB;YAAE,OAAO;QAAE;QAC9C,OAAO;IACT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.BRFtaovt.mjs"],"sourcesContent":["import { e as env } from './better-auth.CiuwFiHM.mjs';\nimport { B as BetterAuthError } from './better-auth.DdzSJf-n.mjs';\n\nfunction checkHasPath(url) {\n  try {\n    const parsedUrl = new URL(url);\n    const pathname = parsedUrl.pathname.replace(/\\/+$/, \"\") || \"/\";\n    return pathname !== \"/\";\n  } catch (error) {\n    throw new BetterAuthError(\n      `Invalid base URL: ${url}. Please provide a valid base URL.`\n    );\n  }\n}\nfunction withPath(url, path = \"/api/auth\") {\n  const hasPath = checkHasPath(url);\n  if (hasPath) {\n    return url;\n  }\n  const trimmedUrl = url.replace(/\\/+$/, \"\");\n  if (!path || path === \"/\") {\n    return trimmedUrl;\n  }\n  path = path.startsWith(\"/\") ? path : `/${path}`;\n  return `${trimmedUrl}${path}`;\n}\nfunction getBaseURL(url, path, request, loadEnv) {\n  if (url) {\n    return withPath(url, path);\n  }\n  if (loadEnv !== false) {\n    const fromEnv = env.BETTER_AUTH_URL || env.NEXT_PUBLIC_BETTER_AUTH_URL || env.PUBLIC_BETTER_AUTH_URL || env.NUXT_PUBLIC_BETTER_AUTH_URL || env.NUXT_PUBLIC_AUTH_URL || (env.BASE_URL !== \"/\" ? env.BASE_URL : void 0);\n    if (fromEnv) {\n      return withPath(fromEnv, path);\n    }\n  }\n  const fromRequest = request?.headers.get(\"x-forwarded-host\");\n  const fromRequestProto = request?.headers.get(\"x-forwarded-proto\");\n  if (fromRequest && fromRequestProto) {\n    return withPath(`${fromRequestProto}://${fromRequest}`, path);\n  }\n  if (request) {\n    const url2 = getOrigin(request.url);\n    if (!url2) {\n      throw new BetterAuthError(\n        \"Could not get origin from request. Please provide a valid base URL.\"\n      );\n    }\n    return withPath(url2, path);\n  }\n  if (typeof window !== \"undefined\" && window.location) {\n    return withPath(window.location.origin, path);\n  }\n  return void 0;\n}\nfunction getOrigin(url) {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.origin;\n  } catch (error) {\n    return null;\n  }\n}\nfunction getProtocol(url) {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.protocol;\n  } catch (error) {\n    return null;\n  }\n}\nfunction getHost(url) {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.host;\n  } catch (error) {\n    return url;\n  }\n}\n\nexport { getBaseURL as a, getHost as b, getProtocol as c, getOrigin as g };\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;;;AAEA,SAAS,aAAa,GAAG;IACvB,IAAI;QACF,MAAM,YAAY,IAAI,IAAI;QAC1B,MAAM,WAAW,UAAU,QAAQ,CAAC,OAAO,CAAC,QAAQ,OAAO;QAC3D,OAAO,aAAa;IACtB,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,yYAAe,CACvB,CAAC,kBAAkB,EAAE,IAAI,kCAAkC,CAAC;IAEhE;AACF;AACA,SAAS,SAAS,GAAG,EAAE,OAAO,WAAW;IACvC,MAAM,UAAU,aAAa;IAC7B,IAAI,SAAS;QACX,OAAO;IACT;IACA,MAAM,aAAa,IAAI,OAAO,CAAC,QAAQ;IACvC,IAAI,CAAC,QAAQ,SAAS,KAAK;QACzB,OAAO;IACT;IACA,OAAO,KAAK,UAAU,CAAC,OAAO,OAAO,CAAC,CAAC,EAAE,MAAM;IAC/C,OAAO,GAAG,aAAa,MAAM;AAC/B;AACA,SAAS,WAAW,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO;IAC7C,IAAI,KAAK;QACP,OAAO,SAAS,KAAK;IACvB;IACA,IAAI,YAAY,OAAO;QACrB,MAAM,UAAU,sYAAG,CAAC,eAAe,IAAI,sYAAG,CAAC,2BAA2B,IAAI,sYAAG,CAAC,sBAAsB,IAAI,sYAAG,CAAC,2BAA2B,IAAI,sYAAG,CAAC,oBAAoB,IAAI,CAAC,sYAAG,CAAC,QAAQ,KAAK,MAAM,sYAAG,CAAC,QAAQ,GAAG,KAAK,CAAC;QACpN,IAAI,SAAS;YACX,OAAO,SAAS,SAAS;QAC3B;IACF;IACA,MAAM,cAAc,SAAS,QAAQ,IAAI;IACzC,MAAM,mBAAmB,SAAS,QAAQ,IAAI;IAC9C,IAAI,eAAe,kBAAkB;QACnC,OAAO,SAAS,GAAG,iBAAiB,GAAG,EAAE,aAAa,EAAE;IAC1D;IACA,IAAI,SAAS;QACX,MAAM,OAAO,UAAU,QAAQ,GAAG;QAClC,IAAI,CAAC,MAAM;YACT,MAAM,IAAI,yYAAe,CACvB;QAEJ;QACA,OAAO,SAAS,MAAM;IACxB;IACA;;IAGA,OAAO,KAAK;AACd;AACA,SAAS,UAAU,GAAG;IACpB,IAAI;QACF,MAAM,YAAY,IAAI,IAAI;QAC1B,OAAO,UAAU,MAAM;IACzB,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AACA,SAAS,YAAY,GAAG;IACtB,IAAI;QACF,MAAM,YAAY,IAAI,IAAI;QAC1B,OAAO,UAAU,QAAQ;IAC3B,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AACA,SAAS,QAAQ,GAAG;IAClB,IAAI;QACF,MAAM,YAAY,IAAI,IAAI;QAC1B,OAAO,UAAU,IAAI;IACvB,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 466, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.DiMXeqeq.mjs"],"sourcesContent":["import { B as BetterAuthError } from './better-auth.DdzSJf-n.mjs';\nimport { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { b as isProduction, e as env } from './better-auth.CiuwFiHM.mjs';\nimport { base64Url } from '@better-auth/utils/base64';\nimport { createHMAC } from '@better-auth/utils/hmac';\nimport { s as safeJSONParse } from './better-auth.BTrSrKsi.mjs';\nimport { a as getBaseURL } from './better-auth.BRFtaovt.mjs';\nimport { binary } from '@better-auth/utils/binary';\n\n//#region src/index.ts\nconst s = 1e3;\nconst m = s * 60;\nconst h = m * 60;\nconst d = h * 24;\nconst w = d * 7;\nconst y = d * 365.25;\nconst mo = y / 12;\nfunction ms(value, options) {\n\tif (typeof value === \"string\") return parse(value);\n\telse if (typeof value === \"number\") return format(value);\n\tthrow new Error(`Value provided to ms() must be a string or number. value=${JSON.stringify(value)}`);\n}\n/**\n* Parse the given string and return milliseconds.\n*\n* @param str - A string to parse to milliseconds\n* @returns The parsed value in milliseconds, or `NaN` if the string can't be\n* parsed\n*/\nfunction parse(str) {\n\tif (typeof str !== \"string\" || str.length === 0 || str.length > 100) throw new Error(`Value provided to ms.parse() must be a string with length between 1 and 99. value=${JSON.stringify(str)}`);\n\tconst match = /^(?<value>-?\\d*\\.?\\d+) *(?<unit>milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|months?|mo|years?|yrs?|y)?$/i.exec(str);\n\tif (!match?.groups) return NaN;\n\tconst { value, unit = \"ms\" } = match.groups;\n\tconst n = parseFloat(value);\n\tconst matchUnit = unit.toLowerCase();\n\t/* istanbul ignore next - istanbul doesn't understand, but thankfully the TypeScript the exhaustiveness check in the default case keeps us type safe here */\n\tswitch (matchUnit) {\n\t\tcase \"years\":\n\t\tcase \"year\":\n\t\tcase \"yrs\":\n\t\tcase \"yr\":\n\t\tcase \"y\": return n * y;\n\t\tcase \"months\":\n\t\tcase \"month\":\n\t\tcase \"mo\": return n * mo;\n\t\tcase \"weeks\":\n\t\tcase \"week\":\n\t\tcase \"w\": return n * w;\n\t\tcase \"days\":\n\t\tcase \"day\":\n\t\tcase \"d\": return n * d;\n\t\tcase \"hours\":\n\t\tcase \"hour\":\n\t\tcase \"hrs\":\n\t\tcase \"hr\":\n\t\tcase \"h\": return n * h;\n\t\tcase \"minutes\":\n\t\tcase \"minute\":\n\t\tcase \"mins\":\n\t\tcase \"min\":\n\t\tcase \"m\": return n * m;\n\t\tcase \"seconds\":\n\t\tcase \"second\":\n\t\tcase \"secs\":\n\t\tcase \"sec\":\n\t\tcase \"s\": return n * s;\n\t\tcase \"milliseconds\":\n\t\tcase \"millisecond\":\n\t\tcase \"msecs\":\n\t\tcase \"msec\":\n\t\tcase \"ms\": return n;\n\t\tdefault: throw new Error(`Unknown unit \"${matchUnit}\" provided to ms.parse(). value=${JSON.stringify(str)}`);\n\t}\n}\n/**\n* Short format for `ms`.\n*/\nfunction fmtShort(ms$1) {\n\tconst msAbs = Math.abs(ms$1);\n\tif (msAbs >= y) return `${Math.round(ms$1 / y)}y`;\n\tif (msAbs >= mo) return `${Math.round(ms$1 / mo)}mo`;\n\tif (msAbs >= w) return `${Math.round(ms$1 / w)}w`;\n\tif (msAbs >= d) return `${Math.round(ms$1 / d)}d`;\n\tif (msAbs >= h) return `${Math.round(ms$1 / h)}h`;\n\tif (msAbs >= m) return `${Math.round(ms$1 / m)}m`;\n\tif (msAbs >= s) return `${Math.round(ms$1 / s)}s`;\n\treturn `${ms$1}ms`;\n}\n/**\n* Format the given integer as a string.\n*\n* @param ms - milliseconds\n* @param options - Options for the conversion\n* @returns The formatted string\n*/\nfunction format(ms$1, options) {\n\tif (typeof ms$1 !== \"number\" || !Number.isFinite(ms$1)) throw new Error(\"Value provided to ms.format() must be of type number.\");\n\treturn fmtShort(ms$1);\n}\n\nfunction parseSetCookieHeader(setCookie) {\n  const cookies = /* @__PURE__ */ new Map();\n  const cookieArray = setCookie.split(\", \");\n  cookieArray.forEach((cookieString) => {\n    const parts = cookieString.split(\";\").map((part) => part.trim());\n    const [nameValue, ...attributes] = parts;\n    const [name, ...valueParts] = (nameValue || \"\").split(\"=\");\n    const value = valueParts.join(\"=\");\n    if (!name || value === void 0) {\n      return;\n    }\n    const attrObj = { value };\n    attributes.forEach((attribute) => {\n      const [attrName, ...attrValueParts] = attribute.split(\"=\");\n      const attrValue = attrValueParts.join(\"=\");\n      const normalizedAttrName = attrName.trim().toLowerCase();\n      switch (normalizedAttrName) {\n        case \"max-age\":\n          attrObj[\"max-age\"] = attrValue ? parseInt(attrValue.trim(), 10) : void 0;\n          break;\n        case \"expires\":\n          attrObj.expires = attrValue ? new Date(attrValue.trim()) : void 0;\n          break;\n        case \"domain\":\n          attrObj.domain = attrValue ? attrValue.trim() : void 0;\n          break;\n        case \"path\":\n          attrObj.path = attrValue ? attrValue.trim() : void 0;\n          break;\n        case \"secure\":\n          attrObj.secure = true;\n          break;\n        case \"httponly\":\n          attrObj.httponly = true;\n          break;\n        case \"samesite\":\n          attrObj.samesite = attrValue ? attrValue.trim().toLowerCase() : void 0;\n          break;\n        default:\n          attrObj[normalizedAttrName] = attrValue ? attrValue.trim() : true;\n          break;\n      }\n    });\n    cookies.set(name, attrObj);\n  });\n  return cookies;\n}\nfunction setCookieToHeader(headers) {\n  return (context) => {\n    const setCookieHeader = context.response.headers.get(\"set-cookie\");\n    if (!setCookieHeader) {\n      return;\n    }\n    const cookieMap = /* @__PURE__ */ new Map();\n    const existingCookiesHeader = headers.get(\"cookie\") || \"\";\n    existingCookiesHeader.split(\";\").forEach((cookie) => {\n      const [name, ...rest] = cookie.trim().split(\"=\");\n      if (name && rest.length > 0) {\n        cookieMap.set(name, rest.join(\"=\"));\n      }\n    });\n    const setCookieHeaders = setCookieHeader.split(\",\");\n    setCookieHeaders.forEach((header) => {\n      const cookies = parseSetCookieHeader(header);\n      cookies.forEach((value, name) => {\n        cookieMap.set(name, value.value);\n      });\n    });\n    const updatedCookies = Array.from(cookieMap.entries()).map(([name, value]) => `${name}=${value}`).join(\"; \");\n    headers.set(\"cookie\", updatedCookies);\n  };\n}\n\nfunction createCookieGetter(options) {\n  const secure = options.advanced?.useSecureCookies !== void 0 ? options.advanced?.useSecureCookies : options.baseURL !== void 0 ? options.baseURL.startsWith(\"https://\") ? true : false : isProduction;\n  const secureCookiePrefix = secure ? \"__Secure-\" : \"\";\n  const crossSubdomainEnabled = !!options.advanced?.crossSubDomainCookies?.enabled;\n  const domain = crossSubdomainEnabled ? options.advanced?.crossSubDomainCookies?.domain || (options.baseURL ? new URL(options.baseURL).hostname : void 0) : void 0;\n  if (crossSubdomainEnabled && !domain) {\n    throw new BetterAuthError(\n      \"baseURL is required when crossSubdomainCookies are enabled\"\n    );\n  }\n  function createCookie(cookieName, overrideAttributes = {}) {\n    const prefix = options.advanced?.cookiePrefix || \"better-auth\";\n    const name = options.advanced?.cookies?.[cookieName]?.name || `${prefix}.${cookieName}`;\n    const attributes = options.advanced?.cookies?.[cookieName]?.attributes;\n    return {\n      name: `${secureCookiePrefix}${name}`,\n      attributes: {\n        secure: !!secureCookiePrefix,\n        sameSite: \"lax\",\n        path: \"/\",\n        httpOnly: true,\n        ...crossSubdomainEnabled ? { domain } : {},\n        ...options.advanced?.defaultCookieAttributes,\n        ...overrideAttributes,\n        ...attributes\n      }\n    };\n  }\n  return createCookie;\n}\nfunction getCookies(options) {\n  const createCookie = createCookieGetter(options);\n  const sessionMaxAge = options.session?.expiresIn || ms(\"7d\") / 1e3;\n  const sessionToken = createCookie(\"session_token\", {\n    maxAge: sessionMaxAge\n  });\n  const sessionData = createCookie(\"session_data\", {\n    maxAge: options.session?.cookieCache?.maxAge || 60 * 5\n  });\n  const dontRememberToken = createCookie(\"dont_remember\");\n  return {\n    sessionToken: {\n      name: sessionToken.name,\n      options: sessionToken.attributes\n    },\n    /**\n     * This cookie is used to store the session data in the cookie\n     * This is useful for when you want to cache the session in the cookie\n     */\n    sessionData: {\n      name: sessionData.name,\n      options: sessionData.attributes\n    },\n    dontRememberToken: {\n      name: dontRememberToken.name,\n      options: dontRememberToken.attributes\n    }\n  };\n}\nasync function setCookieCache(ctx, session, dontRememberMe) {\n  const shouldStoreSessionDataInCookie = ctx.context.options.session?.cookieCache?.enabled;\n  if (shouldStoreSessionDataInCookie) {\n    const filteredSession = Object.entries(session.session).reduce(\n      (acc, [key, value]) => {\n        const fieldConfig = ctx.context.options.session?.additionalFields?.[key];\n        if (!fieldConfig || fieldConfig.returned !== false) {\n          acc[key] = value;\n        }\n        return acc;\n      },\n      {}\n    );\n    const sessionData = { session: filteredSession, user: session.user };\n    const options = {\n      ...ctx.context.authCookies.sessionData.options,\n      maxAge: dontRememberMe ? void 0 : ctx.context.authCookies.sessionData.options.maxAge\n    };\n    const expiresAtDate = getDate(options.maxAge || 60, \"sec\").getTime();\n    const data = base64Url.encode(\n      JSON.stringify({\n        session: sessionData,\n        expiresAt: expiresAtDate,\n        signature: await createHMAC(\"SHA-256\", \"base64urlnopad\").sign(\n          ctx.context.secret,\n          JSON.stringify({\n            ...sessionData,\n            expiresAt: expiresAtDate\n          })\n        )\n      }),\n      {\n        padding: false\n      }\n    );\n    if (data.length > 4093) {\n      ctx.context?.logger?.error(\n        `Session data exceeds cookie size limit (${data.length} bytes > 4093 bytes). Consider reducing session data size or disabling cookie cache. Session will not be cached in cookie.`\n      );\n      return;\n    }\n    ctx.setCookie(ctx.context.authCookies.sessionData.name, data, options);\n  }\n}\nasync function setSessionCookie(ctx, session, dontRememberMe, overrides) {\n  const dontRememberMeCookie = await ctx.getSignedCookie(\n    ctx.context.authCookies.dontRememberToken.name,\n    ctx.context.secret\n  );\n  dontRememberMe = dontRememberMe !== void 0 ? dontRememberMe : !!dontRememberMeCookie;\n  const options = ctx.context.authCookies.sessionToken.options;\n  const maxAge = dontRememberMe ? void 0 : ctx.context.sessionConfig.expiresIn;\n  await ctx.setSignedCookie(\n    ctx.context.authCookies.sessionToken.name,\n    session.session.token,\n    ctx.context.secret,\n    {\n      ...options,\n      maxAge,\n      ...overrides\n    }\n  );\n  if (dontRememberMe) {\n    await ctx.setSignedCookie(\n      ctx.context.authCookies.dontRememberToken.name,\n      \"true\",\n      ctx.context.secret,\n      ctx.context.authCookies.dontRememberToken.options\n    );\n  }\n  await setCookieCache(ctx, session, dontRememberMe);\n  ctx.context.setNewSession(session);\n  if (ctx.context.options.secondaryStorage) {\n    await ctx.context.secondaryStorage?.set(\n      session.session.token,\n      JSON.stringify({\n        user: session.user,\n        session: session.session\n      }),\n      Math.floor(\n        (new Date(session.session.expiresAt).getTime() - Date.now()) / 1e3\n      )\n    );\n  }\n}\nfunction deleteSessionCookie(ctx, skipDontRememberMe) {\n  ctx.setCookie(ctx.context.authCookies.sessionToken.name, \"\", {\n    ...ctx.context.authCookies.sessionToken.options,\n    maxAge: 0\n  });\n  ctx.setCookie(ctx.context.authCookies.sessionData.name, \"\", {\n    ...ctx.context.authCookies.sessionData.options,\n    maxAge: 0\n  });\n  if (!skipDontRememberMe) {\n    ctx.setCookie(ctx.context.authCookies.dontRememberToken.name, \"\", {\n      ...ctx.context.authCookies.dontRememberToken.options,\n      maxAge: 0\n    });\n  }\n}\nfunction parseCookies(cookieHeader) {\n  const cookies = cookieHeader.split(\"; \");\n  const cookieMap = /* @__PURE__ */ new Map();\n  cookies.forEach((cookie) => {\n    const [name, value] = cookie.split(\"=\");\n    cookieMap.set(name, value);\n  });\n  return cookieMap;\n}\nconst getSessionCookie = (request, config) => {\n  if (config?.cookiePrefix) {\n    if (config.cookieName) {\n      config.cookiePrefix = `${config.cookiePrefix}-`;\n    } else {\n      config.cookiePrefix = `${config.cookiePrefix}.`;\n    }\n  }\n  const headers = \"headers\" in request ? request.headers : request;\n  const req = request instanceof Request ? request : void 0;\n  getBaseURL(req?.url, config?.path, req);\n  const cookies = headers.get(\"cookie\");\n  if (!cookies) {\n    return null;\n  }\n  const { cookieName = \"session_token\", cookiePrefix = \"better-auth.\" } = config || {};\n  const name = `${cookiePrefix}${cookieName}`;\n  const secureCookieName = `__Secure-${name}`;\n  const parsedCookie = parseCookies(cookies);\n  const sessionToken = parsedCookie.get(name) || parsedCookie.get(secureCookieName);\n  if (sessionToken) {\n    return sessionToken;\n  }\n  return null;\n};\nconst getCookieCache = async (request, config) => {\n  const headers = request instanceof Headers ? request : request.headers;\n  const cookies = headers.get(\"cookie\");\n  if (!cookies) {\n    return null;\n  }\n  const { cookieName = \"session_data\", cookiePrefix = \"better-auth\" } = config || {};\n  const name = config?.isSecure !== void 0 ? config.isSecure ? `__Secure-${cookiePrefix}.${cookieName}` : `${cookiePrefix}.${cookieName}` : isProduction ? `__Secure-${cookiePrefix}.${cookieName}` : `${cookiePrefix}.${cookieName}`;\n  const parsedCookie = parseCookies(cookies);\n  const sessionData = parsedCookie.get(name);\n  if (sessionData) {\n    const sessionDataPayload = safeJSONParse(binary.decode(base64Url.decode(sessionData)));\n    if (!sessionDataPayload) {\n      return null;\n    }\n    const secret = config?.secret || env.BETTER_AUTH_SECRET;\n    if (!secret) {\n      throw new BetterAuthError(\n        \"getCookieCache requires a secret to be provided. Either pass it as an option or set the BETTER_AUTH_SECRET environment variable\"\n      );\n    }\n    const isValid = await createHMAC(\"SHA-256\", \"base64urlnopad\").verify(\n      secret,\n      JSON.stringify({\n        ...sessionDataPayload.session,\n        expiresAt: sessionDataPayload.expiresAt\n      }),\n      sessionDataPayload.signature\n    );\n    if (!isValid) {\n      return null;\n    }\n    return sessionDataPayload.session;\n  }\n  return null;\n};\n\nexport { parseCookies as a, setCookieCache as b, createCookieGetter as c, deleteSessionCookie as d, setCookieToHeader as e, getSessionCookie as f, getCookies as g, getCookieCache as h, ms as m, parseSetCookieHeader as p, setSessionCookie as s };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 877, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.D2xndZ2p.mjs"],"sourcesContent":["function defineErrorCodes(codes) {\n  return codes;\n}\n\nexport { defineErrorCodes as d };\n"],"names":[],"mappings":";;;;AAAA,SAAS,iBAAiB,KAAK;IAC7B,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 889, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.C5vDERgF.mjs"],"sourcesContent":["import { createMiddleware, createEndpoint, APIError } from 'better-call';\nimport { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { d as deleteSessionCookie, s as setSessionCookie, b as setCookieCache } from './better-auth.DiMXeqeq.mjs';\nimport * as z from 'zod';\nimport { s as safeJSONParse } from './better-auth.BTrSrKsi.mjs';\nimport { d as defineErrorCodes } from './better-auth.D2xndZ2p.mjs';\nimport { createHMAC } from '@better-auth/utils/hmac';\nimport { base64Url } from '@better-auth/utils/base64';\nimport { binary } from '@better-auth/utils/binary';\n\nconst optionsMiddleware = createMiddleware(async () => {\n  return {};\n});\nconst createAuthMiddleware = createMiddleware.create({\n  use: [\n    optionsMiddleware,\n    /**\n     * Only use for post hooks\n     */\n    createMiddleware(async () => {\n      return {};\n    })\n  ]\n});\nconst createAuthEndpoint = createEndpoint.create({\n  use: [optionsMiddleware]\n});\n\nconst BASE_ERROR_CODES = defineErrorCodes({\n  USER_NOT_FOUND: \"User not found\",\n  FAILED_TO_CREATE_USER: \"Failed to create user\",\n  FAILED_TO_CREATE_SESSION: \"Failed to create session\",\n  FAILED_TO_UPDATE_USER: \"Failed to update user\",\n  FAILED_TO_GET_SESSION: \"Failed to get session\",\n  INVALID_PASSWORD: \"Invalid password\",\n  INVALID_EMAIL: \"Invalid email\",\n  INVALID_EMAIL_OR_PASSWORD: \"Invalid email or password\",\n  SOCIAL_ACCOUNT_ALREADY_LINKED: \"Social account already linked\",\n  PROVIDER_NOT_FOUND: \"Provider not found\",\n  INVALID_TOKEN: \"Invalid token\",\n  ID_TOKEN_NOT_SUPPORTED: \"id_token not supported\",\n  FAILED_TO_GET_USER_INFO: \"Failed to get user info\",\n  USER_EMAIL_NOT_FOUND: \"User email not found\",\n  EMAIL_NOT_VERIFIED: \"Email not verified\",\n  PASSWORD_TOO_SHORT: \"Password too short\",\n  PASSWORD_TOO_LONG: \"Password too long\",\n  USER_ALREADY_EXISTS: \"User already exists.\",\n  USER_ALREADY_EXISTS_USE_ANOTHER_EMAIL: \"User already exists. Use another email.\",\n  EMAIL_CAN_NOT_BE_UPDATED: \"Email can not be updated\",\n  CREDENTIAL_ACCOUNT_NOT_FOUND: \"Credential account not found\",\n  SESSION_EXPIRED: \"Session expired. Re-authenticate to perform this action.\",\n  FAILED_TO_UNLINK_LAST_ACCOUNT: \"You can't unlink your last account\",\n  ACCOUNT_NOT_FOUND: \"Account not found\",\n  USER_ALREADY_HAS_PASSWORD: \"User already has a password. Provide that to delete the account.\"\n});\n\nconst getSessionQuerySchema = z.optional(\n  z.object({\n    /**\n     * If cookie cache is enabled, it will disable the cache\n     * and fetch the session from the database\n     */\n    disableCookieCache: z.coerce.boolean().meta({\n      description: \"Disable cookie cache and fetch session from database\"\n    }).optional(),\n    disableRefresh: z.coerce.boolean().meta({\n      description: \"Disable session refresh. Useful for checking session status, without updating the session\"\n    }).optional()\n  })\n);\nconst getSession = () => createAuthEndpoint(\n  \"/get-session\",\n  {\n    method: \"GET\",\n    query: getSessionQuerySchema,\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"Get the current session\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    session: {\n                      $ref: \"#/components/schemas/Session\"\n                    },\n                    user: {\n                      $ref: \"#/components/schemas/User\"\n                    }\n                  },\n                  required: [\"session\", \"user\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    try {\n      const sessionCookieToken = await ctx.getSignedCookie(\n        ctx.context.authCookies.sessionToken.name,\n        ctx.context.secret\n      );\n      if (!sessionCookieToken) {\n        return null;\n      }\n      const sessionDataCookie = ctx.getCookie(\n        ctx.context.authCookies.sessionData.name\n      );\n      const sessionDataPayload = sessionDataCookie ? safeJSONParse(binary.decode(base64Url.decode(sessionDataCookie))) : null;\n      if (sessionDataPayload) {\n        const isValid = await createHMAC(\"SHA-256\", \"base64urlnopad\").verify(\n          ctx.context.secret,\n          JSON.stringify({\n            ...sessionDataPayload.session,\n            expiresAt: sessionDataPayload.expiresAt\n          }),\n          sessionDataPayload.signature\n        );\n        if (!isValid) {\n          const dataCookie = ctx.context.authCookies.sessionData.name;\n          ctx.setCookie(dataCookie, \"\", {\n            maxAge: 0\n          });\n          return ctx.json(null);\n        }\n      }\n      const dontRememberMe = await ctx.getSignedCookie(\n        ctx.context.authCookies.dontRememberToken.name,\n        ctx.context.secret\n      );\n      if (sessionDataPayload?.session && ctx.context.options.session?.cookieCache?.enabled && !ctx.query?.disableCookieCache) {\n        const session2 = sessionDataPayload.session;\n        const hasExpired = sessionDataPayload.expiresAt < Date.now() || session2.session.expiresAt < /* @__PURE__ */ new Date();\n        if (!hasExpired) {\n          ctx.context.session = session2;\n          return ctx.json(\n            session2\n          );\n        } else {\n          const dataCookie = ctx.context.authCookies.sessionData.name;\n          ctx.setCookie(dataCookie, \"\", {\n            maxAge: 0\n          });\n        }\n      }\n      const session = await ctx.context.internalAdapter.findSession(sessionCookieToken);\n      ctx.context.session = session;\n      if (!session || session.session.expiresAt < /* @__PURE__ */ new Date()) {\n        deleteSessionCookie(ctx);\n        if (session) {\n          await ctx.context.internalAdapter.deleteSession(\n            session.session.token\n          );\n        }\n        return ctx.json(null);\n      }\n      if (dontRememberMe || ctx.query?.disableRefresh) {\n        return ctx.json(\n          session\n        );\n      }\n      const expiresIn = ctx.context.sessionConfig.expiresIn;\n      const updateAge = ctx.context.sessionConfig.updateAge;\n      const sessionIsDueToBeUpdatedDate = session.session.expiresAt.valueOf() - expiresIn * 1e3 + updateAge * 1e3;\n      const shouldBeUpdated = sessionIsDueToBeUpdatedDate <= Date.now();\n      if (shouldBeUpdated && (!ctx.query?.disableRefresh || !ctx.context.options.session?.disableSessionRefresh)) {\n        const updatedSession = await ctx.context.internalAdapter.updateSession(\n          session.session.token,\n          {\n            expiresAt: getDate(ctx.context.sessionConfig.expiresIn, \"sec\"),\n            updatedAt: /* @__PURE__ */ new Date()\n          }\n        );\n        if (!updatedSession) {\n          deleteSessionCookie(ctx);\n          return ctx.json(null, { status: 401 });\n        }\n        const maxAge = (updatedSession.expiresAt.valueOf() - Date.now()) / 1e3;\n        await setSessionCookie(\n          ctx,\n          {\n            session: updatedSession,\n            user: session.user\n          },\n          false,\n          {\n            maxAge\n          }\n        );\n        return ctx.json({\n          session: updatedSession,\n          user: session.user\n        });\n      }\n      await setCookieCache(ctx, session, !!dontRememberMe);\n      return ctx.json(\n        session\n      );\n    } catch (error) {\n      ctx.context.logger.error(\"INTERNAL_SERVER_ERROR\", error);\n      throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n        message: BASE_ERROR_CODES.FAILED_TO_GET_SESSION\n      });\n    }\n  }\n);\nconst getSessionFromCtx = async (ctx, config) => {\n  if (ctx.context.session) {\n    return ctx.context.session;\n  }\n  const session = await getSession()({\n    ...ctx,\n    asResponse: false,\n    headers: ctx.headers,\n    returnHeaders: false,\n    query: {\n      ...config,\n      ...ctx.query\n    }\n  }).catch((e) => {\n    return null;\n  });\n  ctx.context.session = session;\n  return session;\n};\nconst sessionMiddleware = createAuthMiddleware(async (ctx) => {\n  const session = await getSessionFromCtx(ctx);\n  if (!session?.session) {\n    throw new APIError(\"UNAUTHORIZED\");\n  }\n  return {\n    session\n  };\n});\nconst sensitiveSessionMiddleware = createAuthMiddleware(async (ctx) => {\n  const session = await getSessionFromCtx(ctx, { disableCookieCache: true });\n  if (!session?.session) {\n    throw new APIError(\"UNAUTHORIZED\");\n  }\n  return {\n    session\n  };\n});\nconst requestOnlySessionMiddleware = createAuthMiddleware(\n  async (ctx) => {\n    const session = await getSessionFromCtx(ctx);\n    if (!session?.session && (ctx.request || ctx.headers)) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    return { session };\n  }\n);\nconst freshSessionMiddleware = createAuthMiddleware(async (ctx) => {\n  const session = await getSessionFromCtx(ctx);\n  if (!session?.session) {\n    throw new APIError(\"UNAUTHORIZED\");\n  }\n  if (ctx.context.sessionConfig.freshAge === 0) {\n    return {\n      session\n    };\n  }\n  const freshAge = ctx.context.sessionConfig.freshAge;\n  const lastUpdated = session.session.updatedAt?.valueOf() || session.session.createdAt.valueOf();\n  const now = Date.now();\n  const isFresh = now - lastUpdated < freshAge * 1e3;\n  if (!isFresh) {\n    throw new APIError(\"FORBIDDEN\", {\n      message: \"Session is not fresh\"\n    });\n  }\n  return {\n    session\n  };\n});\nconst listSessions = () => createAuthEndpoint(\n  \"/list-sessions\",\n  {\n    method: \"GET\",\n    use: [sessionMiddleware],\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"List all active sessions for the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"array\",\n                  items: {\n                    $ref: \"#/components/schemas/Session\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    try {\n      const sessions = await ctx.context.internalAdapter.listSessions(\n        ctx.context.session.user.id\n      );\n      const activeSessions = sessions.filter((session) => {\n        return session.expiresAt > /* @__PURE__ */ new Date();\n      });\n      return ctx.json(\n        activeSessions\n      );\n    } catch (e) {\n      ctx.context.logger.error(e);\n      throw ctx.error(\"INTERNAL_SERVER_ERROR\");\n    }\n  }\n);\nconst revokeSession = createAuthEndpoint(\n  \"/revoke-session\",\n  {\n    method: \"POST\",\n    body: z.object({\n      token: z.string().meta({\n        description: \"The token to revoke\"\n      })\n    }),\n    use: [sensitiveSessionMiddleware],\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"Revoke a single session\",\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  token: {\n                    type: \"string\",\n                    description: \"The token to revoke\"\n                  }\n                },\n                required: [\"token\"]\n              }\n            }\n          }\n        },\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\",\n                      description: \"Indicates if the session was revoked successfully\"\n                    }\n                  },\n                  required: [\"status\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const token = ctx.body.token;\n    const findSession = await ctx.context.internalAdapter.findSession(token);\n    if (!findSession) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Session not found\"\n      });\n    }\n    if (findSession.session.userId !== ctx.context.session.user.id) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    try {\n      await ctx.context.internalAdapter.deleteSession(token);\n    } catch (error) {\n      ctx.context.logger.error(\n        error && typeof error === \"object\" && \"name\" in error ? error.name : \"\",\n        error\n      );\n      throw new APIError(\"INTERNAL_SERVER_ERROR\");\n    }\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst revokeSessions = createAuthEndpoint(\n  \"/revoke-sessions\",\n  {\n    method: \"POST\",\n    use: [sensitiveSessionMiddleware],\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"Revoke all sessions for the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\",\n                      description: \"Indicates if all sessions were revoked successfully\"\n                    }\n                  },\n                  required: [\"status\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    try {\n      await ctx.context.internalAdapter.deleteSessions(\n        ctx.context.session.user.id\n      );\n    } catch (error) {\n      ctx.context.logger.error(\n        error && typeof error === \"object\" && \"name\" in error ? error.name : \"\",\n        error\n      );\n      throw new APIError(\"INTERNAL_SERVER_ERROR\");\n    }\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst revokeOtherSessions = createAuthEndpoint(\n  \"/revoke-other-sessions\",\n  {\n    method: \"POST\",\n    requireHeaders: true,\n    use: [sensitiveSessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Revoke all other sessions for the user except the current one\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\",\n                      description: \"Indicates if all other sessions were revoked successfully\"\n                    }\n                  },\n                  required: [\"status\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    if (!session.user) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    const sessions = await ctx.context.internalAdapter.listSessions(\n      session.user.id\n    );\n    const activeSessions = sessions.filter((session2) => {\n      return session2.expiresAt > /* @__PURE__ */ new Date();\n    });\n    const otherSessions = activeSessions.filter(\n      (session2) => session2.token !== ctx.context.session.session.token\n    );\n    await Promise.all(\n      otherSessions.map(\n        (session2) => ctx.context.internalAdapter.deleteSession(session2.token)\n      )\n    );\n    return ctx.json({\n      status: true\n    });\n  }\n);\n\nexport { BASE_ERROR_CODES as B, createAuthEndpoint as a, getSession as b, createAuthMiddleware as c, revokeSessions as d, revokeSession as e, freshSessionMiddleware as f, getSessionFromCtx as g, getSessionQuerySchema as h, sensitiveSessionMiddleware as i, requestOnlySessionMiddleware as j, listSessions as l, optionsMiddleware as o, revokeOtherSessions as r, sessionMiddleware as s };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1392, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.B4Qoxdgc.mjs"],"sourcesContent":["import { createRandomStringGenerator } from '@better-auth/utils/random';\n\nconst generateRandomString = createRandomStringGenerator(\n  \"a-z\",\n  \"0-9\",\n  \"A-Z\",\n  \"-_\"\n);\n\nexport { generateRandomString as g };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,uBAAuB,IAAA,iQAA2B,EACtD,OACA,OACA,OACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1404, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.BUPPRXfK.mjs"],"sourcesContent":["import { createRandomStringGenerator } from '@better-auth/utils/random';\n\nconst generateId = (size) => {\n  return createRandomStringGenerator(\"a-z\", \"A-Z\", \"0-9\")(size || 32);\n};\n\nexport { generateId as g };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,aAAa,CAAC;IAClB,OAAO,IAAA,iQAA2B,EAAC,OAAO,OAAO,OAAO,QAAQ;AAClE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1418, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.BLnvK9hk.mjs"],"sourcesContent":["import { APIError } from 'better-call';\n\nconst cache = /* @__PURE__ */ new WeakMap();\nfunction parseOutputData(data, schema) {\n  const fields = schema.fields;\n  const parsedData = {};\n  for (const key in data) {\n    const field = fields[key];\n    if (!field) {\n      parsedData[key] = data[key];\n      continue;\n    }\n    if (field.returned === false) {\n      continue;\n    }\n    parsedData[key] = data[key];\n  }\n  return parsedData;\n}\nfunction getAllFields(options, table) {\n  if (!cache.has(options)) {\n    cache.set(options, /* @__PURE__ */ new Map());\n  }\n  const tableCache = cache.get(options);\n  if (tableCache.has(table)) {\n    return tableCache.get(table);\n  }\n  let schema = {\n    ...table === \"user\" ? options.user?.additionalFields : {},\n    ...table === \"session\" ? options.session?.additionalFields : {}\n  };\n  for (const plugin of options.plugins || []) {\n    if (plugin.schema && plugin.schema[table]) {\n      schema = {\n        ...schema,\n        ...plugin.schema[table].fields\n      };\n    }\n  }\n  cache.get(options).set(table, schema);\n  return schema;\n}\nfunction parseUserOutput(options, user) {\n  const schema = getAllFields(options, \"user\");\n  return parseOutputData(user, { fields: schema });\n}\nfunction parseAccountOutput(options, account) {\n  const schema = getAllFields(options, \"account\");\n  return parseOutputData(account, { fields: schema });\n}\nfunction parseSessionOutput(options, session) {\n  const schema = getAllFields(options, \"session\");\n  return parseOutputData(session, { fields: schema });\n}\nfunction parseInputData(data, schema) {\n  const action = schema.action || \"create\";\n  const fields = schema.fields;\n  const parsedData = Object.assign(\n    /* @__PURE__ */ Object.create(null),\n    null\n  );\n  for (const key in fields) {\n    if (key in data) {\n      if (fields[key].input === false) {\n        if (fields[key].defaultValue) {\n          parsedData[key] = fields[key].defaultValue;\n          continue;\n        }\n        if (parsedData[key]) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: `${key} is not allowed to be set`\n          });\n        }\n        continue;\n      }\n      if (fields[key].validator?.input && data[key] !== void 0) {\n        parsedData[key] = fields[key].validator.input.parse(data[key]);\n        continue;\n      }\n      if (fields[key].transform?.input && data[key] !== void 0) {\n        parsedData[key] = fields[key].transform?.input(data[key]);\n        continue;\n      }\n      parsedData[key] = data[key];\n      continue;\n    }\n    if (fields[key].defaultValue && action === \"create\") {\n      parsedData[key] = fields[key].defaultValue;\n      continue;\n    }\n    if (fields[key].required && action === \"create\") {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: `${key} is required`\n      });\n    }\n  }\n  return parsedData;\n}\nfunction parseUserInput(options, user = {}, action) {\n  const schema = getAllFields(options, \"user\");\n  return parseInputData(user, { fields: schema, action });\n}\nfunction parseAdditionalUserInput(options, user) {\n  const schema = getAllFields(options, \"user\");\n  return parseInputData(user || {}, { fields: schema });\n}\nfunction parseAccountInput(options, account) {\n  const schema = getAllFields(options, \"account\");\n  return parseInputData(account, { fields: schema });\n}\nfunction parseSessionInput(options, session) {\n  const schema = getAllFields(options, \"session\");\n  return parseInputData(session, { fields: schema });\n}\nfunction mergeSchema(schema, newSchema) {\n  if (!newSchema) {\n    return schema;\n  }\n  for (const table in newSchema) {\n    const newModelName = newSchema[table]?.modelName;\n    if (newModelName) {\n      schema[table].modelName = newModelName;\n    }\n    for (const field in schema[table].fields) {\n      const newField = newSchema[table]?.fields?.[field];\n      if (!newField) {\n        continue;\n      }\n      schema[table].fields[field].fieldName = newField;\n    }\n  }\n  return schema;\n}\n\nexport { parseAccountOutput as a, parseSessionOutput as b, parseInputData as c, parseUserInput as d, parseAdditionalUserInput as e, parseAccountInput as f, parseSessionInput as g, mergeSchema as m, parseUserOutput as p };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1588, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.BQOp-6ij.mjs"],"sourcesContent":["import { i as isTest, a as isDevelopment } from './better-auth.CiuwFiHM.mjs';\nimport { z } from 'zod';\n\nfunction getIp(req, options) {\n  if (options.advanced?.ipAddress?.disableIpTracking) {\n    return null;\n  }\n  if (isTest()) {\n    return \"127.0.0.1\";\n  }\n  if (isDevelopment) {\n    return \"127.0.0.1\";\n  }\n  const headers = \"headers\" in req ? req.headers : req;\n  const defaultHeaders = [\"x-forwarded-for\"];\n  const ipHeaders = options.advanced?.ipAddress?.ipAddressHeaders || defaultHeaders;\n  for (const key of ipHeaders) {\n    const value = \"get\" in headers ? headers.get(key) : headers[key];\n    if (typeof value === \"string\") {\n      const ip = value.split(\",\")[0].trim();\n      if (isValidIP(ip)) {\n        return ip;\n      }\n    }\n  }\n  return null;\n}\nfunction isValidIP(ip) {\n  const ipv4 = z.ipv4().safeParse(ip);\n  if (ipv4.success) {\n    return true;\n  }\n  const ipv6 = z.ipv6().safeParse(ip);\n  if (ipv6.success) {\n    return true;\n  }\n  return false;\n}\n\nexport { getIp as g };\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,SAAS,MAAM,GAAG,EAAE,OAAO;IACzB,IAAI,QAAQ,QAAQ,EAAE,WAAW,mBAAmB;QAClD,OAAO;IACT;IACA,IAAI,IAAA,sYAAM,KAAI;QACZ,OAAO;IACT;IACA,IAAI,sYAAa,EAAE;QACjB,OAAO;IACT;IACA,MAAM,UAAU,aAAa,MAAM,IAAI,OAAO,GAAG;IACjD,MAAM,iBAAiB;QAAC;KAAkB;IAC1C,MAAM,YAAY,QAAQ,QAAQ,EAAE,WAAW,oBAAoB;IACnE,KAAK,MAAM,OAAO,UAAW;QAC3B,MAAM,QAAQ,SAAS,UAAU,QAAQ,GAAG,CAAC,OAAO,OAAO,CAAC,IAAI;QAChE,IAAI,OAAO,UAAU,UAAU;YAC7B,MAAM,KAAK,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI;YACnC,IAAI,UAAU,KAAK;gBACjB,OAAO;YACT;QACF;IACF;IACA,OAAO;AACT;AACA,SAAS,UAAU,EAAE;IACnB,MAAM,OAAO,mOAAC,CAAC,IAAI,GAAG,SAAS,CAAC;IAChC,IAAI,KAAK,OAAO,EAAE;QAChB,OAAO;IACT;IACA,MAAM,OAAO,mOAAC,CAAC,IAAI,GAAG,SAAS,CAAC;IAChC,IAAI,KAAK,OAAO,EAAE;QAChB,OAAO;IACT;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1638, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.DhziC0ap.mjs"],"sourcesContent":["const getAuthTables = (options) => {\n  const pluginSchema = (options.plugins ?? []).reduce(\n    (acc, plugin) => {\n      const schema = plugin.schema;\n      if (!schema) return acc;\n      for (const [key, value] of Object.entries(schema)) {\n        acc[key] = {\n          fields: {\n            ...acc[key]?.fields,\n            ...value.fields\n          },\n          modelName: value.modelName || key\n        };\n      }\n      return acc;\n    },\n    {}\n  );\n  const shouldAddRateLimitTable = options.rateLimit?.storage === \"database\";\n  const rateLimitTable = {\n    rateLimit: {\n      modelName: options.rateLimit?.modelName || \"rateLimit\",\n      fields: {\n        key: {\n          type: \"string\",\n          fieldName: options.rateLimit?.fields?.key || \"key\"\n        },\n        count: {\n          type: \"number\",\n          fieldName: options.rateLimit?.fields?.count || \"count\"\n        },\n        lastRequest: {\n          type: \"number\",\n          bigint: true,\n          fieldName: options.rateLimit?.fields?.lastRequest || \"lastRequest\"\n        }\n      }\n    }\n  };\n  const { user, session, account, ...pluginTables } = pluginSchema;\n  const sessionTable = {\n    session: {\n      modelName: options.session?.modelName || \"session\",\n      fields: {\n        expiresAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.session?.fields?.expiresAt || \"expiresAt\"\n        },\n        token: {\n          type: \"string\",\n          required: true,\n          fieldName: options.session?.fields?.token || \"token\",\n          unique: true\n        },\n        createdAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.session?.fields?.createdAt || \"createdAt\",\n          defaultValue: () => /* @__PURE__ */ new Date()\n        },\n        updatedAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.session?.fields?.updatedAt || \"updatedAt\",\n          onUpdate: () => /* @__PURE__ */ new Date()\n        },\n        ipAddress: {\n          type: \"string\",\n          required: false,\n          fieldName: options.session?.fields?.ipAddress || \"ipAddress\"\n        },\n        userAgent: {\n          type: \"string\",\n          required: false,\n          fieldName: options.session?.fields?.userAgent || \"userAgent\"\n        },\n        userId: {\n          type: \"string\",\n          fieldName: options.session?.fields?.userId || \"userId\",\n          references: {\n            model: options.user?.modelName || \"user\",\n            field: \"id\",\n            onDelete: \"cascade\"\n          },\n          required: true\n        },\n        ...session?.fields,\n        ...options.session?.additionalFields\n      },\n      order: 2\n    }\n  };\n  return {\n    user: {\n      modelName: options.user?.modelName || \"user\",\n      fields: {\n        name: {\n          type: \"string\",\n          required: true,\n          fieldName: options.user?.fields?.name || \"name\",\n          sortable: true\n        },\n        email: {\n          type: \"string\",\n          unique: true,\n          required: true,\n          fieldName: options.user?.fields?.email || \"email\",\n          sortable: true\n        },\n        emailVerified: {\n          type: \"boolean\",\n          defaultValue: false,\n          required: true,\n          fieldName: options.user?.fields?.emailVerified || \"emailVerified\"\n        },\n        image: {\n          type: \"string\",\n          required: false,\n          fieldName: options.user?.fields?.image || \"image\"\n        },\n        createdAt: {\n          type: \"date\",\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          required: true,\n          fieldName: options.user?.fields?.createdAt || \"createdAt\"\n        },\n        updatedAt: {\n          type: \"date\",\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          onUpdate: () => /* @__PURE__ */ new Date(),\n          required: true,\n          fieldName: options.user?.fields?.updatedAt || \"updatedAt\"\n        },\n        ...user?.fields,\n        ...options.user?.additionalFields\n      },\n      order: 1\n    },\n    //only add session table if it's not stored in secondary storage\n    ...!options.secondaryStorage || options.session?.storeSessionInDatabase ? sessionTable : {},\n    account: {\n      modelName: options.account?.modelName || \"account\",\n      fields: {\n        accountId: {\n          type: \"string\",\n          required: true,\n          fieldName: options.account?.fields?.accountId || \"accountId\"\n        },\n        providerId: {\n          type: \"string\",\n          required: true,\n          fieldName: options.account?.fields?.providerId || \"providerId\"\n        },\n        userId: {\n          type: \"string\",\n          references: {\n            model: options.user?.modelName || \"user\",\n            field: \"id\",\n            onDelete: \"cascade\"\n          },\n          required: true,\n          fieldName: options.account?.fields?.userId || \"userId\"\n        },\n        accessToken: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.accessToken || \"accessToken\"\n        },\n        refreshToken: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.refreshToken || \"refreshToken\"\n        },\n        idToken: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.idToken || \"idToken\"\n        },\n        accessTokenExpiresAt: {\n          type: \"date\",\n          required: false,\n          fieldName: options.account?.fields?.accessTokenExpiresAt || \"accessTokenExpiresAt\"\n        },\n        refreshTokenExpiresAt: {\n          type: \"date\",\n          required: false,\n          fieldName: options.account?.fields?.refreshTokenExpiresAt || \"refreshTokenExpiresAt\"\n        },\n        scope: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.scope || \"scope\"\n        },\n        password: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.password || \"password\"\n        },\n        createdAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.account?.fields?.createdAt || \"createdAt\",\n          defaultValue: () => /* @__PURE__ */ new Date()\n        },\n        updatedAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.account?.fields?.updatedAt || \"updatedAt\",\n          onUpdate: () => /* @__PURE__ */ new Date()\n        },\n        ...account?.fields,\n        ...options.account?.additionalFields\n      },\n      order: 3\n    },\n    verification: {\n      modelName: options.verification?.modelName || \"verification\",\n      fields: {\n        identifier: {\n          type: \"string\",\n          required: true,\n          fieldName: options.verification?.fields?.identifier || \"identifier\"\n        },\n        value: {\n          type: \"string\",\n          required: true,\n          fieldName: options.verification?.fields?.value || \"value\"\n        },\n        expiresAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.verification?.fields?.expiresAt || \"expiresAt\"\n        },\n        createdAt: {\n          type: \"date\",\n          required: true,\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          fieldName: options.verification?.fields?.createdAt || \"createdAt\"\n        },\n        updatedAt: {\n          type: \"date\",\n          required: true,\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          onUpdate: () => /* @__PURE__ */ new Date(),\n          fieldName: options.verification?.fields?.updatedAt || \"updatedAt\"\n        }\n      },\n      order: 4\n    },\n    ...pluginTables,\n    ...shouldAddRateLimitTable ? rateLimitTable : {}\n  };\n};\n\nexport { getAuthTables as g };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1898, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.BvvYEWCP.mjs"],"sourcesContent":["import { s as safeJSONParse } from './better-auth.BTrSrKsi.mjs';\nimport { g as getAuthTables } from './better-auth.DhziC0ap.mjs';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\nimport 'zod';\nimport 'better-call';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha.js';\nimport '@noble/ciphers/utils.js';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt.js';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils.js';\nimport './better-auth.B4Qoxdgc.mjs';\nimport { a as logger, b as colors } from './better-auth.DgGir396.mjs';\n\nfunction withApplyDefault(value, field, action) {\n  if (action === \"update\") {\n    if (value === void 0 && field.onUpdate !== void 0) {\n      if (typeof field.onUpdate === \"function\") {\n        return field.onUpdate();\n      }\n      return field.onUpdate;\n    }\n    return value;\n  }\n  if (value === void 0 || value === null) {\n    if (field.defaultValue !== void 0) {\n      if (typeof field.defaultValue === \"function\") {\n        return field.defaultValue();\n      }\n      return field.defaultValue;\n    }\n  }\n  return value;\n}\n\nlet debugLogs = [];\nlet transactionId = -1;\nconst createAsIsTransaction = (adapter) => (fn) => fn(adapter);\nconst createAdapterFactory = ({\n  adapter: customAdapter,\n  config: cfg\n}) => (options) => {\n  const uniqueAdapterFactoryInstanceId = Math.random().toString(36).substring(2, 15);\n  const config = {\n    ...cfg,\n    supportsBooleans: cfg.supportsBooleans ?? true,\n    supportsDates: cfg.supportsDates ?? true,\n    supportsJSON: cfg.supportsJSON ?? false,\n    adapterName: cfg.adapterName ?? cfg.adapterId,\n    supportsNumericIds: cfg.supportsNumericIds ?? true,\n    transaction: cfg.transaction ?? false,\n    disableTransformInput: cfg.disableTransformInput ?? false,\n    disableTransformOutput: cfg.disableTransformOutput ?? false\n  };\n  if (options.advanced?.database?.useNumberId === true && config.supportsNumericIds === false) {\n    throw new Error(\n      `[${config.adapterName}] Your database or database adapter does not support numeric ids. Please disable \"useNumberId\" in your config.`\n    );\n  }\n  const schema = getAuthTables(options);\n  const getDefaultFieldName = ({\n    field,\n    model: unsafe_model\n  }) => {\n    if (field === \"id\" || field === \"_id\") {\n      return \"id\";\n    }\n    const model = getDefaultModelName(unsafe_model);\n    let f = schema[model]?.fields[field];\n    if (!f) {\n      const result = Object.entries(schema[model].fields).find(\n        ([_, f2]) => f2.fieldName === field\n      );\n      if (result) {\n        f = result[1];\n        field = result[0];\n      }\n    }\n    if (!f) {\n      debugLog(`Field ${field} not found in model ${model}`);\n      debugLog(`Schema:`, schema);\n      throw new Error(`Field ${field} not found in model ${model}`);\n    }\n    return field;\n  };\n  const getDefaultModelName = (model) => {\n    if (config.usePlural && model.charAt(model.length - 1) === \"s\") {\n      let pluralessModel = model.slice(0, -1);\n      let m2 = schema[pluralessModel] ? pluralessModel : void 0;\n      if (!m2) {\n        m2 = Object.entries(schema).find(\n          ([_, f]) => f.modelName === pluralessModel\n        )?.[0];\n      }\n      if (m2) {\n        return m2;\n      }\n    }\n    let m = schema[model] ? model : void 0;\n    if (!m) {\n      m = Object.entries(schema).find(([_, f]) => f.modelName === model)?.[0];\n    }\n    if (!m) {\n      debugLog(`Model \"${model}\" not found in schema`);\n      debugLog(`Schema:`, schema);\n      throw new Error(`Model \"${model}\" not found in schema`);\n    }\n    return m;\n  };\n  const getModelName = (model) => {\n    const defaultModelKey = getDefaultModelName(model);\n    const usePlural = config && config.usePlural;\n    const useCustomModelName = schema && schema[defaultModelKey] && schema[defaultModelKey].modelName !== model;\n    if (useCustomModelName) {\n      return usePlural ? `${schema[defaultModelKey].modelName}s` : schema[defaultModelKey].modelName;\n    }\n    return usePlural ? `${model}s` : model;\n  };\n  function getFieldName({\n    model: model_name,\n    field: field_name\n  }) {\n    const model = getDefaultModelName(model_name);\n    const field = getDefaultFieldName({ model, field: field_name });\n    return schema[model]?.fields[field]?.fieldName || field;\n  }\n  const debugLog = (...args) => {\n    if (config.debugLogs === true || typeof config.debugLogs === \"object\") {\n      if (typeof config.debugLogs === \"object\" && \"isRunningAdapterTests\" in config.debugLogs) {\n        if (config.debugLogs.isRunningAdapterTests) {\n          args.shift();\n          debugLogs.push({ instance: uniqueAdapterFactoryInstanceId, args });\n        }\n        return;\n      }\n      if (typeof config.debugLogs === \"object\" && config.debugLogs.logCondition && !config.debugLogs.logCondition?.()) {\n        return;\n      }\n      if (typeof args[0] === \"object\" && \"method\" in args[0]) {\n        const method = args.shift().method;\n        if (typeof config.debugLogs === \"object\") {\n          if (method === \"create\" && !config.debugLogs.create) {\n            return;\n          } else if (method === \"update\" && !config.debugLogs.update) {\n            return;\n          } else if (method === \"updateMany\" && !config.debugLogs.updateMany) {\n            return;\n          } else if (method === \"findOne\" && !config.debugLogs.findOne) {\n            return;\n          } else if (method === \"findMany\" && !config.debugLogs.findMany) {\n            return;\n          } else if (method === \"delete\" && !config.debugLogs.delete) {\n            return;\n          } else if (method === \"deleteMany\" && !config.debugLogs.deleteMany) {\n            return;\n          } else if (method === \"count\" && !config.debugLogs.count) {\n            return;\n          }\n        }\n        logger.info(`[${config.adapterName}]`, ...args);\n      } else {\n        logger.info(`[${config.adapterName}]`, ...args);\n      }\n    }\n  };\n  const idField = ({\n    customModelName,\n    forceAllowId\n  }) => {\n    const shouldGenerateId = !config.disableIdGeneration && !options.advanced?.database?.useNumberId && !forceAllowId;\n    const model = getDefaultModelName(customModelName ?? \"id\");\n    return {\n      type: options.advanced?.database?.useNumberId ? \"number\" : \"string\",\n      required: shouldGenerateId ? true : false,\n      ...shouldGenerateId ? {\n        defaultValue() {\n          if (config.disableIdGeneration) return void 0;\n          const useNumberId = options.advanced?.database?.useNumberId;\n          let generateId$1 = options.advanced?.database?.generateId;\n          if (options.advanced?.generateId !== void 0) {\n            logger.warn(\n              \"Your Better Auth config includes advanced.generateId which is deprecated. Please use advanced.database.generateId instead. This will be removed in future releases.\"\n            );\n            generateId$1 = options.advanced?.generateId;\n          }\n          if (generateId$1 === false || useNumberId) return void 0;\n          if (generateId$1) {\n            return generateId$1({\n              model\n            });\n          }\n          if (config.customIdGenerator) {\n            return config.customIdGenerator({ model });\n          }\n          return generateId();\n        }\n      } : {}\n    };\n  };\n  const getFieldAttributes = ({\n    model,\n    field\n  }) => {\n    const defaultModelName = getDefaultModelName(model);\n    const defaultFieldName = getDefaultFieldName({\n      field,\n      model: defaultModelName\n    });\n    const fields = schema[defaultModelName].fields;\n    fields.id = idField({ customModelName: defaultModelName });\n    return fields[defaultFieldName];\n  };\n  const transformInput = async (data, defaultModelName, action, forceAllowId) => {\n    const transformedData = {};\n    const fields = schema[defaultModelName].fields;\n    const newMappedKeys = config.mapKeysTransformInput ?? {};\n    if (!config.disableIdGeneration && !options.advanced?.database?.useNumberId) {\n      fields.id = idField({\n        customModelName: defaultModelName,\n        forceAllowId: forceAllowId && \"id\" in data\n      });\n    }\n    for (const field in fields) {\n      const value = data[field];\n      const fieldAttributes = fields[field];\n      let newFieldName = newMappedKeys[field] || fields[field].fieldName || field;\n      if (value === void 0 && (fieldAttributes.defaultValue === void 0 && !fieldAttributes.transform?.input && !(action === \"update\" && fieldAttributes.onUpdate) || action === \"update\" && !fieldAttributes.onUpdate)) {\n        continue;\n      }\n      let newValue = withApplyDefault(value, fieldAttributes, action);\n      if (fieldAttributes.transform?.input) {\n        newValue = await fieldAttributes.transform.input(newValue);\n      }\n      if (fieldAttributes.references?.field === \"id\" && options.advanced?.database?.useNumberId) {\n        if (Array.isArray(newValue)) {\n          newValue = newValue.map((x) => x !== null ? Number(x) : null);\n        } else {\n          newValue = newValue !== null ? Number(newValue) : null;\n        }\n      } else if (config.supportsJSON === false && typeof newValue === \"object\" && fieldAttributes.type === \"json\") {\n        newValue = JSON.stringify(newValue);\n      } else if (config.supportsDates === false && newValue instanceof Date && fieldAttributes.type === \"date\") {\n        newValue = newValue.toISOString();\n      } else if (config.supportsBooleans === false && typeof newValue === \"boolean\") {\n        newValue = newValue ? 1 : 0;\n      }\n      if (config.customTransformInput) {\n        newValue = config.customTransformInput({\n          data: newValue,\n          action,\n          field: newFieldName,\n          fieldAttributes,\n          model: defaultModelName,\n          schema,\n          options\n        });\n      }\n      if (newValue !== void 0) {\n        transformedData[newFieldName] = newValue;\n      }\n    }\n    return transformedData;\n  };\n  const transformOutput = async (data, unsafe_model, select = []) => {\n    if (!data) return null;\n    const newMappedKeys = config.mapKeysTransformOutput ?? {};\n    const transformedData = {};\n    const tableSchema = schema[unsafe_model].fields;\n    const idKey = Object.entries(newMappedKeys).find(\n      ([_, v]) => v === \"id\"\n    )?.[0];\n    tableSchema[idKey ?? \"id\"] = {\n      type: options.advanced?.database?.useNumberId ? \"number\" : \"string\"\n    };\n    for (const key in tableSchema) {\n      if (select.length && !select.includes(key)) {\n        continue;\n      }\n      const field = tableSchema[key];\n      if (field) {\n        const originalKey = field.fieldName || key;\n        let newValue = data[Object.entries(newMappedKeys).find(\n          ([_, v]) => v === originalKey\n        )?.[0] || originalKey];\n        if (field.transform?.output) {\n          newValue = await field.transform.output(newValue);\n        }\n        let newFieldName = newMappedKeys[key] || key;\n        if (originalKey === \"id\" || field.references?.field === \"id\") {\n          if (typeof newValue !== \"undefined\" && newValue !== null)\n            newValue = String(newValue);\n        } else if (config.supportsJSON === false && typeof newValue === \"string\" && field.type === \"json\") {\n          newValue = safeJSONParse(newValue);\n        } else if (config.supportsDates === false && typeof newValue === \"string\" && field.type === \"date\") {\n          newValue = new Date(newValue);\n        } else if (config.supportsBooleans === false && typeof newValue === \"number\" && field.type === \"boolean\") {\n          newValue = newValue === 1;\n        }\n        if (config.customTransformOutput) {\n          newValue = config.customTransformOutput({\n            data: newValue,\n            field: newFieldName,\n            fieldAttributes: field,\n            select,\n            model: unsafe_model,\n            schema,\n            options\n          });\n        }\n        transformedData[newFieldName] = newValue;\n      }\n    }\n    return transformedData;\n  };\n  const transformWhereClause = ({\n    model,\n    where\n  }) => {\n    if (!where) return void 0;\n    const newMappedKeys = config.mapKeysTransformInput ?? {};\n    return where.map((w) => {\n      const {\n        field: unsafe_field,\n        value,\n        operator = \"eq\",\n        connector = \"AND\"\n      } = w;\n      if (operator === \"in\") {\n        if (!Array.isArray(value)) {\n          throw new Error(\"Value must be an array\");\n        }\n      }\n      const defaultModelName = getDefaultModelName(model);\n      const defaultFieldName = getDefaultFieldName({\n        field: unsafe_field,\n        model\n      });\n      const fieldName = newMappedKeys[defaultFieldName] || getFieldName({\n        field: defaultFieldName,\n        model: defaultModelName\n      });\n      const fieldAttr = getFieldAttributes({\n        field: defaultFieldName,\n        model: defaultModelName\n      });\n      if (defaultFieldName === \"id\" || fieldAttr.references?.field === \"id\") {\n        if (options.advanced?.database?.useNumberId) {\n          if (Array.isArray(value)) {\n            return {\n              operator,\n              connector,\n              field: fieldName,\n              value: value.map(Number)\n            };\n          }\n          return {\n            operator,\n            connector,\n            field: fieldName,\n            value: Number(value)\n          };\n        }\n      }\n      return {\n        operator,\n        connector,\n        field: fieldName,\n        value\n      };\n    });\n  };\n  const adapterInstance = customAdapter({\n    options,\n    schema,\n    debugLog,\n    getFieldName,\n    getModelName,\n    getDefaultModelName,\n    getDefaultFieldName,\n    getFieldAttributes,\n    transformInput,\n    transformOutput,\n    transformWhereClause\n  });\n  let lazyLoadTransaction = null;\n  const adapter = {\n    transaction: async (cb) => {\n      if (!lazyLoadTransaction) {\n        if (!config.transaction) {\n          if (typeof config.debugLogs === \"object\" && \"isRunningAdapterTests\" in config.debugLogs && config.debugLogs.isRunningAdapterTests) ; else {\n            logger.warn(\n              `[${config.adapterName}] - Transactions are not supported. Executing operations sequentially.`\n            );\n          }\n          lazyLoadTransaction = createAsIsTransaction(adapter);\n        } else {\n          logger.debug(\n            `[${config.adapterName}] - Using provided transaction implementation.`\n          );\n          lazyLoadTransaction = config.transaction;\n        }\n      }\n      return lazyLoadTransaction(cb);\n    },\n    create: async ({\n      data: unsafeData,\n      model: unsafeModel,\n      select,\n      forceAllowId = false\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      unsafeModel = getDefaultModelName(unsafeModel);\n      if (\"id\" in unsafeData && !forceAllowId) {\n        logger.warn(\n          `[${config.adapterName}] - You are trying to create a record with an id. This is not allowed as we handle id generation for you, unless you pass in the \\`forceAllowId\\` parameter. The id will be ignored.`\n        );\n        const err = new Error();\n        const stack = err.stack?.split(\"\\n\").filter((_, i) => i !== 1).join(\"\\n\").replace(\"Error:\", \"Create method with `id` being called at:\");\n        console.log(stack);\n        unsafeData.id = void 0;\n      }\n      debugLog(\n        { method: \"create\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 4)}`,\n        `${formatMethod(\"create\")} ${formatAction(\"Unsafe Input\")}:`,\n        { model, data: unsafeData }\n      );\n      let data = unsafeData;\n      if (!config.disableTransformInput) {\n        data = await transformInput(\n          unsafeData,\n          unsafeModel,\n          \"create\",\n          forceAllowId\n        );\n      }\n      debugLog(\n        { method: \"create\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 4)}`,\n        `${formatMethod(\"create\")} ${formatAction(\"Parsed Input\")}:`,\n        { model, data }\n      );\n      const res = await adapterInstance.create({ data, model });\n      debugLog(\n        { method: \"create\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(3, 4)}`,\n        `${formatMethod(\"create\")} ${formatAction(\"DB Result\")}:`,\n        { model, res }\n      );\n      let transformed = res;\n      if (!config.disableTransformOutput) {\n        transformed = await transformOutput(res, unsafeModel, select);\n      }\n      debugLog(\n        { method: \"create\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(4, 4)}`,\n        `${formatMethod(\"create\")} ${formatAction(\"Parsed Result\")}:`,\n        { model, data: transformed }\n      );\n      return transformed;\n    },\n    update: async ({\n      model: unsafeModel,\n      where: unsafeWhere,\n      update: unsafeData\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      unsafeModel = getDefaultModelName(unsafeModel);\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      debugLog(\n        { method: \"update\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 4)}`,\n        `${formatMethod(\"update\")} ${formatAction(\"Unsafe Input\")}:`,\n        { model, data: unsafeData }\n      );\n      let data = unsafeData;\n      if (!config.disableTransformInput) {\n        data = await transformInput(unsafeData, unsafeModel, \"update\");\n      }\n      debugLog(\n        { method: \"update\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 4)}`,\n        `${formatMethod(\"update\")} ${formatAction(\"Parsed Input\")}:`,\n        { model, data }\n      );\n      const res = await adapterInstance.update({\n        model,\n        where,\n        update: data\n      });\n      debugLog(\n        { method: \"update\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(3, 4)}`,\n        `${formatMethod(\"update\")} ${formatAction(\"DB Result\")}:`,\n        { model, data: res }\n      );\n      let transformed = res;\n      if (!config.disableTransformOutput) {\n        transformed = await transformOutput(res, unsafeModel);\n      }\n      debugLog(\n        { method: \"update\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(4, 4)}`,\n        `${formatMethod(\"update\")} ${formatAction(\"Parsed Result\")}:`,\n        { model, data: transformed }\n      );\n      return transformed;\n    },\n    updateMany: async ({\n      model: unsafeModel,\n      where: unsafeWhere,\n      update: unsafeData\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      unsafeModel = getDefaultModelName(unsafeModel);\n      debugLog(\n        { method: \"updateMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 4)}`,\n        `${formatMethod(\"updateMany\")} ${formatAction(\"Unsafe Input\")}:`,\n        { model, data: unsafeData }\n      );\n      let data = unsafeData;\n      if (!config.disableTransformInput) {\n        data = await transformInput(unsafeData, unsafeModel, \"update\");\n      }\n      debugLog(\n        { method: \"updateMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 4)}`,\n        `${formatMethod(\"updateMany\")} ${formatAction(\"Parsed Input\")}:`,\n        { model, data }\n      );\n      const updatedCount = await adapterInstance.updateMany({\n        model,\n        where,\n        update: data\n      });\n      debugLog(\n        { method: \"updateMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(3, 4)}`,\n        `${formatMethod(\"updateMany\")} ${formatAction(\"DB Result\")}:`,\n        { model, data: updatedCount }\n      );\n      debugLog(\n        { method: \"updateMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(4, 4)}`,\n        `${formatMethod(\"updateMany\")} ${formatAction(\"Parsed Result\")}:`,\n        { model, data: updatedCount }\n      );\n      return updatedCount;\n    },\n    findOne: async ({\n      model: unsafeModel,\n      where: unsafeWhere,\n      select\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      unsafeModel = getDefaultModelName(unsafeModel);\n      debugLog(\n        { method: \"findOne\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 3)}`,\n        `${formatMethod(\"findOne\")}:`,\n        { model, where, select }\n      );\n      const res = await adapterInstance.findOne({\n        model,\n        where,\n        select\n      });\n      debugLog(\n        { method: \"findOne\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 3)}`,\n        `${formatMethod(\"findOne\")} ${formatAction(\"DB Result\")}:`,\n        { model, data: res }\n      );\n      let transformed = res;\n      if (!config.disableTransformOutput) {\n        transformed = await transformOutput(res, unsafeModel, select);\n      }\n      debugLog(\n        { method: \"findOne\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(3, 3)}`,\n        `${formatMethod(\"findOne\")} ${formatAction(\"Parsed Result\")}:`,\n        { model, data: transformed }\n      );\n      return transformed;\n    },\n    findMany: async ({\n      model: unsafeModel,\n      where: unsafeWhere,\n      limit: unsafeLimit,\n      sortBy,\n      offset\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const limit = unsafeLimit ?? options.advanced?.database?.defaultFindManyLimit ?? 100;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      unsafeModel = getDefaultModelName(unsafeModel);\n      debugLog(\n        { method: \"findMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 3)}`,\n        `${formatMethod(\"findMany\")}:`,\n        { model, where, limit, sortBy, offset }\n      );\n      const res = await adapterInstance.findMany({\n        model,\n        where,\n        limit,\n        sortBy,\n        offset\n      });\n      debugLog(\n        { method: \"findMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 3)}`,\n        `${formatMethod(\"findMany\")} ${formatAction(\"DB Result\")}:`,\n        { model, data: res }\n      );\n      let transformed = res;\n      if (!config.disableTransformOutput) {\n        transformed = await Promise.all(\n          res.map(async (r) => await transformOutput(r, unsafeModel))\n        );\n      }\n      debugLog(\n        { method: \"findMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(3, 3)}`,\n        `${formatMethod(\"findMany\")} ${formatAction(\"Parsed Result\")}:`,\n        { model, data: transformed }\n      );\n      return transformed;\n    },\n    delete: async ({\n      model: unsafeModel,\n      where: unsafeWhere\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      unsafeModel = getDefaultModelName(unsafeModel);\n      debugLog(\n        { method: \"delete\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 2)}`,\n        `${formatMethod(\"delete\")}:`,\n        { model, where }\n      );\n      await adapterInstance.delete({\n        model,\n        where\n      });\n      debugLog(\n        { method: \"delete\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 2)}`,\n        `${formatMethod(\"delete\")} ${formatAction(\"DB Result\")}:`,\n        { model }\n      );\n    },\n    deleteMany: async ({\n      model: unsafeModel,\n      where: unsafeWhere\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      unsafeModel = getDefaultModelName(unsafeModel);\n      debugLog(\n        { method: \"deleteMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 2)}`,\n        `${formatMethod(\"deleteMany\")} ${formatAction(\"DeleteMany\")}:`,\n        { model, where }\n      );\n      const res = await adapterInstance.deleteMany({\n        model,\n        where\n      });\n      debugLog(\n        { method: \"deleteMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 2)}`,\n        `${formatMethod(\"deleteMany\")} ${formatAction(\"DB Result\")}:`,\n        { model, data: res }\n      );\n      return res;\n    },\n    count: async ({\n      model: unsafeModel,\n      where: unsafeWhere\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      unsafeModel = getDefaultModelName(unsafeModel);\n      debugLog(\n        { method: \"count\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 2)}`,\n        `${formatMethod(\"count\")}:`,\n        {\n          model,\n          where\n        }\n      );\n      const res = await adapterInstance.count({\n        model,\n        where\n      });\n      debugLog(\n        { method: \"count\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 2)}`,\n        `${formatMethod(\"count\")}:`,\n        {\n          model,\n          data: res\n        }\n      );\n      return res;\n    },\n    createSchema: adapterInstance.createSchema ? async (_, file) => {\n      const tables = getAuthTables(options);\n      if (options.secondaryStorage && !options.session?.storeSessionInDatabase) {\n        delete tables.session;\n      }\n      if (options.rateLimit && options.rateLimit.storage === \"database\" && // rate-limit will default to enabled in production,\n      // and given storage is database, it will try to use the rate-limit table,\n      // so we should make sure to generate rate-limit table schema\n      (typeof options.rateLimit.enabled === \"undefined\" || // and of course if they forcefully set to true, then they want rate-limit,\n      // thus we should also generate rate-limit table schema\n      options.rateLimit.enabled === true)) {\n        tables.ratelimit = {\n          modelName: options.rateLimit.modelName ?? \"ratelimit\",\n          fields: {\n            key: {\n              type: \"string\",\n              unique: true,\n              required: true,\n              fieldName: options.rateLimit.fields?.key ?? \"key\"\n            },\n            count: {\n              type: \"number\",\n              required: true,\n              fieldName: options.rateLimit.fields?.count ?? \"count\"\n            },\n            lastRequest: {\n              type: \"number\",\n              required: true,\n              bigint: true,\n              defaultValue: () => Date.now(),\n              fieldName: options.rateLimit.fields?.lastRequest ?? \"lastRequest\"\n            }\n          }\n        };\n      }\n      return adapterInstance.createSchema({ file, tables });\n    } : void 0,\n    options: {\n      adapterConfig: config,\n      ...adapterInstance.options ?? {}\n    },\n    id: config.adapterId,\n    // Secretly export values ONLY if this adapter has enabled adapter-test-debug-logs.\n    // This would then be used during our adapter-tests to help print debug logs if a test fails.\n    //@ts-expect-error - ^^\n    ...config.debugLogs?.isRunningAdapterTests ? {\n      adapterTestDebugLogs: {\n        resetDebugLogs() {\n          debugLogs = debugLogs.filter(\n            (log) => log.instance !== uniqueAdapterFactoryInstanceId\n          );\n        },\n        printDebugLogs() {\n          const separator = `\\u2500`.repeat(80);\n          const logs = debugLogs.filter(\n            (log2) => log2.instance === uniqueAdapterFactoryInstanceId\n          );\n          if (logs.length === 0) {\n            return;\n          }\n          let log = logs.reverse().map((log2) => {\n            log2.args[0] = `\n${log2.args[0]}`;\n            return [...log2.args, \"\\n\"];\n          }).reduce(\n            (prev, curr) => {\n              return [...curr, ...prev];\n            },\n            [`\n${separator}`]\n          );\n          console.log(...log);\n        }\n      }\n    } : {}\n  };\n  return adapter;\n};\nfunction formatTransactionId(transactionId2) {\n  return `${colors.fg.magenta}#${transactionId2}${colors.reset}`;\n}\nfunction formatStep(step, total) {\n  return `${colors.bg.black}${colors.fg.yellow}[${step}/${total}]${colors.reset}`;\n}\nfunction formatMethod(method) {\n  return `${colors.bright}${method}${colors.reset}`;\n}\nfunction formatAction(action) {\n  return `${colors.dim}(${action})${colors.reset}`;\n}\n\nexport { createAdapterFactory as c };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2689, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.BAk2ZmIN.mjs"],"sourcesContent":["import { SqliteDialect, MysqlDialect, PostgresDialect, MssqlDialect, Kysely } from 'kysely';\nimport { c as createAdapterFactory } from './better-auth.BvvYEWCP.mjs';\n\nfunction getKyselyDatabaseType(db) {\n  if (!db) {\n    return null;\n  }\n  if (\"dialect\" in db) {\n    return getKyselyDatabaseType(db.dialect);\n  }\n  if (\"createDriver\" in db) {\n    if (db instanceof SqliteDialect) {\n      return \"sqlite\";\n    }\n    if (db instanceof MysqlDialect) {\n      return \"mysql\";\n    }\n    if (db instanceof PostgresDialect) {\n      return \"postgres\";\n    }\n    if (db instanceof MssqlDialect) {\n      return \"mssql\";\n    }\n  }\n  if (\"aggregate\" in db) {\n    return \"sqlite\";\n  }\n  if (\"getConnection\" in db) {\n    return \"mysql\";\n  }\n  if (\"connect\" in db) {\n    return \"postgres\";\n  }\n  if (\"fileControl\" in db) {\n    return \"sqlite\";\n  }\n  if (\"open\" in db && \"close\" in db && \"prepare\" in db) {\n    return \"sqlite\";\n  }\n  return null;\n}\nconst createKyselyAdapter = async (config) => {\n  const db = config.database;\n  if (!db) {\n    return {\n      kysely: null,\n      databaseType: null,\n      transaction: void 0\n    };\n  }\n  if (\"db\" in db) {\n    return {\n      kysely: db.db,\n      databaseType: db.type,\n      transaction: db.transaction\n    };\n  }\n  if (\"dialect\" in db) {\n    return {\n      kysely: new Kysely({ dialect: db.dialect }),\n      databaseType: db.type,\n      transaction: db.transaction\n    };\n  }\n  let dialect = void 0;\n  const databaseType = getKyselyDatabaseType(db);\n  if (\"createDriver\" in db) {\n    dialect = db;\n  }\n  if (\"aggregate\" in db && !(\"createSession\" in db)) {\n    dialect = new SqliteDialect({\n      database: db\n    });\n  }\n  if (\"getConnection\" in db) {\n    dialect = new MysqlDialect(db);\n  }\n  if (\"connect\" in db) {\n    dialect = new PostgresDialect({\n      pool: db\n    });\n  }\n  if (\"fileControl\" in db) {\n    const { BunSqliteDialect } = await import('../chunks/bun-sqlite-dialect.mjs');\n    dialect = new BunSqliteDialect({\n      database: db\n    });\n  }\n  if (\"createSession\" in db && typeof window === \"undefined\") {\n    let DatabaseSync = void 0;\n    try {\n      let nodeSqlite = \"node:sqlite\";\n      ({ DatabaseSync } = await import(\n        /* @vite-ignore */\n        /* webpackIgnore: true */\n        nodeSqlite\n      ));\n    } catch (error) {\n      if (error !== null && typeof error === \"object\" && \"code\" in error && error.code !== \"ERR_UNKNOWN_BUILTIN_MODULE\") {\n        throw error;\n      }\n    }\n    if (DatabaseSync && db instanceof DatabaseSync) {\n      const { NodeSqliteDialect } = await import('../chunks/node-sqlite-dialect.mjs');\n      dialect = new NodeSqliteDialect({\n        database: db\n      });\n    }\n  }\n  return {\n    kysely: dialect ? new Kysely({ dialect }) : null,\n    databaseType,\n    transaction: void 0\n  };\n};\n\nconst kyselyAdapter = (db, config) => {\n  let lazyOptions = null;\n  const createCustomAdapter = (db2) => {\n    return ({ getFieldName, schema, getDefaultModelName }) => {\n      const withReturning = async (values, builder, model, where) => {\n        let res;\n        if (config?.type === \"mysql\") {\n          await builder.execute();\n          const field = values.id ? \"id\" : where.length > 0 && where[0]?.field ? where[0].field : \"id\";\n          if (!values.id && where.length === 0) {\n            res = await db2.selectFrom(model).selectAll().orderBy(getFieldName({ model, field }), \"desc\").limit(1).executeTakeFirst();\n            return res;\n          }\n          const value = values[field] || where[0]?.value;\n          res = await db2.selectFrom(model).selectAll().orderBy(getFieldName({ model, field }), \"desc\").where(getFieldName({ model, field }), \"=\", value).limit(1).executeTakeFirst();\n          return res;\n        }\n        if (config?.type === \"mssql\") {\n          res = await builder.outputAll(\"inserted\").executeTakeFirst();\n          return res;\n        }\n        res = await builder.returningAll().executeTakeFirst();\n        return res;\n      };\n      function transformValueToDB(value, model, field) {\n        if (field === \"id\") {\n          return value;\n        }\n        const { type = \"sqlite\" } = config || {};\n        let f = schema[model]?.fields[field];\n        if (!f) {\n          f = Object.values(schema).find((f2) => f2.modelName === model);\n        }\n        if (f.type === \"boolean\" && (type === \"sqlite\" || type === \"mssql\") && value !== null && value !== void 0) {\n          return value ? 1 : 0;\n        }\n        if (f.type === \"date\" && value && value instanceof Date) {\n          if (type === \"sqlite\") return value.toISOString();\n          return value;\n        }\n        return value;\n      }\n      function transformValueFromDB(value) {\n        function transformObject(obj) {\n          for (const key in obj) {\n            if (!Object.prototype.hasOwnProperty.call(obj, key)) continue;\n            const field = obj[key];\n            if (field instanceof Date && config?.type === \"mysql\") ; else if (typeof field === \"object\" && field !== null) {\n              transformObject(field);\n            }\n          }\n        }\n        if (Array.isArray(value)) {\n          for (let i = 0; i < value.length; i++) {\n            const item = value[i];\n            if (typeof item === \"object\" && item !== null) {\n              transformObject(item);\n            }\n          }\n        } else if (typeof value === \"object\" && value !== null) {\n          transformObject(value);\n        }\n        return value;\n      }\n      function convertWhereClause(model, w) {\n        if (!w)\n          return {\n            and: null,\n            or: null\n          };\n        const conditions = {\n          and: [],\n          or: []\n        };\n        w.forEach((condition) => {\n          let {\n            field: _field,\n            value,\n            operator = \"=\",\n            connector = \"AND\"\n          } = condition;\n          const field = getFieldName({ model, field: _field });\n          value = transformValueToDB(value, model, _field);\n          const expr = (eb) => {\n            if (operator.toLowerCase() === \"in\") {\n              return eb(field, \"in\", Array.isArray(value) ? value : [value]);\n            }\n            if (operator.toLowerCase() === \"not_in\") {\n              return eb(\n                field,\n                \"not in\",\n                Array.isArray(value) ? value : [value]\n              );\n            }\n            if (operator === \"contains\") {\n              return eb(field, \"like\", `%${value}%`);\n            }\n            if (operator === \"starts_with\") {\n              return eb(field, \"like\", `${value}%`);\n            }\n            if (operator === \"ends_with\") {\n              return eb(field, \"like\", `%${value}`);\n            }\n            if (operator === \"eq\") {\n              return eb(field, \"=\", value);\n            }\n            if (operator === \"ne\") {\n              return eb(field, \"<>\", value);\n            }\n            if (operator === \"gt\") {\n              return eb(field, \">\", value);\n            }\n            if (operator === \"gte\") {\n              return eb(field, \">=\", value);\n            }\n            if (operator === \"lt\") {\n              return eb(field, \"<\", value);\n            }\n            if (operator === \"lte\") {\n              return eb(field, \"<=\", value);\n            }\n            return eb(field, operator, value);\n          };\n          if (connector === \"OR\") {\n            conditions.or.push(expr);\n          } else {\n            conditions.and.push(expr);\n          }\n        });\n        return {\n          and: conditions.and.length ? conditions.and : null,\n          or: conditions.or.length ? conditions.or : null\n        };\n      }\n      return {\n        async create({ data, model }) {\n          const builder = db2.insertInto(model).values(data);\n          const returned = await withReturning(data, builder, model, []);\n          return transformValueFromDB(returned);\n        },\n        async findOne({ model, where, select }) {\n          const { and, or } = convertWhereClause(model, where);\n          let query = db2.selectFrom(model).selectAll();\n          if (and) {\n            query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n          }\n          if (or) {\n            query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n          }\n          const res = await query.executeTakeFirst();\n          if (!res) return null;\n          return transformValueFromDB(res);\n        },\n        async findMany({ model, where, limit, offset, sortBy }) {\n          const { and, or } = convertWhereClause(model, where);\n          let query = db2.selectFrom(model);\n          if (and) {\n            query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n          }\n          if (or) {\n            query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n          }\n          if (config?.type === \"mssql\") {\n            if (!offset) {\n              query = query.top(limit || 100);\n            }\n          } else {\n            query = query.limit(limit || 100);\n          }\n          if (sortBy) {\n            query = query.orderBy(\n              getFieldName({ model, field: sortBy.field }),\n              sortBy.direction\n            );\n          }\n          if (offset) {\n            if (config?.type === \"mssql\") {\n              if (!sortBy) {\n                query = query.orderBy(getFieldName({ model, field: \"id\" }));\n              }\n              query = query.offset(offset).fetch(limit || 100);\n            } else {\n              query = query.offset(offset);\n            }\n          }\n          const res = await query.selectAll().execute();\n          if (!res) return [];\n          return transformValueFromDB(res);\n        },\n        async update({ model, where, update: values }) {\n          const { and, or } = convertWhereClause(model, where);\n          let query = db2.updateTable(model).set(values);\n          if (and) {\n            query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n          }\n          if (or) {\n            query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n          }\n          return transformValueFromDB(\n            await withReturning(values, query, model, where)\n          );\n        },\n        async updateMany({ model, where, update: values }) {\n          const { and, or } = convertWhereClause(model, where);\n          let query = db2.updateTable(model).set(values);\n          if (and) {\n            query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n          }\n          if (or) {\n            query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n          }\n          const res = await query.execute();\n          return res.length;\n        },\n        async count({ model, where }) {\n          const { and, or } = convertWhereClause(model, where);\n          let query = db2.selectFrom(model).select(db2.fn.count(\"id\").as(\"count\"));\n          if (and) {\n            query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n          }\n          if (or) {\n            query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n          }\n          const res = await query.execute();\n          if (typeof res[0].count === \"number\") {\n            return res[0].count;\n          }\n          if (typeof res[0].count === \"bigint\") {\n            return Number(res[0].count);\n          }\n          return parseInt(res[0].count);\n        },\n        async delete({ model, where }) {\n          const { and, or } = convertWhereClause(model, where);\n          let query = db2.deleteFrom(model);\n          if (and) {\n            query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n          }\n          if (or) {\n            query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n          }\n          await query.execute();\n        },\n        async deleteMany({ model, where }) {\n          const { and, or } = convertWhereClause(model, where);\n          let query = db2.deleteFrom(model);\n          if (and) {\n            query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n          }\n          if (or) {\n            query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n          }\n          return (await query.execute()).length;\n        },\n        options: config\n      };\n    };\n  };\n  let adapterOptions = null;\n  adapterOptions = {\n    config: {\n      adapterId: \"kysely\",\n      adapterName: \"Kysely Adapter\",\n      usePlural: config?.usePlural,\n      debugLogs: config?.debugLogs,\n      supportsBooleans: config?.type === \"sqlite\" || config?.type === \"mssql\" || config?.type === \"mysql\" || !config?.type ? false : true,\n      supportsDates: config?.type === \"sqlite\" || config?.type === \"mssql\" || !config?.type ? false : true,\n      supportsJSON: false,\n      transaction: config?.transaction ?? false ? (cb) => db.transaction().execute((trx) => {\n        const adapter2 = createAdapterFactory({\n          config: adapterOptions.config,\n          adapter: createCustomAdapter(trx)\n        })(lazyOptions);\n        return cb(adapter2);\n      }) : false\n    },\n    adapter: createCustomAdapter(db)\n  };\n  const adapter = createAdapterFactory(adapterOptions);\n  return (options) => {\n    lazyOptions = options;\n    return adapter(options);\n  };\n};\n\nexport { createKyselyAdapter as c, getKyselyDatabaseType as g, kyselyAdapter as k };\n"],"names":[],"mappings":";;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA,SAAS,sBAAsB,EAAE;IAC/B,IAAI,CAAC,IAAI;QACP,OAAO;IACT;IACA,IAAI,aAAa,IAAI;QACnB,OAAO,sBAAsB,GAAG,OAAO;IACzC;IACA,IAAI,kBAAkB,IAAI;QACxB,IAAI,cAAc,oPAAa,EAAE;YAC/B,OAAO;QACT;QACA,IAAI,cAAc,iPAAY,EAAE;YAC9B,OAAO;QACT;QACA,IAAI,cAAc,0PAAe,EAAE;YACjC,OAAO;QACT;QACA,IAAI,cAAc,iPAAY,EAAE;YAC9B,OAAO;QACT;IACF;IACA,IAAI,eAAe,IAAI;QACrB,OAAO;IACT;IACA,IAAI,mBAAmB,IAAI;QACzB,OAAO;IACT;IACA,IAAI,aAAa,IAAI;QACnB,OAAO;IACT;IACA,IAAI,iBAAiB,IAAI;QACvB,OAAO;IACT;IACA,IAAI,UAAU,MAAM,WAAW,MAAM,aAAa,IAAI;QACpD,OAAO;IACT;IACA,OAAO;AACT;AACA,MAAM,sBAAsB,OAAO;IACjC,MAAM,KAAK,OAAO,QAAQ;IAC1B,IAAI,CAAC,IAAI;QACP,OAAO;YACL,QAAQ;YACR,cAAc;YACd,aAAa,KAAK;QACpB;IACF;IACA,IAAI,QAAQ,IAAI;QACd,OAAO;YACL,QAAQ,GAAG,EAAE;YACb,cAAc,GAAG,IAAI;YACrB,aAAa,GAAG,WAAW;QAC7B;IACF;IACA,IAAI,aAAa,IAAI;QACnB,OAAO;YACL,QAAQ,IAAI,6MAAM,CAAC;gBAAE,SAAS,GAAG,OAAO;YAAC;YACzC,cAAc,GAAG,IAAI;YACrB,aAAa,GAAG,WAAW;QAC7B;IACF;IACA,IAAI,UAAU,KAAK;IACnB,MAAM,eAAe,sBAAsB;IAC3C,IAAI,kBAAkB,IAAI;QACxB,UAAU;IACZ;IACA,IAAI,eAAe,MAAM,CAAC,CAAC,mBAAmB,EAAE,GAAG;QACjD,UAAU,IAAI,oPAAa,CAAC;YAC1B,UAAU;QACZ;IACF;IACA,IAAI,mBAAmB,IAAI;QACzB,UAAU,IAAI,iPAAY,CAAC;IAC7B;IACA,IAAI,aAAa,IAAI;QACnB,UAAU,IAAI,0PAAe,CAAC;YAC5B,MAAM;QACR;IACF;IACA,IAAI,iBAAiB,IAAI;QACvB,MAAM,EAAE,gBAAgB,EAAE,GAAG;QAC7B,UAAU,IAAI,iBAAiB;YAC7B,UAAU;QACZ;IACF;IACA,IAAI,mBAAmB,MAAM,gBAAkB,aAAa;QAC1D,IAAI,eAAe,KAAK;QACxB,IAAI;YACF,IAAI,aAAa;YACjB,CAAC,EAAE,YAAY,EAAE,GAAG,MAAM,MAAM,CAC9B,gBAAgB,GAChB,uBAAuB,GACvB,WACD;QACH,EAAE,OAAO,OAAO;YACd,IAAI,UAAU,QAAQ,OAAO,UAAU,YAAY,UAAU,SAAS,MAAM,IAAI,KAAK,8BAA8B;gBACjH,MAAM;YACR;QACF;QACA,IAAI,gBAAgB,cAAc,cAAc;YAC9C,MAAM,EAAE,iBAAiB,EAAE,GAAG;YAC9B,UAAU,IAAI,kBAAkB;gBAC9B,UAAU;YACZ;QACF;IACF;IACA,OAAO;QACL,QAAQ,UAAU,IAAI,6MAAM,CAAC;YAAE;QAAQ,KAAK;QAC5C;QACA,aAAa,KAAK;IACpB;AACF;AAEA,MAAM,gBAAgB,CAAC,IAAI;IACzB,IAAI,cAAc;IAClB,MAAM,sBAAsB,CAAC;QAC3B,OAAO,CAAC,EAAE,YAAY,EAAE,MAAM,EAAE,mBAAmB,EAAE;YACnD,MAAM,gBAAgB,OAAO,QAAQ,SAAS,OAAO;gBACnD,IAAI;gBACJ,IAAI,QAAQ,SAAS,SAAS;oBAC5B,MAAM,QAAQ,OAAO;oBACrB,MAAM,QAAQ,OAAO,EAAE,GAAG,OAAO,MAAM,MAAM,GAAG,KAAK,KAAK,CAAC,EAAE,EAAE,QAAQ,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG;oBACxF,IAAI,CAAC,OAAO,EAAE,IAAI,MAAM,MAAM,KAAK,GAAG;wBACpC,MAAM,MAAM,IAAI,UAAU,CAAC,OAAO,SAAS,GAAG,OAAO,CAAC,aAAa;4BAAE;4BAAO;wBAAM,IAAI,QAAQ,KAAK,CAAC,GAAG,gBAAgB;wBACvH,OAAO;oBACT;oBACA,MAAM,QAAQ,MAAM,CAAC,MAAM,IAAI,KAAK,CAAC,EAAE,EAAE;oBACzC,MAAM,MAAM,IAAI,UAAU,CAAC,OAAO,SAAS,GAAG,OAAO,CAAC,aAAa;wBAAE;wBAAO;oBAAM,IAAI,QAAQ,KAAK,CAAC,aAAa;wBAAE;wBAAO;oBAAM,IAAI,KAAK,OAAO,KAAK,CAAC,GAAG,gBAAgB;oBACzK,OAAO;gBACT;gBACA,IAAI,QAAQ,SAAS,SAAS;oBAC5B,MAAM,MAAM,QAAQ,SAAS,CAAC,YAAY,gBAAgB;oBAC1D,OAAO;gBACT;gBACA,MAAM,MAAM,QAAQ,YAAY,GAAG,gBAAgB;gBACnD,OAAO;YACT;YACA,SAAS,mBAAmB,KAAK,EAAE,KAAK,EAAE,KAAK;gBAC7C,IAAI,UAAU,MAAM;oBAClB,OAAO;gBACT;gBACA,MAAM,EAAE,OAAO,QAAQ,EAAE,GAAG,UAAU,CAAC;gBACvC,IAAI,IAAI,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM;gBACpC,IAAI,CAAC,GAAG;oBACN,IAAI,OAAO,MAAM,CAAC,QAAQ,IAAI,CAAC,CAAC,KAAO,GAAG,SAAS,KAAK;gBAC1D;gBACA,IAAI,EAAE,IAAI,KAAK,aAAa,CAAC,SAAS,YAAY,SAAS,OAAO,KAAK,UAAU,QAAQ,UAAU,KAAK,GAAG;oBACzG,OAAO,QAAQ,IAAI;gBACrB;gBACA,IAAI,EAAE,IAAI,KAAK,UAAU,SAAS,iBAAiB,MAAM;oBACvD,IAAI,SAAS,UAAU,OAAO,MAAM,WAAW;oBAC/C,OAAO;gBACT;gBACA,OAAO;YACT;YACA,SAAS,qBAAqB,KAAK;gBACjC,SAAS,gBAAgB,GAAG;oBAC1B,IAAK,MAAM,OAAO,IAAK;wBACrB,IAAI,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,MAAM;wBACrD,MAAM,QAAQ,GAAG,CAAC,IAAI;wBACtB,IAAI,iBAAiB,QAAQ,QAAQ,SAAS;6BAAgB,IAAI,OAAO,UAAU,YAAY,UAAU,MAAM;4BAC7G,gBAAgB;wBAClB;oBACF;gBACF;gBACA,IAAI,MAAM,OAAO,CAAC,QAAQ;oBACxB,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;wBACrC,MAAM,OAAO,KAAK,CAAC,EAAE;wBACrB,IAAI,OAAO,SAAS,YAAY,SAAS,MAAM;4BAC7C,gBAAgB;wBAClB;oBACF;gBACF,OAAO,IAAI,OAAO,UAAU,YAAY,UAAU,MAAM;oBACtD,gBAAgB;gBAClB;gBACA,OAAO;YACT;YACA,SAAS,mBAAmB,KAAK,EAAE,CAAC;gBAClC,IAAI,CAAC,GACH,OAAO;oBACL,KAAK;oBACL,IAAI;gBACN;gBACF,MAAM,aAAa;oBACjB,KAAK,EAAE;oBACP,IAAI,EAAE;gBACR;gBACA,EAAE,OAAO,CAAC,CAAC;oBACT,IAAI,EACF,OAAO,MAAM,EACb,KAAK,EACL,WAAW,GAAG,EACd,YAAY,KAAK,EAClB,GAAG;oBACJ,MAAM,QAAQ,aAAa;wBAAE;wBAAO,OAAO;oBAAO;oBAClD,QAAQ,mBAAmB,OAAO,OAAO;oBACzC,MAAM,OAAO,CAAC;wBACZ,IAAI,SAAS,WAAW,OAAO,MAAM;4BACnC,OAAO,GAAG,OAAO,MAAM,MAAM,OAAO,CAAC,SAAS,QAAQ;gCAAC;6BAAM;wBAC/D;wBACA,IAAI,SAAS,WAAW,OAAO,UAAU;4BACvC,OAAO,GACL,OACA,UACA,MAAM,OAAO,CAAC,SAAS,QAAQ;gCAAC;6BAAM;wBAE1C;wBACA,IAAI,aAAa,YAAY;4BAC3B,OAAO,GAAG,OAAO,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;wBACvC;wBACA,IAAI,aAAa,eAAe;4BAC9B,OAAO,GAAG,OAAO,QAAQ,GAAG,MAAM,CAAC,CAAC;wBACtC;wBACA,IAAI,aAAa,aAAa;4BAC5B,OAAO,GAAG,OAAO,QAAQ,CAAC,CAAC,EAAE,OAAO;wBACtC;wBACA,IAAI,aAAa,MAAM;4BACrB,OAAO,GAAG,OAAO,KAAK;wBACxB;wBACA,IAAI,aAAa,MAAM;4BACrB,OAAO,GAAG,OAAO,MAAM;wBACzB;wBACA,IAAI,aAAa,MAAM;4BACrB,OAAO,GAAG,OAAO,KAAK;wBACxB;wBACA,IAAI,aAAa,OAAO;4BACtB,OAAO,GAAG,OAAO,MAAM;wBACzB;wBACA,IAAI,aAAa,MAAM;4BACrB,OAAO,GAAG,OAAO,KAAK;wBACxB;wBACA,IAAI,aAAa,OAAO;4BACtB,OAAO,GAAG,OAAO,MAAM;wBACzB;wBACA,OAAO,GAAG,OAAO,UAAU;oBAC7B;oBACA,IAAI,cAAc,MAAM;wBACtB,WAAW,EAAE,CAAC,IAAI,CAAC;oBACrB,OAAO;wBACL,WAAW,GAAG,CAAC,IAAI,CAAC;oBACtB;gBACF;gBACA,OAAO;oBACL,KAAK,WAAW,GAAG,CAAC,MAAM,GAAG,WAAW,GAAG,GAAG;oBAC9C,IAAI,WAAW,EAAE,CAAC,MAAM,GAAG,WAAW,EAAE,GAAG;gBAC7C;YACF;YACA,OAAO;gBACL,MAAM,QAAO,EAAE,IAAI,EAAE,KAAK,EAAE;oBAC1B,MAAM,UAAU,IAAI,UAAU,CAAC,OAAO,MAAM,CAAC;oBAC7C,MAAM,WAAW,MAAM,cAAc,MAAM,SAAS,OAAO,EAAE;oBAC7D,OAAO,qBAAqB;gBAC9B;gBACA,MAAM,SAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE;oBACpC,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,mBAAmB,OAAO;oBAC9C,IAAI,QAAQ,IAAI,UAAU,CAAC,OAAO,SAAS;oBAC3C,IAAI,KAAK;wBACP,QAAQ,MAAM,KAAK,CAAC,CAAC,KAAO,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,OAAS,KAAK;oBAC5D;oBACA,IAAI,IAAI;wBACN,QAAQ,MAAM,KAAK,CAAC,CAAC,KAAO,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,OAAS,KAAK;oBAC1D;oBACA,MAAM,MAAM,MAAM,MAAM,gBAAgB;oBACxC,IAAI,CAAC,KAAK,OAAO;oBACjB,OAAO,qBAAqB;gBAC9B;gBACA,MAAM,UAAS,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE;oBACpD,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,mBAAmB,OAAO;oBAC9C,IAAI,QAAQ,IAAI,UAAU,CAAC;oBAC3B,IAAI,KAAK;wBACP,QAAQ,MAAM,KAAK,CAAC,CAAC,KAAO,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,OAAS,KAAK;oBAC5D;oBACA,IAAI,IAAI;wBACN,QAAQ,MAAM,KAAK,CAAC,CAAC,KAAO,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,OAAS,KAAK;oBAC1D;oBACA,IAAI,QAAQ,SAAS,SAAS;wBAC5B,IAAI,CAAC,QAAQ;4BACX,QAAQ,MAAM,GAAG,CAAC,SAAS;wBAC7B;oBACF,OAAO;wBACL,QAAQ,MAAM,KAAK,CAAC,SAAS;oBAC/B;oBACA,IAAI,QAAQ;wBACV,QAAQ,MAAM,OAAO,CACnB,aAAa;4BAAE;4BAAO,OAAO,OAAO,KAAK;wBAAC,IAC1C,OAAO,SAAS;oBAEpB;oBACA,IAAI,QAAQ;wBACV,IAAI,QAAQ,SAAS,SAAS;4BAC5B,IAAI,CAAC,QAAQ;gCACX,QAAQ,MAAM,OAAO,CAAC,aAAa;oCAAE;oCAAO,OAAO;gCAAK;4BAC1D;4BACA,QAAQ,MAAM,MAAM,CAAC,QAAQ,KAAK,CAAC,SAAS;wBAC9C,OAAO;4BACL,QAAQ,MAAM,MAAM,CAAC;wBACvB;oBACF;oBACA,MAAM,MAAM,MAAM,MAAM,SAAS,GAAG,OAAO;oBAC3C,IAAI,CAAC,KAAK,OAAO,EAAE;oBACnB,OAAO,qBAAqB;gBAC9B;gBACA,MAAM,QAAO,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,MAAM,EAAE;oBAC3C,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,mBAAmB,OAAO;oBAC9C,IAAI,QAAQ,IAAI,WAAW,CAAC,OAAO,GAAG,CAAC;oBACvC,IAAI,KAAK;wBACP,QAAQ,MAAM,KAAK,CAAC,CAAC,KAAO,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,OAAS,KAAK;oBAC5D;oBACA,IAAI,IAAI;wBACN,QAAQ,MAAM,KAAK,CAAC,CAAC,KAAO,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,OAAS,KAAK;oBAC1D;oBACA,OAAO,qBACL,MAAM,cAAc,QAAQ,OAAO,OAAO;gBAE9C;gBACA,MAAM,YAAW,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,MAAM,EAAE;oBAC/C,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,mBAAmB,OAAO;oBAC9C,IAAI,QAAQ,IAAI,WAAW,CAAC,OAAO,GAAG,CAAC;oBACvC,IAAI,KAAK;wBACP,QAAQ,MAAM,KAAK,CAAC,CAAC,KAAO,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,OAAS,KAAK;oBAC5D;oBACA,IAAI,IAAI;wBACN,QAAQ,MAAM,KAAK,CAAC,CAAC,KAAO,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,OAAS,KAAK;oBAC1D;oBACA,MAAM,MAAM,MAAM,MAAM,OAAO;oBAC/B,OAAO,IAAI,MAAM;gBACnB;gBACA,MAAM,OAAM,EAAE,KAAK,EAAE,KAAK,EAAE;oBAC1B,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,mBAAmB,OAAO;oBAC9C,IAAI,QAAQ,IAAI,UAAU,CAAC,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;oBAC/D,IAAI,KAAK;wBACP,QAAQ,MAAM,KAAK,CAAC,CAAC,KAAO,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,OAAS,KAAK;oBAC5D;oBACA,IAAI,IAAI;wBACN,QAAQ,MAAM,KAAK,CAAC,CAAC,KAAO,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,OAAS,KAAK;oBAC1D;oBACA,MAAM,MAAM,MAAM,MAAM,OAAO;oBAC/B,IAAI,OAAO,GAAG,CAAC,EAAE,CAAC,KAAK,KAAK,UAAU;wBACpC,OAAO,GAAG,CAAC,EAAE,CAAC,KAAK;oBACrB;oBACA,IAAI,OAAO,GAAG,CAAC,EAAE,CAAC,KAAK,KAAK,UAAU;wBACpC,OAAO,OAAO,GAAG,CAAC,EAAE,CAAC,KAAK;oBAC5B;oBACA,OAAO,SAAS,GAAG,CAAC,EAAE,CAAC,KAAK;gBAC9B;gBACA,MAAM,QAAO,EAAE,KAAK,EAAE,KAAK,EAAE;oBAC3B,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,mBAAmB,OAAO;oBAC9C,IAAI,QAAQ,IAAI,UAAU,CAAC;oBAC3B,IAAI,KAAK;wBACP,QAAQ,MAAM,KAAK,CAAC,CAAC,KAAO,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,OAAS,KAAK;oBAC5D;oBACA,IAAI,IAAI;wBACN,QAAQ,MAAM,KAAK,CAAC,CAAC,KAAO,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,OAAS,KAAK;oBAC1D;oBACA,MAAM,MAAM,OAAO;gBACrB;gBACA,MAAM,YAAW,EAAE,KAAK,EAAE,KAAK,EAAE;oBAC/B,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,mBAAmB,OAAO;oBAC9C,IAAI,QAAQ,IAAI,UAAU,CAAC;oBAC3B,IAAI,KAAK;wBACP,QAAQ,MAAM,KAAK,CAAC,CAAC,KAAO,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,OAAS,KAAK;oBAC5D;oBACA,IAAI,IAAI;wBACN,QAAQ,MAAM,KAAK,CAAC,CAAC,KAAO,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,OAAS,KAAK;oBAC1D;oBACA,OAAO,CAAC,MAAM,MAAM,OAAO,EAAE,EAAE,MAAM;gBACvC;gBACA,SAAS;YACX;QACF;IACF;IACA,IAAI,iBAAiB;IACrB,iBAAiB;QACf,QAAQ;YACN,WAAW;YACX,aAAa;YACb,WAAW,QAAQ;YACnB,WAAW,QAAQ;YACnB,kBAAkB,QAAQ,SAAS,YAAY,QAAQ,SAAS,WAAW,QAAQ,SAAS,WAAW,CAAC,QAAQ,OAAO,QAAQ;YAC/H,eAAe,QAAQ,SAAS,YAAY,QAAQ,SAAS,WAAW,CAAC,QAAQ,OAAO,QAAQ;YAChG,cAAc;YACd,aAAa,QAAQ,eAAe,QAAQ,CAAC,KAAO,GAAG,WAAW,GAAG,OAAO,CAAC,CAAC;oBAC5E,MAAM,WAAW,IAAA,sYAAoB,EAAC;wBACpC,QAAQ,eAAe,MAAM;wBAC7B,SAAS,oBAAoB;oBAC/B,GAAG;oBACH,OAAO,GAAG;gBACZ,KAAK;QACP;QACA,SAAS,oBAAoB;IAC/B;IACA,MAAM,UAAU,IAAA,sYAAoB,EAAC;IACrC,OAAO,CAAC;QACN,cAAc;QACd,OAAO,QAAQ;IACjB;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3114, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.QSZgH9k6.mjs"],"sourcesContent":["import '@better-auth/utils/random';\nimport 'zod';\nimport 'better-call';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha.js';\nimport '@noble/ciphers/utils.js';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt.js';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils.js';\nimport './better-auth.B4Qoxdgc.mjs';\nimport { a as logger } from './better-auth.DgGir396.mjs';\nimport { c as createAdapterFactory } from './better-auth.BvvYEWCP.mjs';\n\nconst memoryAdapter = (db, config) => {\n  let lazyOptions = null;\n  let adapterCreator = createAdapterFactory({\n    config: {\n      adapterId: \"memory\",\n      adapterName: \"Memory Adapter\",\n      usePlural: false,\n      debugLogs: config?.debugLogs || false,\n      customTransformInput(props) {\n        if (props.options.advanced?.database?.useNumberId && props.field === \"id\" && props.action === \"create\") {\n          return db[props.model].length + 1;\n        }\n        return props.data;\n      },\n      transaction: async (cb) => {\n        let clone = structuredClone(db);\n        try {\n          const r = await cb(adapterCreator(lazyOptions));\n          return r;\n        } catch (error) {\n          Object.keys(db).forEach((key) => {\n            db[key] = clone[key];\n          });\n          throw error;\n        }\n      }\n    },\n    adapter: ({ getFieldName, options, debugLog }) => {\n      function convertWhereClause(where, model) {\n        const table = db[model];\n        if (!table) {\n          logger.error(\n            `[MemoryAdapter] Model ${model} not found in the DB`,\n            Object.keys(db)\n          );\n          throw new Error(`Model ${model} not found`);\n        }\n        const evalClause = (record, clause) => {\n          const { field, value, operator } = clause;\n          switch (operator) {\n            case \"in\":\n              if (!Array.isArray(value)) {\n                throw new Error(\"Value must be an array\");\n              }\n              return value.includes(record[field]);\n            case \"not_in\":\n              if (!Array.isArray(value)) {\n                throw new Error(\"Value must be an array\");\n              }\n              return !value.includes(record[field]);\n            case \"contains\":\n              return record[field].includes(value);\n            case \"starts_with\":\n              return record[field].startsWith(value);\n            case \"ends_with\":\n              return record[field].endsWith(value);\n            case \"ne\":\n              return record[field] !== value;\n            case \"gt\":\n              return value != null && Boolean(record[field] > value);\n            case \"gte\":\n              return value != null && Boolean(record[field] >= value);\n            case \"lt\":\n              return value != null && Boolean(record[field] < value);\n            case \"lte\":\n              return value != null && Boolean(record[field] <= value);\n            default:\n              return record[field] === value;\n          }\n        };\n        return table.filter((record) => {\n          if (!where.length || where.length === 0) {\n            return true;\n          }\n          let result = evalClause(record, where[0]);\n          for (const clause of where) {\n            const clauseResult = evalClause(record, clause);\n            if (clause.connector === \"OR\") {\n              result = result || clauseResult;\n            } else {\n              result = result && clauseResult;\n            }\n          }\n          return result;\n        });\n      }\n      return {\n        create: async ({ model, data }) => {\n          if (options.advanced?.database?.useNumberId) {\n            data.id = db[model].length + 1;\n          }\n          if (!db[model]) {\n            db[model] = [];\n          }\n          db[model].push(data);\n          return data;\n        },\n        findOne: async ({ model, where }) => {\n          const res = convertWhereClause(where, model);\n          const record = res[0] || null;\n          return record;\n        },\n        findMany: async ({ model, where, sortBy, limit, offset }) => {\n          let table = db[model];\n          if (where) {\n            table = convertWhereClause(where, model);\n          }\n          if (sortBy) {\n            table = table.sort((a, b) => {\n              const field = getFieldName({ model, field: sortBy.field });\n              const aValue = a[field];\n              const bValue = b[field];\n              let comparison = 0;\n              if (aValue == null && bValue == null) {\n                comparison = 0;\n              } else if (aValue == null) {\n                comparison = -1;\n              } else if (bValue == null) {\n                comparison = 1;\n              } else if (typeof aValue === \"string\" && typeof bValue === \"string\") {\n                comparison = aValue.localeCompare(bValue);\n              } else if (aValue instanceof Date && bValue instanceof Date) {\n                comparison = aValue.getTime() - bValue.getTime();\n              } else if (typeof aValue === \"number\" && typeof bValue === \"number\") {\n                comparison = aValue - bValue;\n              } else if (typeof aValue === \"boolean\" && typeof bValue === \"boolean\") {\n                comparison = aValue === bValue ? 0 : aValue ? 1 : -1;\n              } else {\n                comparison = String(aValue).localeCompare(String(bValue));\n              }\n              return sortBy.direction === \"asc\" ? comparison : -comparison;\n            });\n          }\n          if (offset !== void 0) {\n            table = table.slice(offset);\n          }\n          if (limit !== void 0) {\n            table = table.slice(0, limit);\n          }\n          return table || [];\n        },\n        count: async ({ model, where }) => {\n          if (where) {\n            const filteredRecords = convertWhereClause(where, model);\n            return filteredRecords.length;\n          }\n          return db[model].length;\n        },\n        update: async ({ model, where, update }) => {\n          const res = convertWhereClause(where, model);\n          res.forEach((record) => {\n            Object.assign(record, update);\n          });\n          return res[0] || null;\n        },\n        delete: async ({ model, where }) => {\n          const table = db[model];\n          const res = convertWhereClause(where, model);\n          db[model] = table.filter((record) => !res.includes(record));\n        },\n        deleteMany: async ({ model, where }) => {\n          const table = db[model];\n          const res = convertWhereClause(where, model);\n          let count = 0;\n          db[model] = table.filter((record) => {\n            if (res.includes(record)) {\n              count++;\n              return false;\n            }\n            return !res.includes(record);\n          });\n          return count;\n        },\n        updateMany({ model, where, update }) {\n          const res = convertWhereClause(where, model);\n          res.forEach((record) => {\n            Object.assign(record, update);\n          });\n          return res[0] || null;\n        }\n      };\n    }\n  });\n  return (options) => {\n    lazyOptions = options;\n    return adapterCreator(options);\n  };\n};\n\nexport { memoryAdapter as m };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3333, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.D-L3RQ6y.mjs"],"sourcesContent":["import { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { b as parseSessionOutput, p as parseUserOutput } from './better-auth.BLnvK9hk.mjs';\nimport { g as getIp } from './better-auth.BQOp-6ij.mjs';\nimport { s as safeJSONParse } from './better-auth.BTrSrKsi.mjs';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\nimport 'zod';\nimport 'better-call';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha.js';\nimport '@noble/ciphers/utils.js';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt.js';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils.js';\nimport './better-auth.B4Qoxdgc.mjs';\nimport { a as logger, c as createLogger } from './better-auth.DgGir396.mjs';\nimport '@better-auth/core/db';\nimport './better-auth.CiuwFiHM.mjs';\nimport '@better-auth/utils/random';\nimport { B as BetterAuthError } from './better-auth.DdzSJf-n.mjs';\nimport { g as getAuthTables } from './better-auth.DhziC0ap.mjs';\nimport { c as createKyselyAdapter, k as kyselyAdapter } from './better-auth.BAk2ZmIN.mjs';\nimport { m as memoryAdapter } from './better-auth.QSZgH9k6.mjs';\nimport { sql } from 'kysely';\n\nfunction getWithHooks(adapter, ctx) {\n  const hooks = ctx.hooks;\n  async function createWithHooks(data, model, customCreateFn, context, trxAdapter) {\n    let actualData = data;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.create?.before;\n      if (toRun) {\n        const result = await toRun(actualData, context);\n        if (result === false) {\n          return null;\n        }\n        const isObject = typeof result === \"object\" && \"data\" in result;\n        if (isObject) {\n          actualData = {\n            ...actualData,\n            ...result.data\n          };\n        }\n      }\n    }\n    const customCreated = customCreateFn ? await customCreateFn.fn(actualData) : null;\n    const created = !customCreateFn || customCreateFn.executeMainFn ? await (trxAdapter || adapter).create({\n      model,\n      data: actualData,\n      forceAllowId: true\n    }) : customCreated;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.create?.after;\n      if (toRun) {\n        await toRun(created, context);\n      }\n    }\n    return created;\n  }\n  async function updateWithHooks(data, where, model, customUpdateFn, context, trxAdapter) {\n    let actualData = data;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.update?.before;\n      if (toRun) {\n        const result = await toRun(data, context);\n        if (result === false) {\n          return null;\n        }\n        const isObject = typeof result === \"object\";\n        actualData = isObject ? result.data : result;\n      }\n    }\n    const customUpdated = customUpdateFn ? await customUpdateFn.fn(actualData) : null;\n    const updated = !customUpdateFn || customUpdateFn.executeMainFn ? await (trxAdapter || adapter).update({\n      model,\n      update: actualData,\n      where\n    }) : customUpdated;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.update?.after;\n      if (toRun) {\n        await toRun(updated, context);\n      }\n    }\n    return updated;\n  }\n  async function updateManyWithHooks(data, where, model, customUpdateFn, context, trxAdapter) {\n    let actualData = data;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.update?.before;\n      if (toRun) {\n        const result = await toRun(data, context);\n        if (result === false) {\n          return null;\n        }\n        const isObject = typeof result === \"object\";\n        actualData = isObject ? result.data : result;\n      }\n    }\n    const customUpdated = customUpdateFn ? await customUpdateFn.fn(actualData) : null;\n    const updated = !customUpdateFn || customUpdateFn.executeMainFn ? await (trxAdapter || adapter).updateMany({\n      model,\n      update: actualData,\n      where\n    }) : customUpdated;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.update?.after;\n      if (toRun) {\n        await toRun(updated, context);\n      }\n    }\n    return updated;\n  }\n  return {\n    createWithHooks,\n    updateWithHooks,\n    updateManyWithHooks\n  };\n}\n\nconst createInternalAdapter = (adapter, ctx) => {\n  const logger = ctx.logger;\n  const options = ctx.options;\n  const secondaryStorage = options.secondaryStorage;\n  const sessionExpiration = options.session?.expiresIn || 60 * 60 * 24 * 7;\n  const { createWithHooks, updateWithHooks, updateManyWithHooks } = getWithHooks(adapter, ctx);\n  async function refreshUserSessions(user) {\n    if (!secondaryStorage) return;\n    const listRaw = await secondaryStorage.get(`active-sessions-${user.id}`);\n    if (!listRaw) return;\n    const now = Date.now();\n    const list = safeJSONParse(listRaw) || [];\n    const validSessions = list.filter((s) => s.expiresAt > now);\n    await Promise.all(\n      validSessions.map(async ({ token }) => {\n        const cached = await secondaryStorage.get(token);\n        if (!cached) return;\n        const parsed = safeJSONParse(cached);\n        if (!parsed) return;\n        const sessionTTL = Math.max(\n          Math.floor(new Date(parsed.session.expiresAt).getTime() - now) / 1e3,\n          0\n        );\n        await secondaryStorage.set(\n          token,\n          JSON.stringify({\n            session: parsed.session,\n            user\n          }),\n          Math.floor(sessionTTL)\n        );\n      })\n    );\n  }\n  return {\n    createOAuthUser: async (user, account, context) => {\n      return adapter.transaction(async (trxAdapter) => {\n        const createdUser = await createWithHooks(\n          {\n            // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n            createdAt: /* @__PURE__ */ new Date(),\n            updatedAt: /* @__PURE__ */ new Date(),\n            ...user\n          },\n          \"user\",\n          void 0,\n          context,\n          trxAdapter\n        );\n        const createdAccount = await createWithHooks(\n          {\n            ...account,\n            userId: createdUser.id,\n            // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n            createdAt: /* @__PURE__ */ new Date(),\n            updatedAt: /* @__PURE__ */ new Date()\n          },\n          \"account\",\n          void 0,\n          context,\n          trxAdapter\n        );\n        return {\n          user: createdUser,\n          account: createdAccount\n        };\n      });\n    },\n    createUser: async (user, context, trxAdapter) => {\n      const createdUser = await createWithHooks(\n        {\n          // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          ...user,\n          email: user.email?.toLowerCase()\n        },\n        \"user\",\n        void 0,\n        context,\n        trxAdapter\n      );\n      return createdUser;\n    },\n    createAccount: async (account, context, trxAdapter) => {\n      const createdAccount = await createWithHooks(\n        {\n          // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          ...account\n        },\n        \"account\",\n        void 0,\n        context,\n        trxAdapter\n      );\n      return createdAccount;\n    },\n    listSessions: async (userId, trxAdapter) => {\n      if (secondaryStorage) {\n        const currentList = await secondaryStorage.get(\n          `active-sessions-${userId}`\n        );\n        if (!currentList) return [];\n        const list = safeJSONParse(currentList) || [];\n        const now = Date.now();\n        const validSessions = list.filter((s) => s.expiresAt > now);\n        const sessions2 = [];\n        for (const session of validSessions) {\n          const sessionStringified = await secondaryStorage.get(session.token);\n          if (sessionStringified) {\n            const s = safeJSONParse(sessionStringified);\n            if (!s) return [];\n            const parsedSession = parseSessionOutput(ctx.options, {\n              ...s.session,\n              expiresAt: new Date(s.session.expiresAt)\n            });\n            sessions2.push(parsedSession);\n          }\n        }\n        return sessions2;\n      }\n      const sessions = await (trxAdapter || adapter).findMany({\n        model: \"session\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      return sessions;\n    },\n    listUsers: async (limit, offset, sortBy, where, trxAdapter) => {\n      const users = await (trxAdapter || adapter).findMany({\n        model: \"user\",\n        limit,\n        offset,\n        sortBy,\n        where\n      });\n      return users;\n    },\n    countTotalUsers: async (where, trxAdapter) => {\n      const total = await (trxAdapter || adapter).count({\n        model: \"user\",\n        where\n      });\n      if (typeof total === \"string\") {\n        return parseInt(total);\n      }\n      return total;\n    },\n    deleteUser: async (userId, trxAdapter) => {\n      if (secondaryStorage) {\n        await secondaryStorage.delete(`active-sessions-${userId}`);\n      }\n      if (!secondaryStorage || options.session?.storeSessionInDatabase) {\n        await (trxAdapter || adapter).deleteMany({\n          model: \"session\",\n          where: [\n            {\n              field: \"userId\",\n              value: userId\n            }\n          ]\n        });\n      }\n      await (trxAdapter || adapter).deleteMany({\n        model: \"account\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      await (trxAdapter || adapter).delete({\n        model: \"user\",\n        where: [\n          {\n            field: \"id\",\n            value: userId\n          }\n        ]\n      });\n    },\n    createSession: async (userId, ctx2, dontRememberMe, override, overrideAll, trxAdapter) => {\n      const headers = ctx2.headers || ctx2.request?.headers;\n      const { id: _, ...rest } = override || {};\n      const data = {\n        ipAddress: ctx2.request || ctx2.headers ? getIp(ctx2.request || ctx2.headers, ctx2.context.options) || \"\" : \"\",\n        userAgent: headers?.get(\"user-agent\") || \"\",\n        ...rest,\n        /**\n         * If the user doesn't want to be remembered\n         * set the session to expire in 1 day.\n         * The cookie will be set to expire at the end of the session\n         */\n        expiresAt: dontRememberMe ? getDate(60 * 60 * 24, \"sec\") : getDate(sessionExpiration, \"sec\"),\n        userId,\n        token: generateId(32),\n        // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n        createdAt: /* @__PURE__ */ new Date(),\n        updatedAt: /* @__PURE__ */ new Date(),\n        ...overrideAll ? rest : {}\n      };\n      const res = await createWithHooks(\n        data,\n        \"session\",\n        secondaryStorage ? {\n          fn: async (sessionData) => {\n            const currentList = await secondaryStorage.get(\n              `active-sessions-${userId}`\n            );\n            let list = [];\n            const now = Date.now();\n            if (currentList) {\n              list = safeJSONParse(currentList) || [];\n              list = list.filter((session) => session.expiresAt > now);\n            }\n            const sorted = list.sort((a, b) => a.expiresAt - b.expiresAt);\n            let furthestSessionExp = sorted.at(-1)?.expiresAt;\n            sorted.push({\n              token: data.token,\n              expiresAt: data.expiresAt.getTime()\n            });\n            if (!furthestSessionExp || furthestSessionExp < data.expiresAt.getTime()) {\n              furthestSessionExp = data.expiresAt.getTime();\n            }\n            const furthestSessionTTL = Math.max(\n              Math.floor((furthestSessionExp - now) / 1e3),\n              0\n            );\n            if (furthestSessionTTL > 0) {\n              await secondaryStorage.set(\n                `active-sessions-${userId}`,\n                JSON.stringify(sorted),\n                furthestSessionTTL\n              );\n            }\n            const user = await adapter.findOne({\n              model: \"user\",\n              where: [\n                {\n                  field: \"id\",\n                  value: userId\n                }\n              ]\n            });\n            const sessionTTL = Math.max(\n              Math.floor((data.expiresAt.getTime() - now) / 1e3),\n              0\n            );\n            if (sessionTTL > 0) {\n              await secondaryStorage.set(\n                data.token,\n                JSON.stringify({\n                  session: sessionData,\n                  user\n                }),\n                sessionTTL\n              );\n            }\n            return sessionData;\n          },\n          executeMainFn: options.session?.storeSessionInDatabase\n        } : void 0,\n        ctx2,\n        trxAdapter\n      );\n      return res;\n    },\n    findSession: async (token, trxAdapter) => {\n      if (secondaryStorage) {\n        const sessionStringified = await secondaryStorage.get(token);\n        if (!sessionStringified && !options.session?.storeSessionInDatabase) {\n          return null;\n        }\n        if (sessionStringified) {\n          const s = safeJSONParse(sessionStringified);\n          if (!s) return null;\n          const parsedSession2 = parseSessionOutput(ctx.options, {\n            ...s.session,\n            expiresAt: new Date(s.session.expiresAt),\n            createdAt: new Date(s.session.createdAt),\n            updatedAt: new Date(s.session.updatedAt)\n          });\n          const parsedUser2 = parseUserOutput(ctx.options, {\n            ...s.user,\n            createdAt: new Date(s.user.createdAt),\n            updatedAt: new Date(s.user.updatedAt)\n          });\n          return {\n            session: parsedSession2,\n            user: parsedUser2\n          };\n        }\n      }\n      const session = await (trxAdapter || adapter).findOne({\n        model: \"session\",\n        where: [\n          {\n            value: token,\n            field: \"token\"\n          }\n        ]\n      });\n      if (!session) {\n        return null;\n      }\n      const user = await (trxAdapter || adapter).findOne({\n        model: \"user\",\n        where: [\n          {\n            value: session.userId,\n            field: \"id\"\n          }\n        ]\n      });\n      if (!user) {\n        return null;\n      }\n      const parsedSession = parseSessionOutput(ctx.options, session);\n      const parsedUser = parseUserOutput(ctx.options, user);\n      return {\n        session: parsedSession,\n        user: parsedUser\n      };\n    },\n    findSessions: async (sessionTokens, trxAdapter) => {\n      if (secondaryStorage) {\n        const sessions2 = [];\n        for (const sessionToken of sessionTokens) {\n          const sessionStringified = await secondaryStorage.get(sessionToken);\n          if (sessionStringified) {\n            const s = safeJSONParse(sessionStringified);\n            if (!s) return [];\n            const session = {\n              session: {\n                ...s.session,\n                expiresAt: new Date(s.session.expiresAt)\n              },\n              user: {\n                ...s.user,\n                createdAt: new Date(s.user.createdAt),\n                updatedAt: new Date(s.user.updatedAt)\n              }\n            };\n            sessions2.push(session);\n          }\n        }\n        return sessions2;\n      }\n      const sessions = await (trxAdapter || adapter).findMany({\n        model: \"session\",\n        where: [\n          {\n            field: \"token\",\n            value: sessionTokens,\n            operator: \"in\"\n          }\n        ]\n      });\n      const userIds = sessions.map((session) => {\n        return session.userId;\n      });\n      if (!userIds.length) return [];\n      const users = await (trxAdapter || adapter).findMany({\n        model: \"user\",\n        where: [\n          {\n            field: \"id\",\n            value: userIds,\n            operator: \"in\"\n          }\n        ]\n      });\n      return sessions.map((session) => {\n        const user = users.find((u) => u.id === session.userId);\n        if (!user) return null;\n        return {\n          session,\n          user\n        };\n      });\n    },\n    updateSession: async (sessionToken, session, context, trxAdapter) => {\n      const updatedSession = await updateWithHooks(\n        session,\n        [{ field: \"token\", value: sessionToken }],\n        \"session\",\n        secondaryStorage ? {\n          async fn(data) {\n            const currentSession = await secondaryStorage.get(sessionToken);\n            let updatedSession2 = null;\n            if (currentSession) {\n              const parsedSession = safeJSONParse(currentSession);\n              if (!parsedSession) return null;\n              updatedSession2 = {\n                ...parsedSession.session,\n                ...data\n              };\n              return updatedSession2;\n            } else {\n              return null;\n            }\n          },\n          executeMainFn: options.session?.storeSessionInDatabase\n        } : void 0,\n        context,\n        trxAdapter\n      );\n      return updatedSession;\n    },\n    deleteSession: async (token, trxAdapter) => {\n      if (secondaryStorage) {\n        const data = await secondaryStorage.get(token);\n        if (data) {\n          const { session } = safeJSONParse(data) ?? {};\n          if (!session) {\n            logger.error(\"Session not found in secondary storage\");\n            return;\n          }\n          const userId = session.userId;\n          const currentList = await secondaryStorage.get(\n            `active-sessions-${userId}`\n          );\n          if (currentList) {\n            let list = safeJSONParse(currentList) || [];\n            const now = Date.now();\n            const filtered = list.filter(\n              (session2) => session2.expiresAt > now && session2.token !== token\n            );\n            const sorted = filtered.sort((a, b) => a.expiresAt - b.expiresAt);\n            const furthestSessionExp = sorted.at(-1)?.expiresAt;\n            if (filtered.length > 0 && furthestSessionExp && furthestSessionExp > Date.now()) {\n              await secondaryStorage.set(\n                `active-sessions-${userId}`,\n                JSON.stringify(filtered),\n                Math.floor((furthestSessionExp - now) / 1e3)\n              );\n            } else {\n              await secondaryStorage.delete(`active-sessions-${userId}`);\n            }\n          } else {\n            logger.error(\"Active sessions list not found in secondary storage\");\n          }\n        }\n        await secondaryStorage.delete(token);\n        if (!options.session?.storeSessionInDatabase || ctx.options.session?.preserveSessionInDatabase) {\n          return;\n        }\n      }\n      await (trxAdapter || adapter).delete({\n        model: \"session\",\n        where: [\n          {\n            field: \"token\",\n            value: token\n          }\n        ]\n      });\n    },\n    deleteAccounts: async (userId, trxAdapter) => {\n      await (trxAdapter || adapter).deleteMany({\n        model: \"account\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n    },\n    deleteAccount: async (accountId, trxAdapter) => {\n      await (trxAdapter || adapter).delete({\n        model: \"account\",\n        where: [\n          {\n            field: \"id\",\n            value: accountId\n          }\n        ]\n      });\n    },\n    deleteSessions: async (userIdOrSessionTokens, trxAdapter) => {\n      if (secondaryStorage) {\n        if (typeof userIdOrSessionTokens === \"string\") {\n          const activeSession = await secondaryStorage.get(\n            `active-sessions-${userIdOrSessionTokens}`\n          );\n          const sessions = activeSession ? safeJSONParse(activeSession) : [];\n          if (!sessions) return;\n          for (const session of sessions) {\n            await secondaryStorage.delete(session.token);\n          }\n        } else {\n          for (const sessionToken of userIdOrSessionTokens) {\n            const session = await secondaryStorage.get(sessionToken);\n            if (session) {\n              await secondaryStorage.delete(sessionToken);\n            }\n          }\n        }\n        if (!options.session?.storeSessionInDatabase || ctx.options.session?.preserveSessionInDatabase) {\n          return;\n        }\n      }\n      await (trxAdapter || adapter).deleteMany({\n        model: \"session\",\n        where: [\n          {\n            field: Array.isArray(userIdOrSessionTokens) ? \"token\" : \"userId\",\n            value: userIdOrSessionTokens,\n            operator: Array.isArray(userIdOrSessionTokens) ? \"in\" : void 0\n          }\n        ]\n      });\n    },\n    findOAuthUser: async (email, accountId, providerId, trxAdapter) => {\n      const account = await (trxAdapter || adapter).findMany({\n        model: \"account\",\n        where: [\n          {\n            value: accountId,\n            field: \"accountId\"\n          }\n        ]\n      }).then((accounts) => {\n        return accounts.find((a) => a.providerId === providerId);\n      });\n      if (account) {\n        const user = await (trxAdapter || adapter).findOne({\n          model: \"user\",\n          where: [\n            {\n              value: account.userId,\n              field: \"id\"\n            }\n          ]\n        });\n        if (user) {\n          return {\n            user,\n            accounts: [account]\n          };\n        } else {\n          const user2 = await (trxAdapter || adapter).findOne({\n            model: \"user\",\n            where: [\n              {\n                value: email.toLowerCase(),\n                field: \"email\"\n              }\n            ]\n          });\n          if (user2) {\n            return {\n              user: user2,\n              accounts: [account]\n            };\n          }\n          return null;\n        }\n      } else {\n        const user = await (trxAdapter || adapter).findOne({\n          model: \"user\",\n          where: [\n            {\n              value: email.toLowerCase(),\n              field: \"email\"\n            }\n          ]\n        });\n        if (user) {\n          const accounts = await (trxAdapter || adapter).findMany({\n            model: \"account\",\n            where: [\n              {\n                value: user.id,\n                field: \"userId\"\n              }\n            ]\n          });\n          return {\n            user,\n            accounts: accounts || []\n          };\n        } else {\n          return null;\n        }\n      }\n    },\n    findUserByEmail: async (email, options2, trxAdapter) => {\n      const user = await (trxAdapter || adapter).findOne({\n        model: \"user\",\n        where: [\n          {\n            value: email.toLowerCase(),\n            field: \"email\"\n          }\n        ]\n      });\n      if (!user) return null;\n      if (options2?.includeAccounts) {\n        const accounts = await (trxAdapter || adapter).findMany({\n          model: \"account\",\n          where: [\n            {\n              value: user.id,\n              field: \"userId\"\n            }\n          ]\n        });\n        return {\n          user,\n          accounts\n        };\n      }\n      return {\n        user,\n        accounts: []\n      };\n    },\n    findUserById: async (userId, trxAdapter) => {\n      const user = await (trxAdapter || adapter).findOne({\n        model: \"user\",\n        where: [\n          {\n            field: \"id\",\n            value: userId\n          }\n        ]\n      });\n      return user;\n    },\n    linkAccount: async (account, context, trxAdapter) => {\n      const _account = await createWithHooks(\n        {\n          // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          ...account\n        },\n        \"account\",\n        void 0,\n        context,\n        trxAdapter\n      );\n      return _account;\n    },\n    updateUser: async (userId, data, context, trxAdapter) => {\n      const user = await updateWithHooks(\n        data,\n        [\n          {\n            field: \"id\",\n            value: userId\n          }\n        ],\n        \"user\",\n        void 0,\n        context,\n        trxAdapter\n      );\n      await refreshUserSessions(user);\n      await refreshUserSessions(user);\n      return user;\n    },\n    updateUserByEmail: async (email, data, context, trxAdapter) => {\n      const user = await updateWithHooks(\n        data,\n        [\n          {\n            field: \"email\",\n            value: email.toLowerCase()\n          }\n        ],\n        \"user\",\n        void 0,\n        context,\n        trxAdapter\n      );\n      await refreshUserSessions(user);\n      await refreshUserSessions(user);\n      return user;\n    },\n    updatePassword: async (userId, password, context, trxAdapter) => {\n      await updateManyWithHooks(\n        {\n          password\n        },\n        [\n          {\n            field: \"userId\",\n            value: userId\n          },\n          {\n            field: \"providerId\",\n            value: \"credential\"\n          }\n        ],\n        \"account\",\n        void 0,\n        context,\n        trxAdapter\n      );\n    },\n    findAccounts: async (userId, trxAdapter) => {\n      const accounts = await (trxAdapter || adapter).findMany({\n        model: \"account\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      return accounts;\n    },\n    findAccount: async (accountId, trxAdapter) => {\n      const account = await (trxAdapter || adapter).findOne({\n        model: \"account\",\n        where: [\n          {\n            field: \"accountId\",\n            value: accountId\n          }\n        ]\n      });\n      return account;\n    },\n    findAccountByProviderId: async (accountId, providerId, trxAdapter) => {\n      const account = await (trxAdapter || adapter).findOne({\n        model: \"account\",\n        where: [\n          {\n            field: \"accountId\",\n            value: accountId\n          },\n          {\n            field: \"providerId\",\n            value: providerId\n          }\n        ]\n      });\n      return account;\n    },\n    findAccountByUserId: async (userId, trxAdapter) => {\n      const account = await (trxAdapter || adapter).findMany({\n        model: \"account\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      return account;\n    },\n    updateAccount: async (id, data, context, trxAdapter) => {\n      const account = await updateWithHooks(\n        data,\n        [{ field: \"id\", value: id }],\n        \"account\",\n        void 0,\n        context,\n        trxAdapter\n      );\n      return account;\n    },\n    createVerificationValue: async (data, context, trxAdapter) => {\n      const verification = await createWithHooks(\n        {\n          // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          ...data\n        },\n        \"verification\",\n        void 0,\n        context,\n        trxAdapter\n      );\n      return verification;\n    },\n    findVerificationValue: async (identifier, trxAdapter) => {\n      const verification = await (trxAdapter || adapter).findMany(\n        {\n          model: \"verification\",\n          where: [\n            {\n              field: \"identifier\",\n              value: identifier\n            }\n          ],\n          sortBy: {\n            field: \"createdAt\",\n            direction: \"desc\"\n          },\n          limit: 1\n        }\n      );\n      if (!options.verification?.disableCleanup) {\n        await (trxAdapter || adapter).deleteMany({\n          model: \"verification\",\n          where: [\n            {\n              field: \"expiresAt\",\n              value: /* @__PURE__ */ new Date(),\n              operator: \"lt\"\n            }\n          ]\n        });\n      }\n      const lastVerification = verification[0];\n      return lastVerification;\n    },\n    deleteVerificationValue: async (id, trxAdapter) => {\n      await (trxAdapter || adapter).delete({\n        model: \"verification\",\n        where: [\n          {\n            field: \"id\",\n            value: id\n          }\n        ]\n      });\n    },\n    deleteVerificationByIdentifier: async (identifier, trxAdapter) => {\n      await (trxAdapter || adapter).delete({\n        model: \"verification\",\n        where: [\n          {\n            field: \"identifier\",\n            value: identifier\n          }\n        ]\n      });\n    },\n    updateVerificationValue: async (id, data, context, trxAdapter) => {\n      const verification = await updateWithHooks(\n        data,\n        [{ field: \"id\", value: id }],\n        \"verification\",\n        void 0,\n        context,\n        trxAdapter\n      );\n      return verification;\n    }\n  };\n};\n\nasync function getAdapter(options) {\n  if (!options.database) {\n    const tables = getAuthTables(options);\n    const memoryDB = Object.keys(tables).reduce((acc, key) => {\n      acc[key] = [];\n      return acc;\n    }, {});\n    logger.warn(\n      \"No database configuration provided. Using memory adapter in development\"\n    );\n    return memoryAdapter(memoryDB)(options);\n  }\n  if (typeof options.database === \"function\") {\n    return options.database(options);\n  }\n  const { kysely, databaseType, transaction } = await createKyselyAdapter(options);\n  if (!kysely) {\n    throw new BetterAuthError(\"Failed to initialize database adapter\");\n  }\n  return kyselyAdapter(kysely, {\n    type: databaseType || \"sqlite\",\n    debugLogs: \"debugLogs\" in options.database ? options.database.debugLogs : false,\n    transaction\n  })(options);\n}\nfunction convertToDB(fields, values) {\n  let result = values.id ? {\n    id: values.id\n  } : {};\n  for (const key in fields) {\n    const field = fields[key];\n    const value = values[key];\n    if (value === void 0) {\n      continue;\n    }\n    result[field.fieldName || key] = value;\n  }\n  return result;\n}\nfunction convertFromDB(fields, values) {\n  if (!values) {\n    return null;\n  }\n  let result = {\n    id: values.id\n  };\n  for (const [key, value] of Object.entries(fields)) {\n    result[key] = values[value.fieldName || key];\n  }\n  return result;\n}\n\nfunction getSchema(config) {\n  const tables = getAuthTables(config);\n  let schema = {};\n  for (const key in tables) {\n    const table = tables[key];\n    const fields = table.fields;\n    let actualFields = {};\n    Object.entries(fields).forEach(([key2, field]) => {\n      actualFields[field.fieldName || key2] = field;\n      if (field.references) {\n        const refTable = tables[field.references.model];\n        if (refTable) {\n          actualFields[field.fieldName || key2].references = {\n            ...field.references,\n            model: refTable.modelName,\n            field: field.references.field\n          };\n        }\n      }\n    });\n    if (schema[table.modelName]) {\n      schema[table.modelName].fields = {\n        ...schema[table.modelName].fields,\n        ...actualFields\n      };\n      continue;\n    }\n    schema[table.modelName] = {\n      fields: actualFields,\n      order: table.order || Infinity\n    };\n  }\n  return schema;\n}\n\nconst postgresMap = {\n  string: [\"character varying\", \"varchar\", \"text\"],\n  number: [\n    \"int4\",\n    \"integer\",\n    \"bigint\",\n    \"smallint\",\n    \"numeric\",\n    \"real\",\n    \"double precision\"\n  ],\n  boolean: [\"bool\", \"boolean\"],\n  date: [\"timestamptz\", \"timestamp\", \"date\"],\n  json: [\"json\", \"jsonb\"]\n};\nconst mysqlMap = {\n  string: [\"varchar\", \"text\"],\n  number: [\n    \"integer\",\n    \"int\",\n    \"bigint\",\n    \"smallint\",\n    \"decimal\",\n    \"float\",\n    \"double\"\n  ],\n  boolean: [\"boolean\", \"tinyint\"],\n  date: [\"timestamp\", \"datetime\", \"date\"],\n  json: [\"json\"]\n};\nconst sqliteMap = {\n  string: [\"TEXT\"],\n  number: [\"INTEGER\", \"REAL\"],\n  boolean: [\"INTEGER\", \"BOOLEAN\"],\n  // 0 or 1\n  date: [\"DATE\", \"INTEGER\"],\n  json: [\"TEXT\"]\n};\nconst mssqlMap = {\n  string: [\"varchar\", \"nvarchar\"],\n  number: [\"int\", \"bigint\", \"smallint\", \"decimal\", \"float\", \"double\"],\n  boolean: [\"bit\", \"smallint\"],\n  date: [\"datetime2\", \"date\", \"datetime\"],\n  json: [\"varchar\", \"nvarchar\"]\n};\nconst map = {\n  postgres: postgresMap,\n  mysql: mysqlMap,\n  sqlite: sqliteMap,\n  mssql: mssqlMap\n};\nfunction matchType(columnDataType, fieldType, dbType) {\n  function normalize(type) {\n    return type.toLowerCase().split(\"(\")[0].trim();\n  }\n  if (fieldType === \"string[]\" || fieldType === \"number[]\") {\n    return columnDataType.toLowerCase().includes(\"json\");\n  }\n  const types = map[dbType];\n  const expected = Array.isArray(fieldType) ? types[\"string\"].map((t) => t.toLowerCase()) : types[fieldType].map((t) => t.toLowerCase());\n  return expected.includes(normalize(columnDataType));\n}\nasync function getMigrations(config) {\n  const betterAuthSchema = getSchema(config);\n  const logger = createLogger(config.logger);\n  let { kysely: db, databaseType: dbType } = await createKyselyAdapter(config);\n  if (!dbType) {\n    logger.warn(\n      \"Could not determine database type, defaulting to sqlite. Please provide a type in the database options to avoid this.\"\n    );\n    dbType = \"sqlite\";\n  }\n  if (!db) {\n    logger.error(\n      \"Only kysely adapter is supported for migrations. You can use `generate` command to generate the schema, if you're using a different adapter.\"\n    );\n    process.exit(1);\n  }\n  const tableMetadata = await db.introspection.getTables();\n  const toBeCreated = [];\n  const toBeAdded = [];\n  for (const [key, value] of Object.entries(betterAuthSchema)) {\n    const table = tableMetadata.find((t) => t.name === key);\n    if (!table) {\n      const tIndex = toBeCreated.findIndex((t) => t.table === key);\n      const tableData = {\n        table: key,\n        fields: value.fields,\n        order: value.order || Infinity\n      };\n      const insertIndex = toBeCreated.findIndex(\n        (t) => (t.order || Infinity) > tableData.order\n      );\n      if (insertIndex === -1) {\n        if (tIndex === -1) {\n          toBeCreated.push(tableData);\n        } else {\n          toBeCreated[tIndex].fields = {\n            ...toBeCreated[tIndex].fields,\n            ...value.fields\n          };\n        }\n      } else {\n        toBeCreated.splice(insertIndex, 0, tableData);\n      }\n      continue;\n    }\n    let toBeAddedFields = {};\n    for (const [fieldName, field] of Object.entries(value.fields)) {\n      const column = table.columns.find((c) => c.name === fieldName);\n      if (!column) {\n        toBeAddedFields[fieldName] = field;\n        continue;\n      }\n      if (matchType(column.dataType, field.type, dbType)) {\n        continue;\n      } else {\n        logger.warn(\n          `Field ${fieldName} in table ${key} has a different type in the database. Expected ${field.type} but got ${column.dataType}.`\n        );\n      }\n    }\n    if (Object.keys(toBeAddedFields).length > 0) {\n      toBeAdded.push({\n        table: key,\n        fields: toBeAddedFields,\n        order: value.order || Infinity\n      });\n    }\n  }\n  const migrations = [];\n  function getType(field, fieldName) {\n    const type = field.type;\n    const typeMap = {\n      string: {\n        sqlite: \"text\",\n        postgres: \"text\",\n        mysql: field.unique ? \"varchar(255)\" : field.references ? \"varchar(36)\" : \"text\",\n        mssql: field.unique || field.sortable ? \"varchar(255)\" : field.references ? \"varchar(36)\" : (\n          // mssql deprecated `text`, and the alternative is `varchar(max)`.\n          // Kysely type interface doesn't support `text`, so we set this to `varchar(8000)` as\n          // that's the max length for `varchar`\n          \"varchar(8000)\"\n        )\n      },\n      boolean: {\n        sqlite: \"integer\",\n        postgres: \"boolean\",\n        mysql: \"boolean\",\n        mssql: \"smallint\"\n      },\n      number: {\n        sqlite: field.bigint ? \"bigint\" : \"integer\",\n        postgres: field.bigint ? \"bigint\" : \"integer\",\n        mysql: field.bigint ? \"bigint\" : \"integer\",\n        mssql: field.bigint ? \"bigint\" : \"integer\"\n      },\n      date: {\n        sqlite: \"date\",\n        postgres: \"timestamptz\",\n        mysql: \"timestamp(3)\",\n        mssql: sql`datetime2(3)`\n      },\n      json: {\n        sqlite: \"text\",\n        postgres: \"jsonb\",\n        mysql: \"json\",\n        mssql: \"varchar(8000)\"\n      },\n      id: {\n        postgres: config.advanced?.database?.useNumberId ? \"serial\" : \"text\",\n        mysql: config.advanced?.database?.useNumberId ? \"integer\" : \"varchar(36)\",\n        mssql: config.advanced?.database?.useNumberId ? \"integer\" : \"varchar(36)\",\n        sqlite: config.advanced?.database?.useNumberId ? \"integer\" : \"text\"\n      },\n      foreignKeyId: {\n        postgres: config.advanced?.database?.useNumberId ? \"integer\" : \"text\",\n        mysql: config.advanced?.database?.useNumberId ? \"integer\" : \"varchar(36)\",\n        mssql: config.advanced?.database?.useNumberId ? \"integer\" : \"varchar(36)\",\n        sqlite: config.advanced?.database?.useNumberId ? \"integer\" : \"text\"\n      }\n    };\n    if (fieldName === \"id\" || field.references?.field === \"id\") {\n      if (fieldName === \"id\") {\n        return typeMap.id[dbType];\n      }\n      return typeMap.foreignKeyId[dbType];\n    }\n    if (dbType === \"sqlite\" && (type === \"string[]\" || type === \"number[]\")) {\n      return \"text\";\n    }\n    if (type === \"string[]\" || type === \"number[]\") {\n      return \"jsonb\";\n    }\n    if (Array.isArray(type)) {\n      return \"text\";\n    }\n    return typeMap[type][dbType || \"sqlite\"];\n  }\n  if (toBeAdded.length) {\n    for (const table of toBeAdded) {\n      for (const [fieldName, field] of Object.entries(table.fields)) {\n        const type = getType(field, fieldName);\n        const exec = db.schema.alterTable(table.table).addColumn(fieldName, type, (col) => {\n          col = field.required !== false ? col.notNull() : col;\n          if (field.references) {\n            col = col.references(\n              `${field.references.model}.${field.references.field}`\n            ).onDelete(field.references.onDelete || \"cascade\");\n          }\n          if (field.unique) {\n            col = col.unique();\n          }\n          if (field.type === \"date\" && typeof field.defaultValue === \"function\" && (dbType === \"postgres\" || dbType === \"mysql\" || dbType === \"mssql\")) {\n            if (dbType === \"mysql\") {\n              col = col.defaultTo(sql`CURRENT_TIMESTAMP(3)`);\n            } else {\n              col = col.defaultTo(sql`CURRENT_TIMESTAMP`);\n            }\n          }\n          return col;\n        });\n        migrations.push(exec);\n      }\n    }\n  }\n  if (toBeCreated.length) {\n    for (const table of toBeCreated) {\n      let dbT = db.schema.createTable(table.table).addColumn(\n        \"id\",\n        config.advanced?.database?.useNumberId ? dbType === \"postgres\" ? \"serial\" : \"integer\" : dbType === \"mysql\" || dbType === \"mssql\" ? \"varchar(36)\" : \"text\",\n        (col) => {\n          if (config.advanced?.database?.useNumberId) {\n            if (dbType === \"postgres\" || dbType === \"sqlite\") {\n              return col.primaryKey().notNull();\n            } else if (dbType === \"mssql\") {\n              return col.identity().primaryKey().notNull();\n            }\n            return col.autoIncrement().primaryKey().notNull();\n          }\n          return col.primaryKey().notNull();\n        }\n      );\n      for (const [fieldName, field] of Object.entries(table.fields)) {\n        const type = getType(field, fieldName);\n        dbT = dbT.addColumn(fieldName, type, (col) => {\n          col = field.required !== false ? col.notNull() : col;\n          if (field.references) {\n            col = col.references(`${field.references.model}.${field.references.field}`).onDelete(field.references.onDelete || \"cascade\");\n          }\n          if (field.unique) {\n            col = col.unique();\n          }\n          if (field.type === \"date\" && typeof field.defaultValue === \"function\" && (dbType === \"postgres\" || dbType === \"mysql\" || dbType === \"mssql\")) {\n            if (dbType === \"mysql\") {\n              col = col.defaultTo(sql`CURRENT_TIMESTAMP(3)`);\n            } else {\n              col = col.defaultTo(sql`CURRENT_TIMESTAMP`);\n            }\n          }\n          return col;\n        });\n      }\n      migrations.push(dbT);\n    }\n  }\n  async function runMigrations() {\n    for (const migration of migrations) {\n      await migration.execute();\n    }\n  }\n  async function compileMigrations() {\n    const compiled = migrations.map((m) => m.compile().sql);\n    return compiled.join(\";\\n\\n\") + \";\";\n  }\n  return { toBeCreated, toBeAdded, runMigrations, compileMigrations };\n}\n\nexport { getAdapter as a, convertToDB as b, createInternalAdapter as c, convertFromDB as d, getMigrations as e, getSchema as f, getWithHooks as g, matchType as m };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4652, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.YwDQhoPc.mjs"],"sourcesContent":["import { APIError } from 'better-call';\n\nasync function validatePassword(ctx, data) {\n  const accounts = await ctx.context.internalAdapter.findAccounts(data.userId);\n  const credentialAccount = accounts?.find(\n    (account) => account.providerId === \"credential\"\n  );\n  const currentPassword = credentialAccount?.password;\n  if (!credentialAccount || !currentPassword) {\n    return false;\n  }\n  const compare = await ctx.context.password.verify({\n    hash: currentPassword,\n    password: data.password\n  });\n  return compare;\n}\nasync function checkPassword(userId, c) {\n  const accounts = await c.context.internalAdapter.findAccounts(userId);\n  const credentialAccount = accounts?.find(\n    (account) => account.providerId === \"credential\"\n  );\n  const currentPassword = credentialAccount?.password;\n  if (!credentialAccount || !currentPassword || !c.body.password) {\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"No password credential found\"\n    });\n  }\n  const compare = await c.context.password.verify({\n    hash: currentPassword,\n    password: c.body.password\n  });\n  if (!compare) {\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"Invalid password\"\n    });\n  }\n  return true;\n}\n\nexport { checkPassword as c, validatePassword as v };\n"],"names":[],"mappings":";;;;;;AAAA;;AAEA,eAAe,iBAAiB,GAAG,EAAE,IAAI;IACvC,MAAM,WAAW,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,MAAM;IAC3E,MAAM,oBAAoB,UAAU,KAClC,CAAC,UAAY,QAAQ,UAAU,KAAK;IAEtC,MAAM,kBAAkB,mBAAmB;IAC3C,IAAI,CAAC,qBAAqB,CAAC,iBAAiB;QAC1C,OAAO;IACT;IACA,MAAM,UAAU,MAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;QAChD,MAAM;QACN,UAAU,KAAK,QAAQ;IACzB;IACA,OAAO;AACT;AACA,eAAe,cAAc,MAAM,EAAE,CAAC;IACpC,MAAM,WAAW,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC;IAC9D,MAAM,oBAAoB,UAAU,KAClC,CAAC,UAAY,QAAQ,UAAU,KAAK;IAEtC,MAAM,kBAAkB,mBAAmB;IAC3C,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE;QAC9D,MAAM,IAAI,uNAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,MAAM,UAAU,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC9C,MAAM;QACN,UAAU,EAAE,IAAI,CAAC,QAAQ;IAC3B;IACA,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,uNAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4698, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.mPTDVpKF.mjs"],"sourcesContent":["import { checkEndpointConflicts, getEndpoints, router } from '../api/index.mjs';\nimport { defu } from 'defu';\nimport { hashToBase64, verifyPassword, hashPassword } from '../crypto/index.mjs';\nimport '@better-auth/core/db';\nimport { a as getAdapter, c as createInternalAdapter, e as getMigrations } from './better-auth.D-L3RQ6y.mjs';\nimport { g as getAuthTables } from './better-auth.DhziC0ap.mjs';\nimport 'zod';\nimport 'better-call';\nimport { g as getCookies, c as createCookieGetter } from './better-auth.DiMXeqeq.mjs';\nimport { a as logger, c as createLogger } from './better-auth.DgGir396.mjs';\nimport { U as socialProviders } from './better-auth.C3-_8m-g.mjs';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha.js';\nimport '@noble/ciphers/utils.js';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport './better-auth.B4Qoxdgc.mjs';\nimport { e as env, g as getEnvVar, i as isTest, c as getBooleanEnvVar, E as ENV, b as isProduction } from './better-auth.CiuwFiHM.mjs';\nimport { c as checkPassword } from './better-auth.YwDQhoPc.mjs';\nimport { a as getBaseURL, g as getOrigin } from './better-auth.BRFtaovt.mjs';\nimport { B as BetterAuthError } from './better-auth.DdzSJf-n.mjs';\nimport '@noble/hashes/scrypt.js';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils.js';\nimport { betterFetch } from '@better-fetch/fetch';\nimport '@better-auth/utils/random';\nimport { g as getKyselyDatabaseType } from './better-auth.BAk2ZmIN.mjs';\nimport { B as BASE_ERROR_CODES } from './better-auth.C5vDERgF.mjs';\n\nconst DEFAULT_SECRET = \"better-auth-secret-123456789\";\n\nlet packageJSONCache;\nasync function readRootPackageJson() {\n  if (packageJSONCache) return packageJSONCache;\n  try {\n    const cwd = typeof process !== \"undefined\" && typeof process.cwd === \"function\" ? process.cwd() : \"\";\n    if (!cwd) return void 0;\n    const importRuntime = (m) => Function(\"mm\", \"return import(mm)\")(m);\n    const [{ default: fs }, { default: path }] = await Promise.all([\n      importRuntime(\"fs/promises\"),\n      importRuntime(\"path\")\n    ]);\n    const raw = await fs.readFile(path.join(cwd, \"package.json\"), \"utf-8\");\n    packageJSONCache = JSON.parse(raw);\n    return packageJSONCache;\n  } catch {\n  }\n  return void 0;\n}\nasync function getPackageVersion(pkg) {\n  if (packageJSONCache) {\n    return packageJSONCache.dependencies?.[pkg] || packageJSONCache.devDependencies?.[pkg] || packageJSONCache.peerDependencies?.[pkg];\n  }\n  try {\n    const cwd = typeof process !== \"undefined\" && typeof process.cwd === \"function\" ? process.cwd() : \"\";\n    if (!cwd) throw new Error(\"no-cwd\");\n    const importRuntime = (m) => Function(\"mm\", \"return import(mm)\")(m);\n    const [{ default: fs }, { default: path }] = await Promise.all([\n      importRuntime(\"fs/promises\"),\n      importRuntime(\"path\")\n    ]);\n    const pkgJsonPath = path.join(cwd, \"node_modules\", pkg, \"package.json\");\n    const raw = await fs.readFile(pkgJsonPath, \"utf-8\");\n    const json = JSON.parse(raw);\n    const resolved = json.version || await getVersionFromLocalPackageJson(pkg) || void 0;\n    return resolved;\n  } catch {\n  }\n  const fromRoot = await getVersionFromLocalPackageJson(pkg);\n  return fromRoot;\n}\nasync function getVersionFromLocalPackageJson(pkg) {\n  const json = await readRootPackageJson();\n  if (!json) return void 0;\n  const allDeps = {\n    ...json.dependencies,\n    ...json.devDependencies,\n    ...json.peerDependencies\n  };\n  return allDeps[pkg];\n}\nasync function getNameFromLocalPackageJson() {\n  const json = await readRootPackageJson();\n  return json?.name;\n}\n\nlet projectIdCached = null;\nasync function getProjectId(baseUrl) {\n  if (projectIdCached) return projectIdCached;\n  const projectName = await getNameFromLocalPackageJson();\n  if (projectName) {\n    projectIdCached = await hashToBase64(\n      baseUrl ? baseUrl + projectName : projectName\n    );\n    return projectIdCached;\n  }\n  if (baseUrl) {\n    projectIdCached = await hashToBase64(baseUrl);\n    return projectIdCached;\n  }\n  projectIdCached = generateId(32);\n  return projectIdCached;\n}\n\nconst importRuntime = (m) => {\n  return Function(\"mm\", \"return import(mm)\")(m);\n};\n\nfunction getVendor() {\n  const hasAny = (...keys) => keys.some((k) => Boolean(env[k]));\n  if (hasAny(\"CF_PAGES\", \"CF_PAGES_URL\", \"CF_ACCOUNT_ID\") || typeof navigator !== \"undefined\" && navigator.userAgent === \"Cloudflare-Workers\") {\n    return \"cloudflare\";\n  }\n  if (hasAny(\"VERCEL\", \"VERCEL_URL\", \"VERCEL_ENV\")) return \"vercel\";\n  if (hasAny(\"NETLIFY\", \"NETLIFY_URL\")) return \"netlify\";\n  if (hasAny(\n    \"RENDER\",\n    \"RENDER_URL\",\n    \"RENDER_INTERNAL_HOSTNAME\",\n    \"RENDER_SERVICE_ID\"\n  )) {\n    return \"render\";\n  }\n  if (hasAny(\"AWS_LAMBDA_FUNCTION_NAME\", \"AWS_EXECUTION_ENV\", \"LAMBDA_TASK_ROOT\")) {\n    return \"aws\";\n  }\n  if (hasAny(\n    \"GOOGLE_CLOUD_FUNCTION_NAME\",\n    \"GOOGLE_CLOUD_PROJECT\",\n    \"GCP_PROJECT\",\n    \"K_SERVICE\"\n  )) {\n    return \"gcp\";\n  }\n  if (hasAny(\n    \"AZURE_FUNCTION_NAME\",\n    \"FUNCTIONS_WORKER_RUNTIME\",\n    \"WEBSITE_INSTANCE_ID\",\n    \"WEBSITE_SITE_NAME\"\n  )) {\n    return \"azure\";\n  }\n  if (hasAny(\"DENO_DEPLOYMENT_ID\", \"DENO_REGION\")) return \"deno-deploy\";\n  if (hasAny(\"FLY_APP_NAME\", \"FLY_REGION\", \"FLY_ALLOC_ID\")) return \"fly-io\";\n  if (hasAny(\"RAILWAY_STATIC_URL\", \"RAILWAY_ENVIRONMENT_NAME\"))\n    return \"railway\";\n  if (hasAny(\"DYNO\", \"HEROKU_APP_NAME\")) return \"heroku\";\n  if (hasAny(\"DO_DEPLOYMENT_ID\", \"DO_APP_NAME\", \"DIGITALOCEAN\"))\n    return \"digitalocean\";\n  if (hasAny(\"KOYEB\", \"KOYEB_DEPLOYMENT_ID\", \"KOYEB_APP_NAME\")) return \"koyeb\";\n  return null;\n}\nasync function detectSystemInfo() {\n  try {\n    if (getVendor() === \"cloudflare\") return \"cloudflare\";\n    const os = await importRuntime(\"os\");\n    const cpus = os.cpus();\n    return {\n      deploymentVendor: getVendor(),\n      systemPlatform: os.platform(),\n      systemRelease: os.release(),\n      systemArchitecture: os.arch(),\n      cpuCount: cpus.length,\n      cpuModel: cpus.length ? cpus[0].model : null,\n      cpuSpeed: cpus.length ? cpus[0].speed : null,\n      memory: os.totalmem(),\n      isWSL: await isWsl(),\n      isDocker: await isDocker(),\n      isTTY: typeof process !== \"undefined\" && process.stdout ? process.stdout.isTTY : null\n    };\n  } catch (e) {\n    return {\n      systemPlatform: null,\n      systemRelease: null,\n      systemArchitecture: null,\n      cpuCount: null,\n      cpuModel: null,\n      cpuSpeed: null,\n      memory: null,\n      isWSL: null,\n      isDocker: null,\n      isTTY: null\n    };\n  }\n}\nlet isDockerCached;\nasync function hasDockerEnv() {\n  if (getVendor() === \"cloudflare\") return false;\n  try {\n    const fs = await importRuntime(\"fs\");\n    fs.statSync(\"/.dockerenv\");\n    return true;\n  } catch {\n    return false;\n  }\n}\nasync function hasDockerCGroup() {\n  if (getVendor() === \"cloudflare\") return false;\n  try {\n    const fs = await importRuntime(\"fs\");\n    return fs.readFileSync(\"/proc/self/cgroup\", \"utf8\").includes(\"docker\");\n  } catch {\n    return false;\n  }\n}\nasync function isDocker() {\n  if (getVendor() === \"cloudflare\") return false;\n  if (isDockerCached === void 0) {\n    isDockerCached = await hasDockerEnv() || await hasDockerCGroup();\n  }\n  return isDockerCached;\n}\nasync function isWsl() {\n  try {\n    if (getVendor() === \"cloudflare\") return false;\n    if (typeof process === \"undefined\" || process?.platform !== \"linux\") {\n      return false;\n    }\n    const fs = await importRuntime(\"fs\");\n    const os = await importRuntime(\"os\");\n    if (os.release().toLowerCase().includes(\"microsoft\")) {\n      if (await isInsideContainer()) {\n        return false;\n      }\n      return true;\n    }\n    return fs.readFileSync(\"/proc/version\", \"utf8\").toLowerCase().includes(\"microsoft\") ? !await isInsideContainer() : false;\n  } catch {\n    return false;\n  }\n}\nlet isInsideContainerCached;\nconst hasContainerEnv = async () => {\n  if (getVendor() === \"cloudflare\") return false;\n  try {\n    const fs = await importRuntime(\"fs\");\n    fs.statSync(\"/run/.containerenv\");\n    return true;\n  } catch {\n    return false;\n  }\n};\nasync function isInsideContainer() {\n  if (isInsideContainerCached === void 0) {\n    isInsideContainerCached = await hasContainerEnv() || await isDocker();\n  }\n  return isInsideContainerCached;\n}\nfunction isCI() {\n  return env.CI !== \"false\" && (\"BUILD_ID\" in env || // Jenkins, Cloudbees\n  \"BUILD_NUMBER\" in env || // Jenkins, TeamCity (fixed typo: extra space removed)\n  \"CI\" in env || // Travis CI, CircleCI, Cirrus CI, Gitlab CI, Appveyor, CodeShip, dsari, Cloudflare\n  \"CI_APP_ID\" in env || // Appflow\n  \"CI_BUILD_ID\" in env || // Appflow\n  \"CI_BUILD_NUMBER\" in env || // Appflow\n  \"CI_NAME\" in env || // Codeship and others\n  \"CONTINUOUS_INTEGRATION\" in env || // Travis CI, Cirrus CI\n  \"RUN_ID\" in env);\n}\n\nfunction detectRuntime() {\n  if (typeof Deno !== \"undefined\") {\n    const denoVersion = Deno?.version?.deno ?? null;\n    return { name: \"deno\", version: denoVersion };\n  }\n  if (typeof Bun !== \"undefined\") {\n    const bunVersion = Bun?.version ?? null;\n    return { name: \"bun\", version: bunVersion };\n  }\n  if (typeof process !== \"undefined\" && process?.versions?.node) {\n    return { name: \"node\", version: process.versions.node ?? null };\n  }\n  return { name: \"edge\", version: null };\n}\nfunction detectEnvironment() {\n  return getEnvVar(\"NODE_ENV\") === \"production\" ? \"production\" : isCI() ? \"ci\" : isTest() ? \"test\" : \"development\";\n}\n\nconst DATABASES = {\n  pg: \"postgresql\",\n  mysql: \"mysql\",\n  mariadb: \"mariadb\",\n  sqlite3: \"sqlite\",\n  \"better-sqlite3\": \"sqlite\",\n  \"@prisma/client\": \"prisma\",\n  mongoose: \"mongodb\",\n  mongodb: \"mongodb\",\n  \"drizzle-orm\": \"drizzle\"\n};\nasync function detectDatabase() {\n  for (const [pkg, name] of Object.entries(DATABASES)) {\n    const version = await getPackageVersion(pkg);\n    if (version) return { name, version };\n  }\n  return void 0;\n}\n\nconst FRAMEWORKS = {\n  next: \"next\",\n  nuxt: \"nuxt\",\n  \"@remix-run/server-runtime\": \"remix\",\n  astro: \"astro\",\n  \"@sveltejs/kit\": \"sveltekit\",\n  \"solid-start\": \"solid-start\",\n  \"tanstack-start\": \"tanstack-start\",\n  hono: \"hono\",\n  express: \"express\",\n  elysia: \"elysia\",\n  expo: \"expo\"\n};\nasync function detectFramework() {\n  for (const [pkg, name] of Object.entries(FRAMEWORKS)) {\n    const version = await getPackageVersion(pkg);\n    if (version) return { name, version };\n  }\n  return void 0;\n}\n\nfunction detectPackageManager() {\n  const userAgent = env.npm_config_user_agent;\n  if (!userAgent) {\n    return void 0;\n  }\n  const pmSpec = userAgent.split(\" \")[0];\n  const separatorPos = pmSpec.lastIndexOf(\"/\");\n  const name = pmSpec.substring(0, separatorPos);\n  return {\n    name: name === \"npminstall\" ? \"cnpm\" : name,\n    version: pmSpec.substring(separatorPos + 1)\n  };\n}\n\nfunction getTelemetryAuthConfig(options, context) {\n  return {\n    database: context?.database,\n    adapter: context?.adapter,\n    emailVerification: {\n      sendVerificationEmail: !!options.emailVerification?.sendVerificationEmail,\n      sendOnSignUp: !!options.emailVerification?.sendOnSignUp,\n      sendOnSignIn: !!options.emailVerification?.sendOnSignIn,\n      autoSignInAfterVerification: !!options.emailVerification?.autoSignInAfterVerification,\n      expiresIn: options.emailVerification?.expiresIn,\n      onEmailVerification: !!options.emailVerification?.onEmailVerification,\n      afterEmailVerification: !!options.emailVerification?.afterEmailVerification\n    },\n    emailAndPassword: {\n      enabled: !!options.emailAndPassword?.enabled,\n      disableSignUp: !!options.emailAndPassword?.disableSignUp,\n      requireEmailVerification: !!options.emailAndPassword?.requireEmailVerification,\n      maxPasswordLength: options.emailAndPassword?.maxPasswordLength,\n      minPasswordLength: options.emailAndPassword?.minPasswordLength,\n      sendResetPassword: !!options.emailAndPassword?.sendResetPassword,\n      resetPasswordTokenExpiresIn: options.emailAndPassword?.resetPasswordTokenExpiresIn,\n      onPasswordReset: !!options.emailAndPassword?.onPasswordReset,\n      password: {\n        hash: !!options.emailAndPassword?.password?.hash,\n        verify: !!options.emailAndPassword?.password?.verify\n      },\n      autoSignIn: !!options.emailAndPassword?.autoSignIn,\n      revokeSessionsOnPasswordReset: !!options.emailAndPassword?.revokeSessionsOnPasswordReset\n    },\n    socialProviders: Object.keys(options.socialProviders || {}).map((p) => {\n      const provider = options.socialProviders?.[p];\n      if (!provider) return {};\n      return {\n        id: p,\n        mapProfileToUser: !!provider.mapProfileToUser,\n        disableDefaultScope: !!provider.disableDefaultScope,\n        disableIdTokenSignIn: !!provider.disableIdTokenSignIn,\n        disableImplicitSignUp: provider.disableImplicitSignUp,\n        disableSignUp: provider.disableSignUp,\n        getUserInfo: !!provider.getUserInfo,\n        overrideUserInfoOnSignIn: !!provider.overrideUserInfoOnSignIn,\n        prompt: provider.prompt,\n        verifyIdToken: !!provider.verifyIdToken,\n        scope: provider.scope,\n        refreshAccessToken: !!provider.refreshAccessToken\n      };\n    }),\n    plugins: options.plugins?.map((p) => p.id.toString()),\n    user: {\n      modelName: options.user?.modelName,\n      fields: options.user?.fields,\n      additionalFields: options.user?.additionalFields,\n      changeEmail: {\n        enabled: options.user?.changeEmail?.enabled,\n        sendChangeEmailVerification: !!options.user?.changeEmail?.sendChangeEmailVerification\n      }\n    },\n    verification: {\n      modelName: options.verification?.modelName,\n      disableCleanup: options.verification?.disableCleanup,\n      fields: options.verification?.fields\n    },\n    session: {\n      modelName: options.session?.modelName,\n      additionalFields: options.session?.additionalFields,\n      cookieCache: {\n        enabled: options.session?.cookieCache?.enabled,\n        maxAge: options.session?.cookieCache?.maxAge\n      },\n      disableSessionRefresh: options.session?.disableSessionRefresh,\n      expiresIn: options.session?.expiresIn,\n      fields: options.session?.fields,\n      freshAge: options.session?.freshAge,\n      preserveSessionInDatabase: options.session?.preserveSessionInDatabase,\n      storeSessionInDatabase: options.session?.storeSessionInDatabase,\n      updateAge: options.session?.updateAge\n    },\n    account: {\n      modelName: options.account?.modelName,\n      fields: options.account?.fields,\n      encryptOAuthTokens: options.account?.encryptOAuthTokens,\n      updateAccountOnSignIn: options.account?.updateAccountOnSignIn,\n      accountLinking: {\n        enabled: options.account?.accountLinking?.enabled,\n        trustedProviders: options.account?.accountLinking?.trustedProviders,\n        updateUserInfoOnLink: options.account?.accountLinking?.updateUserInfoOnLink,\n        allowUnlinkingAll: options.account?.accountLinking?.allowUnlinkingAll\n      }\n    },\n    hooks: {\n      after: !!options.hooks?.after,\n      before: !!options.hooks?.before\n    },\n    secondaryStorage: !!options.secondaryStorage,\n    advanced: {\n      cookiePrefix: !!options.advanced?.cookiePrefix,\n      //this shouldn't be tracked\n      cookies: !!options.advanced?.cookies,\n      crossSubDomainCookies: {\n        domain: !!options.advanced?.crossSubDomainCookies?.domain,\n        enabled: options.advanced?.crossSubDomainCookies?.enabled,\n        additionalCookies: options.advanced?.crossSubDomainCookies?.additionalCookies\n      },\n      database: {\n        useNumberId: !!options.advanced?.database?.useNumberId,\n        generateId: options.advanced?.database?.generateId,\n        defaultFindManyLimit: options.advanced?.database?.defaultFindManyLimit\n      },\n      useSecureCookies: options.advanced?.useSecureCookies,\n      ipAddress: {\n        disableIpTracking: options.advanced?.ipAddress?.disableIpTracking,\n        ipAddressHeaders: options.advanced?.ipAddress?.ipAddressHeaders\n      },\n      disableCSRFCheck: options.advanced?.disableCSRFCheck,\n      cookieAttributes: {\n        expires: options.advanced?.defaultCookieAttributes?.expires,\n        secure: options.advanced?.defaultCookieAttributes?.secure,\n        sameSite: options.advanced?.defaultCookieAttributes?.sameSite,\n        domain: !!options.advanced?.defaultCookieAttributes?.domain,\n        path: options.advanced?.defaultCookieAttributes?.path,\n        httpOnly: options.advanced?.defaultCookieAttributes?.httpOnly\n      }\n    },\n    trustedOrigins: options.trustedOrigins?.length,\n    rateLimit: {\n      storage: options.rateLimit?.storage,\n      modelName: options.rateLimit?.modelName,\n      window: options.rateLimit?.window,\n      customStorage: !!options.rateLimit?.customStorage,\n      enabled: options.rateLimit?.enabled,\n      max: options.rateLimit?.max\n    },\n    onAPIError: {\n      errorURL: options.onAPIError?.errorURL,\n      onError: !!options.onAPIError?.onError,\n      throw: options.onAPIError?.throw\n    },\n    logger: {\n      disabled: options.logger?.disabled,\n      level: options.logger?.level,\n      log: !!options.logger?.log\n    },\n    databaseHooks: {\n      user: {\n        create: {\n          after: !!options.databaseHooks?.user?.create?.after,\n          before: !!options.databaseHooks?.user?.create?.before\n        },\n        update: {\n          after: !!options.databaseHooks?.user?.update?.after,\n          before: !!options.databaseHooks?.user?.update?.before\n        }\n      },\n      session: {\n        create: {\n          after: !!options.databaseHooks?.session?.create?.after,\n          before: !!options.databaseHooks?.session?.create?.before\n        },\n        update: {\n          after: !!options.databaseHooks?.session?.update?.after,\n          before: !!options.databaseHooks?.session?.update?.before\n        }\n      },\n      account: {\n        create: {\n          after: !!options.databaseHooks?.account?.create?.after,\n          before: !!options.databaseHooks?.account?.create?.before\n        },\n        update: {\n          after: !!options.databaseHooks?.account?.update?.after,\n          before: !!options.databaseHooks?.account?.update?.before\n        }\n      },\n      verification: {\n        create: {\n          after: !!options.databaseHooks?.verification?.create?.after,\n          before: !!options.databaseHooks?.verification?.create?.before\n        },\n        update: {\n          after: !!options.databaseHooks?.verification?.update?.after,\n          before: !!options.databaseHooks?.verification?.update?.before\n        }\n      }\n    }\n  };\n}\n\nasync function createTelemetry(options, context) {\n  const debugEnabled = options.telemetry?.debug || getBooleanEnvVar(\"BETTER_AUTH_TELEMETRY_DEBUG\", false);\n  const TELEMETRY_ENDPOINT = ENV.BETTER_AUTH_TELEMETRY_ENDPOINT;\n  const track = async (event) => {\n    try {\n      if (context?.customTrack) {\n        await context.customTrack(event);\n      } else {\n        if (debugEnabled) {\n          await Promise.resolve(\n            logger.info(\"telemetry event\", JSON.stringify(event, null, 2))\n          );\n        } else {\n          await betterFetch(TELEMETRY_ENDPOINT, {\n            method: \"POST\",\n            body: event\n          });\n        }\n      }\n    } catch {\n    }\n  };\n  const isEnabled = async () => {\n    const telemetryEnabled = options.telemetry?.enabled !== void 0 ? options.telemetry.enabled : false;\n    const envEnabled = getBooleanEnvVar(\"BETTER_AUTH_TELEMETRY\", false);\n    return (envEnabled || telemetryEnabled) && (context?.skipTestCheck || !isTest());\n  };\n  const enabled = await isEnabled();\n  let anonymousId;\n  if (enabled) {\n    anonymousId = await getProjectId(options.baseURL);\n    const payload = {\n      config: getTelemetryAuthConfig(options),\n      runtime: detectRuntime(),\n      database: await detectDatabase(),\n      framework: await detectFramework(),\n      environment: detectEnvironment(),\n      systemInfo: await detectSystemInfo(),\n      packageManager: detectPackageManager()\n    };\n    void track({ type: \"init\", payload, anonymousId });\n  }\n  return {\n    publish: async (event) => {\n      if (!enabled) return;\n      if (!anonymousId) {\n        anonymousId = await getProjectId(options.baseURL);\n      }\n      await track({\n        type: event.type,\n        payload: event.payload,\n        anonymousId\n      });\n    }\n  };\n}\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === \"object\" || typeof obj === \"function\") && typeof obj.then === \"function\";\n}\n\nconst init = async (options) => {\n  const adapter = await getAdapter(options);\n  const plugins = options.plugins || [];\n  const internalPlugins = getInternalPlugins(options);\n  const logger = createLogger(options.logger);\n  const baseURL = getBaseURL(options.baseURL, options.basePath);\n  const secret = options.secret || env.BETTER_AUTH_SECRET || env.AUTH_SECRET || DEFAULT_SECRET;\n  if (secret === DEFAULT_SECRET) {\n    if (isProduction) {\n      logger.error(\n        \"You are using the default secret. Please set `BETTER_AUTH_SECRET` in your environment variables or pass `secret` in your auth config.\"\n      );\n    }\n  }\n  options = {\n    ...options,\n    secret,\n    baseURL: baseURL ? new URL(baseURL).origin : \"\",\n    basePath: options.basePath || \"/api/auth\",\n    plugins: plugins.concat(internalPlugins)\n  };\n  checkEndpointConflicts(options, logger);\n  const cookies = getCookies(options);\n  const tables = getAuthTables(options);\n  const providers = Object.entries(\n    options.socialProviders || {}\n  ).map(([key, config]) => {\n    if (config == null) {\n      return null;\n    }\n    if (config.enabled === false) {\n      return null;\n    }\n    if (!config.clientId) {\n      logger.warn(\n        `Social provider ${key} is missing clientId or clientSecret`\n      );\n    }\n    const provider = socialProviders[key](config);\n    provider.disableImplicitSignUp = config.disableImplicitSignUp;\n    return provider;\n  }).filter((x) => x !== null);\n  const generateIdFunc = ({ model, size }) => {\n    if (typeof options.advanced?.generateId === \"function\") {\n      return options.advanced.generateId({ model, size });\n    }\n    if (typeof options?.advanced?.database?.generateId === \"function\") {\n      return options.advanced.database.generateId({ model, size });\n    }\n    return generateId(size);\n  };\n  const { publish } = await createTelemetry(options, {\n    adapter: adapter.id,\n    database: typeof options.database === \"function\" ? \"adapter\" : getKyselyDatabaseType(options.database) || \"unknown\"\n  });\n  let ctx = {\n    appName: options.appName || \"Better Auth\",\n    socialProviders: providers,\n    options,\n    tables,\n    trustedOrigins: getTrustedOrigins(options),\n    baseURL: baseURL || \"\",\n    sessionConfig: {\n      updateAge: options.session?.updateAge !== void 0 ? options.session.updateAge : 24 * 60 * 60,\n      // 24 hours\n      expiresIn: options.session?.expiresIn || 60 * 60 * 24 * 7,\n      // 7 days\n      freshAge: options.session?.freshAge === void 0 ? 60 * 60 * 24 : options.session.freshAge\n    },\n    secret,\n    rateLimit: {\n      ...options.rateLimit,\n      enabled: options.rateLimit?.enabled ?? isProduction,\n      window: options.rateLimit?.window || 10,\n      max: options.rateLimit?.max || 100,\n      storage: options.rateLimit?.storage || (options.secondaryStorage ? \"secondary-storage\" : \"memory\")\n    },\n    authCookies: cookies,\n    logger,\n    generateId: generateIdFunc,\n    session: null,\n    secondaryStorage: options.secondaryStorage,\n    password: {\n      hash: options.emailAndPassword?.password?.hash || hashPassword,\n      verify: options.emailAndPassword?.password?.verify || verifyPassword,\n      config: {\n        minPasswordLength: options.emailAndPassword?.minPasswordLength || 8,\n        maxPasswordLength: options.emailAndPassword?.maxPasswordLength || 128\n      },\n      checkPassword\n    },\n    setNewSession(session) {\n      this.newSession = session;\n    },\n    newSession: null,\n    adapter,\n    internalAdapter: createInternalAdapter(adapter, {\n      options,\n      logger,\n      hooks: options.databaseHooks ? [options.databaseHooks] : []}),\n    createAuthCookie: createCookieGetter(options),\n    async runMigrations() {\n      if (!options.database || \"updateMany\" in options.database) {\n        throw new BetterAuthError(\n          \"Database is not provided or it's an adapter. Migrations are only supported with a database instance.\"\n        );\n      }\n      const { runMigrations } = await getMigrations(options);\n      await runMigrations();\n    },\n    publishTelemetry: publish\n  };\n  const initOrPromise = runPluginInit(ctx);\n  let context;\n  if (isPromise(initOrPromise)) {\n    ({ context } = await initOrPromise);\n  } else {\n    ({ context } = initOrPromise);\n  }\n  return context;\n};\nasync function runPluginInit(ctx) {\n  let options = ctx.options;\n  const plugins = options.plugins || [];\n  let context = ctx;\n  const dbHooks = [];\n  for (const plugin of plugins) {\n    if (plugin.init) {\n      let initPromise = plugin.init(context);\n      let result;\n      if (isPromise(initPromise)) {\n        result = await initPromise;\n      } else {\n        result = initPromise;\n      }\n      if (typeof result === \"object\") {\n        if (result.options) {\n          const { databaseHooks, ...restOpts } = result.options;\n          if (databaseHooks) {\n            dbHooks.push(databaseHooks);\n          }\n          options = defu(options, restOpts);\n        }\n        if (result.context) {\n          context = {\n            ...context,\n            ...result.context\n          };\n        }\n      }\n    }\n  }\n  dbHooks.push(options.databaseHooks);\n  context.internalAdapter = createInternalAdapter(ctx.adapter, {\n    options,\n    logger: ctx.logger,\n    hooks: dbHooks.filter((u) => u !== void 0),\n    generateId: ctx.generateId\n  });\n  context.options = options;\n  return { context };\n}\nfunction getInternalPlugins(options) {\n  const plugins = [];\n  if (options.advanced?.crossSubDomainCookies?.enabled) ;\n  return plugins;\n}\nfunction getTrustedOrigins(options) {\n  const baseURL = getBaseURL(options.baseURL, options.basePath);\n  if (!baseURL) {\n    return [];\n  }\n  const trustedOrigins = [new URL(baseURL).origin];\n  if (options.trustedOrigins && Array.isArray(options.trustedOrigins)) {\n    trustedOrigins.push(...options.trustedOrigins);\n  }\n  const envTrustedOrigins = env.BETTER_AUTH_TRUSTED_ORIGINS;\n  if (envTrustedOrigins) {\n    trustedOrigins.push(...envTrustedOrigins.split(\",\"));\n  }\n  if (trustedOrigins.filter((x) => !x).length) {\n    throw new BetterAuthError(\n      \"A provided trusted origin is invalid, make sure your trusted origins list is properly defined.\"\n    );\n  }\n  return trustedOrigins;\n}\n\nconst betterAuth = (options) => {\n  const authContext = init(options);\n  const { api } = getEndpoints(authContext, options);\n  const errorCodes = options.plugins?.reduce((acc, plugin) => {\n    if (plugin.$ERROR_CODES) {\n      return {\n        ...acc,\n        ...plugin.$ERROR_CODES\n      };\n    }\n    return acc;\n  }, {});\n  return {\n    handler: async (request) => {\n      const ctx = await authContext;\n      const basePath = ctx.options.basePath || \"/api/auth\";\n      if (!ctx.options.baseURL) {\n        const baseURL = getBaseURL(void 0, basePath, request);\n        if (baseURL) {\n          ctx.baseURL = baseURL;\n          ctx.options.baseURL = getOrigin(ctx.baseURL) || void 0;\n        } else {\n          throw new BetterAuthError(\n            \"Could not get base URL from request. Please provide a valid base URL.\"\n          );\n        }\n      }\n      ctx.trustedOrigins = [\n        ...options.trustedOrigins ? Array.isArray(options.trustedOrigins) ? options.trustedOrigins : await options.trustedOrigins(request) : [],\n        ctx.options.baseURL\n      ];\n      const { handler } = router(ctx, options);\n      return handler(request);\n    },\n    api,\n    options,\n    $context: authContext,\n    $Infer: {},\n    $ERROR_CODES: {\n      ...errorCodes,\n      ...BASE_ERROR_CODES\n    }\n  };\n};\n\nexport { betterAuth as b, createTelemetry as c, getTelemetryAuthConfig as g };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5532, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.D-2CmEwz.mjs"],"sourcesContent":["function capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport { capitalizeFirstLetter as c };\n"],"names":[],"mappings":";;;;AAAA,SAAS,sBAAsB,GAAG;IAChC,OAAO,IAAI,MAAM,CAAC,GAAG,WAAW,KAAK,IAAI,KAAK,CAAC;AACjD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5553, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.msGOU0m9.mjs"],"sourcesContent":["const PROTO_POLLUTION_PATTERNS = {\n  proto: /\"(?:_|\\\\u0{2}5[Ff]){2}(?:p|\\\\u0{2}70)(?:r|\\\\u0{2}72)(?:o|\\\\u0{2}6[Ff])(?:t|\\\\u0{2}74)(?:o|\\\\u0{2}6[Ff])(?:_|\\\\u0{2}5[Ff]){2}\"\\s*:/,\n  constructor: /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/,\n  protoShort: /\"__proto__\"\\s*:/,\n  constructorShort: /\"constructor\"\\s*:/\n};\nconst JSON_SIGNATURE = /^\\s*[\"[{]|^\\s*-?\\d{1,16}(\\.\\d{1,17})?([Ee][+-]?\\d+)?\\s*$/;\nconst SPECIAL_VALUES = {\n  true: true,\n  false: false,\n  null: null,\n  undefined: void 0,\n  nan: Number.NaN,\n  infinity: Number.POSITIVE_INFINITY,\n  \"-infinity\": Number.NEGATIVE_INFINITY\n};\nconst ISO_DATE_REGEX = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d{1,7}))?(?:Z|([+-])(\\d{2}):(\\d{2}))$/;\nfunction isValidDate(date) {\n  return date instanceof Date && !isNaN(date.getTime());\n}\nfunction parseISODate(value) {\n  const match = ISO_DATE_REGEX.exec(value);\n  if (!match) return null;\n  const [\n    ,\n    year,\n    month,\n    day,\n    hour,\n    minute,\n    second,\n    ms,\n    offsetSign,\n    offsetHour,\n    offsetMinute\n  ] = match;\n  let date = new Date(\n    Date.UTC(\n      parseInt(year, 10),\n      parseInt(month, 10) - 1,\n      parseInt(day, 10),\n      parseInt(hour, 10),\n      parseInt(minute, 10),\n      parseInt(second, 10),\n      ms ? parseInt(ms.padEnd(3, \"0\"), 10) : 0\n    )\n  );\n  if (offsetSign) {\n    const offset = (parseInt(offsetHour, 10) * 60 + parseInt(offsetMinute, 10)) * (offsetSign === \"+\" ? -1 : 1);\n    date.setUTCMinutes(date.getUTCMinutes() + offset);\n  }\n  return isValidDate(date) ? date : null;\n}\nfunction betterJSONParse(value, options = {}) {\n  const {\n    strict = false,\n    warnings = false,\n    reviver,\n    parseDates = true\n  } = options;\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  const trimmed = value.trim();\n  if (trimmed.length > 0 && trimmed[0] === '\"' && trimmed.endsWith('\"') && !trimmed.slice(1, -1).includes('\"')) {\n    return trimmed.slice(1, -1);\n  }\n  const lowerValue = trimmed.toLowerCase();\n  if (lowerValue.length <= 9 && lowerValue in SPECIAL_VALUES) {\n    return SPECIAL_VALUES[lowerValue];\n  }\n  if (!JSON_SIGNATURE.test(trimmed)) {\n    if (strict) {\n      throw new SyntaxError(\"[better-json] Invalid JSON\");\n    }\n    return value;\n  }\n  const hasProtoPattern = Object.entries(PROTO_POLLUTION_PATTERNS).some(\n    ([key, pattern]) => {\n      const matches = pattern.test(trimmed);\n      if (matches && warnings) {\n        console.warn(\n          `[better-json] Detected potential prototype pollution attempt using ${key} pattern`\n        );\n      }\n      return matches;\n    }\n  );\n  if (hasProtoPattern && strict) {\n    throw new Error(\n      \"[better-json] Potential prototype pollution attempt detected\"\n    );\n  }\n  try {\n    const secureReviver = (key, value2) => {\n      if (key === \"__proto__\" || key === \"constructor\" && value2 && typeof value2 === \"object\" && \"prototype\" in value2) {\n        if (warnings) {\n          console.warn(\n            `[better-json] Dropping \"${key}\" key to prevent prototype pollution`\n          );\n        }\n        return void 0;\n      }\n      if (parseDates && typeof value2 === \"string\") {\n        const date = parseISODate(value2);\n        if (date) {\n          return date;\n        }\n      }\n      return reviver ? reviver(key, value2) : value2;\n    };\n    return JSON.parse(trimmed, secureReviver);\n  } catch (error) {\n    if (strict) {\n      throw error;\n    }\n    return value;\n  }\n}\nfunction parseJSON(value, options = { strict: true }) {\n  return betterJSONParse(value, options);\n}\n\nexport { parseJSON as p };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5651, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.CJoIWSTC.mjs"],"sourcesContent":["import { c as createAuthMiddleware, s as sessionMiddleware } from './better-auth.C5vDERgF.mjs';\nimport 'better-call';\nimport './better-auth.C3-_8m-g.mjs';\nimport * as z from 'zod';\nimport './better-auth.CiuwFiHM.mjs';\nimport '@better-auth/utils/base64';\nimport '@better-auth/utils/hmac';\nimport './better-auth.DgGir396.mjs';\nimport '@better-auth/utils/binary';\nimport '@better-auth/core/db';\nimport '@better-auth/utils/random';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha.js';\nimport '@noble/ciphers/utils.js';\nimport 'jose';\nimport '@noble/hashes/scrypt.js';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils.js';\nimport './better-auth.B4Qoxdgc.mjs';\nimport 'kysely';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\n\nconst orgMiddleware = createAuthMiddleware(async () => {\n  return {};\n});\nconst orgSessionMiddleware = createAuthMiddleware(\n  {\n    use: [sessionMiddleware]\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    return {\n      session\n    };\n  }\n);\n\nconst role = z.string();\nconst invitationStatus = z.enum([\"pending\", \"accepted\", \"rejected\", \"canceled\"]).default(\"pending\");\nz.object({\n  id: z.string().default(generateId),\n  name: z.string(),\n  slug: z.string(),\n  logo: z.string().nullish().optional(),\n  metadata: z.record(z.string(), z.unknown()).or(z.string().transform((v) => JSON.parse(v))).optional(),\n  createdAt: z.date()\n});\nz.object({\n  id: z.string().default(generateId),\n  organizationId: z.string(),\n  userId: z.coerce.string(),\n  role,\n  createdAt: z.date().default(() => /* @__PURE__ */ new Date())\n});\nz.object({\n  id: z.string().default(generateId),\n  organizationId: z.string(),\n  email: z.string(),\n  role,\n  status: invitationStatus,\n  teamId: z.string().nullish(),\n  inviterId: z.string(),\n  expiresAt: z.date()\n});\nconst teamSchema = z.object({\n  id: z.string().default(generateId),\n  name: z.string().min(1),\n  organizationId: z.string(),\n  createdAt: z.date(),\n  updatedAt: z.date().optional()\n});\nz.object({\n  id: z.string().default(generateId),\n  teamId: z.string(),\n  userId: z.string(),\n  createdAt: z.date().default(() => /* @__PURE__ */ new Date())\n});\nz.object({\n  id: z.string().default(generateId),\n  organizationId: z.string(),\n  role: z.string(),\n  permission: z.record(z.string(), z.array(z.string())),\n  createdAt: z.date().default(() => /* @__PURE__ */ new Date()),\n  updatedAt: z.date().optional()\n});\nconst defaultRoles = [\"admin\", \"member\", \"owner\"];\nz.union([\n  z.enum(defaultRoles),\n  z.array(z.enum(defaultRoles))\n]);\n\nexport { orgSessionMiddleware as a, orgMiddleware as o, teamSchema as t };\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAM,gBAAgB,IAAA,sYAAoB,EAAC;IACzC,OAAO,CAAC;AACV;AACA,MAAM,uBAAuB,IAAA,sYAAoB,EAC/C;IACE,KAAK;QAAC,sYAAiB;KAAC;AAC1B,GACA,OAAO;IACL,MAAM,UAAU,IAAI,OAAO,CAAC,OAAO;IACnC,OAAO;QACL;IACF;AACF;AAGF,MAAM,OAAO,0MAAQ;AACrB,MAAM,mBAAmB,wMAAM,CAAC;IAAC;IAAW;IAAY;IAAY;CAAW,EAAE,OAAO,CAAC;AACzF,0MAAQ,CAAC;IACP,IAAI,0MAAQ,GAAG,OAAO,CAAC,sYAAU;IACjC,MAAM,0MAAQ;IACd,MAAM,0MAAQ;IACd,MAAM,0MAAQ,GAAG,OAAO,GAAG,QAAQ;IACnC,UAAU,0MAAQ,CAAC,0MAAQ,IAAI,2MAAS,IAAI,EAAE,CAAC,0MAAQ,GAAG,SAAS,CAAC,CAAC,IAAM,KAAK,KAAK,CAAC,KAAK,QAAQ;IACnG,WAAW,wMAAM;AACnB;AACA,0MAAQ,CAAC;IACP,IAAI,0MAAQ,GAAG,OAAO,CAAC,sYAAU;IACjC,gBAAgB,0MAAQ;IACxB,QAAQ,2MAAQ,CAAC,MAAM;IACvB;IACA,WAAW,wMAAM,GAAG,OAAO,CAAC,IAAM,aAAa,GAAG,IAAI;AACxD;AACA,0MAAQ,CAAC;IACP,IAAI,0MAAQ,GAAG,OAAO,CAAC,sYAAU;IACjC,gBAAgB,0MAAQ;IACxB,OAAO,0MAAQ;IACf;IACA,QAAQ;IACR,QAAQ,0MAAQ,GAAG,OAAO;IAC1B,WAAW,0MAAQ;IACnB,WAAW,wMAAM;AACnB;AACA,MAAM,aAAa,0MAAQ,CAAC;IAC1B,IAAI,0MAAQ,GAAG,OAAO,CAAC,sYAAU;IACjC,MAAM,0MAAQ,GAAG,GAAG,CAAC;IACrB,gBAAgB,0MAAQ;IACxB,WAAW,wMAAM;IACjB,WAAW,wMAAM,GAAG,QAAQ;AAC9B;AACA,0MAAQ,CAAC;IACP,IAAI,0MAAQ,GAAG,OAAO,CAAC,sYAAU;IACjC,QAAQ,0MAAQ;IAChB,QAAQ,0MAAQ;IAChB,WAAW,wMAAM,GAAG,OAAO,CAAC,IAAM,aAAa,GAAG,IAAI;AACxD;AACA,0MAAQ,CAAC;IACP,IAAI,0MAAQ,GAAG,OAAO,CAAC,sYAAU;IACjC,gBAAgB,0MAAQ;IACxB,MAAM,0MAAQ;IACd,YAAY,0MAAQ,CAAC,0MAAQ,IAAI,yMAAO,CAAC,0MAAQ;IACjD,WAAW,wMAAM,GAAG,OAAO,CAAC,IAAM,aAAa,GAAG,IAAI;IACtD,WAAW,wMAAM,GAAG,QAAQ;AAC9B;AACA,MAAM,eAAe;IAAC;IAAS;IAAU;CAAQ;AACjD,yMAAO,CAAC;IACN,wMAAM,CAAC;IACP,yMAAO,CAAC,wMAAM,CAAC;CAChB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5776, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.BxexnJiR.mjs"],"sourcesContent":["import * as z from 'zod';\n\nfunction toZodSchema({\n  fields,\n  isClientSide\n}) {\n  const zodFields = Object.keys(fields).reduce((acc, key) => {\n    const field = fields[key];\n    if (!field) {\n      return acc;\n    }\n    if (isClientSide && field.input === false) {\n      return acc;\n    }\n    let schema2;\n    if (field.type === \"json\") {\n      schema2 = z.json ? z.json() : z.any();\n    } else if (field.type === \"string[]\" || field.type === \"number[]\") {\n      schema2 = z.array(field.type === \"string[]\" ? z.string() : z.number());\n    } else if (Array.isArray(field.type)) {\n      schema2 = z.any();\n    } else {\n      schema2 = z[field.type]();\n    }\n    if (field?.required === false) {\n      schema2 = schema2.optional();\n    }\n    if (field?.returned === false) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: schema2\n    };\n  }, {});\n  const schema = z.object(zodFields);\n  return schema;\n}\n\nexport { toZodSchema as t };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,SAAS,YAAY,EACnB,MAAM,EACN,YAAY,EACb;IACC,MAAM,YAAY,OAAO,IAAI,CAAC,QAAQ,MAAM,CAAC,CAAC,KAAK;QACjD,MAAM,QAAQ,MAAM,CAAC,IAAI;QACzB,IAAI,CAAC,OAAO;YACV,OAAO;QACT;QACA,IAAI,gBAAgB,MAAM,KAAK,KAAK,OAAO;YACzC,OAAO;QACT;QACA,IAAI;QACJ,IAAI,MAAM,IAAI,KAAK,QAAQ;YACzB,UAAU,8KAAE,IAAI,GAAG,8KAAE,IAAI,KAAK,8KAAE,GAAG;QACrC,OAAO,IAAI,MAAM,IAAI,KAAK,cAAc,MAAM,IAAI,KAAK,YAAY;YACjE,UAAU,8KAAE,KAAK,CAAC,MAAM,IAAI,KAAK,aAAa,8KAAE,MAAM,KAAK,8KAAE,MAAM;QACrE,OAAO,IAAI,MAAM,OAAO,CAAC,MAAM,IAAI,GAAG;YACpC,UAAU,8KAAE,GAAG;QACjB,OAAO;YACL,UAAU,6KAAC,CAAC,MAAM,IAAI,CAAC;QACzB;QACA,IAAI,OAAO,aAAa,OAAO;YAC7B,UAAU,QAAQ,QAAQ;QAC5B;QACA,IAAI,OAAO,aAAa,OAAO;YAC7B,OAAO;QACT;QACA,OAAO;YACL,GAAG,GAAG;YACN,CAAC,IAAI,EAAE;QACT;IACF,GAAG,CAAC;IACJ,MAAM,SAAS,8KAAE,MAAM,CAAC;IACxB,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5820, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.DaEBQJp_.mjs"],"sourcesContent":["const hasPermissionFn = (input, acRoles) => {\n  if (!input.permissions && !input.permission) return false;\n  const roles = input.role.split(\",\");\n  const creatorRole = input.options.creatorRole || \"owner\";\n  const isCreator = roles.includes(creatorRole);\n  const allowCreatorsAllPermissions = input.allowCreatorAllPermissions || false;\n  if (isCreator && allowCreatorsAllPermissions) return true;\n  for (const role of roles) {\n    const _role = acRoles[role];\n    const result = _role?.authorize(input.permissions ?? input.permission);\n    if (result?.success) {\n      return true;\n    }\n  }\n  return false;\n};\nlet cacheAllRoles = /* @__PURE__ */ new Map();\n\nexport { cacheAllRoles as c, hasPermissionFn as h };\n"],"names":[],"mappings":";;;;;;AAAA,MAAM,kBAAkB,CAAC,OAAO;IAC9B,IAAI,CAAC,MAAM,WAAW,IAAI,CAAC,MAAM,UAAU,EAAE,OAAO;IACpD,MAAM,QAAQ,MAAM,IAAI,CAAC,KAAK,CAAC;IAC/B,MAAM,cAAc,MAAM,OAAO,CAAC,WAAW,IAAI;IACjD,MAAM,YAAY,MAAM,QAAQ,CAAC;IACjC,MAAM,8BAA8B,MAAM,0BAA0B,IAAI;IACxE,IAAI,aAAa,6BAA6B,OAAO;IACrD,KAAK,MAAM,QAAQ,MAAO;QACxB,MAAM,QAAQ,OAAO,CAAC,KAAK;QAC3B,MAAM,SAAS,OAAO,UAAU,MAAM,WAAW,IAAI,MAAM,UAAU;QACrE,IAAI,QAAQ,SAAS;YACnB,OAAO;QACT;IACF;IACA,OAAO;AACT;AACA,IAAI,gBAAgB,aAAa,GAAG,IAAI","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5848, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.Ddw8bVyV.mjs"],"sourcesContent":["const twoFactorClient = (options) => {\n  return {\n    id: \"two-factor\",\n    $InferServerPlugin: {},\n    atomListeners: [\n      {\n        matcher: (path) => path.startsWith(\"/two-factor/\"),\n        signal: \"$sessionSignal\"\n      }\n    ],\n    pathMethods: {\n      \"/two-factor/disable\": \"POST\",\n      \"/two-factor/enable\": \"POST\",\n      \"/two-factor/send-otp\": \"POST\",\n      \"/two-factor/generate-backup-codes\": \"POST\"\n    },\n    fetchPlugins: [\n      {\n        id: \"two-factor\",\n        name: \"two-factor\",\n        hooks: {\n          async onSuccess(context) {\n            if (context.data?.twoFactorRedirect) {\n              if (options?.onTwoFactorRedirect) {\n                await options.onTwoFactorRedirect();\n              }\n            }\n          }\n        }\n      }\n    ]\n  };\n};\n\nexport { twoFactorClient as t };\n"],"names":[],"mappings":";;;;AAAA,MAAM,kBAAkB,CAAC;IACvB,OAAO;QACL,IAAI;QACJ,oBAAoB,CAAC;QACrB,eAAe;YACb;gBACE,SAAS,CAAC,OAAS,KAAK,UAAU,CAAC;gBACnC,QAAQ;YACV;SACD;QACD,aAAa;YACX,uBAAuB;YACvB,sBAAsB;YACtB,wBAAwB;YACxB,qCAAqC;QACvC;QACA,cAAc;YACZ;gBACE,IAAI;gBACJ,MAAM;gBACN,OAAO;oBACL,MAAM,WAAU,OAAO;wBACrB,IAAI,QAAQ,IAAI,EAAE,mBAAmB;4BACnC,IAAI,SAAS,qBAAqB;gCAChC,MAAM,QAAQ,mBAAmB;4BACnC;wBACF;oBACF;gBACF;YACF;SACD;IACH;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5890, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.DQI8AD7d.mjs"],"sourcesContent":["import { APIError } from 'better-call';\n\nconst getEndpointResponse = async (ctx) => {\n  const returned = ctx.context.returned;\n  if (!returned) {\n    return null;\n  }\n  if (returned instanceof Response) {\n    if (returned.status !== 200) {\n      return null;\n    }\n    return await returned.clone().json();\n  }\n  if (returned instanceof APIError) {\n    return null;\n  }\n  return returned;\n};\n\nexport { getEndpointResponse as g };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,sBAAsB,OAAO;IACjC,MAAM,WAAW,IAAI,OAAO,CAAC,QAAQ;IACrC,IAAI,CAAC,UAAU;QACb,OAAO;IACT;IACA,IAAI,oBAAoB,UAAU;QAChC,IAAI,SAAS,MAAM,KAAK,KAAK;YAC3B,OAAO;QACT;QACA,OAAO,MAAM,SAAS,KAAK,GAAG,IAAI;IACpC;IACA,IAAI,oBAAoB,uNAAQ,EAAE;QAChC,OAAO;IACT;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5917, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.bkwPl2G4.mjs"],"sourcesContent":["import { defaultRoles } from '../plugins/admin/access/index.mjs';\n\nconst hasPermission = (input) => {\n  if (input.userId && input.options?.adminUserIds?.includes(input.userId)) {\n    return true;\n  }\n  if (!input.permissions && !input.permission) {\n    return false;\n  }\n  const roles = (input.role || input.options?.defaultRole || \"user\").split(\",\");\n  const acRoles = input.options?.roles || defaultRoles;\n  for (const role of roles) {\n    const _role = acRoles[role];\n    const result = _role?.authorize(input.permission ?? input.permissions);\n    if (result?.success) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport { hasPermission as h };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,gBAAgB,CAAC;IACrB,IAAI,MAAM,MAAM,IAAI,MAAM,OAAO,EAAE,cAAc,SAAS,MAAM,MAAM,GAAG;QACvE,OAAO;IACT;IACA,IAAI,CAAC,MAAM,WAAW,IAAI,CAAC,MAAM,UAAU,EAAE;QAC3C,OAAO;IACT;IACA,MAAM,QAAQ,CAAC,MAAM,IAAI,IAAI,MAAM,OAAO,EAAE,eAAe,MAAM,EAAE,KAAK,CAAC;IACzE,MAAM,UAAU,MAAM,OAAO,EAAE,SAAS,gZAAY;IACpD,KAAK,MAAM,QAAQ,MAAO;QACxB,MAAM,QAAQ,OAAO,CAAC,KAAK;QAC3B,MAAM,SAAS,OAAO,UAAU,MAAM,UAAU,IAAI,MAAM,WAAW;QACrE,IAAI,QAAQ,SAAS;YACnB,OAAO;QACT;IACF;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5946, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.B4NXoE-M.mjs"],"sourcesContent":["import * as z from 'zod';\nimport { APIError } from 'better-call';\nimport './better-auth.C3-_8m-g.mjs';\nimport { c as createAuthMiddleware, g as getSessionFromCtx, a as createAuthEndpoint, B as BASE_ERROR_CODES } from './better-auth.C5vDERgF.mjs';\nimport { s as setSessionCookie, d as deleteSessionCookie } from './better-auth.DiMXeqeq.mjs';\nimport './better-auth.CiuwFiHM.mjs';\nimport '@better-auth/core/db';\nimport { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { m as mergeSchema, p as parseUserOutput } from './better-auth.BLnvK9hk.mjs';\nimport './better-auth.DgGir396.mjs';\nimport '@better-auth/utils/random';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha.js';\nimport '@noble/ciphers/utils.js';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt.js';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils.js';\nimport './better-auth.B4Qoxdgc.mjs';\nimport 'kysely';\nimport { g as getEndpointResponse } from './better-auth.DQI8AD7d.mjs';\nimport { d as defineErrorCodes } from './better-auth.D2xndZ2p.mjs';\nimport { h as hasPermission } from './better-auth.bkwPl2G4.mjs';\n\nconst ADMIN_ERROR_CODES = defineErrorCodes({\n  FAILED_TO_CREATE_USER: \"Failed to create user\",\n  USER_ALREADY_EXISTS: \"User already exists.\",\n  USER_ALREADY_EXISTS_USE_ANOTHER_EMAIL: \"User already exists. Use another email.\",\n  YOU_CANNOT_BAN_YOURSELF: \"You cannot ban yourself\",\n  YOU_ARE_NOT_ALLOWED_TO_CHANGE_USERS_ROLE: \"You are not allowed to change users role\",\n  YOU_ARE_NOT_ALLOWED_TO_CREATE_USERS: \"You are not allowed to create users\",\n  YOU_ARE_NOT_ALLOWED_TO_LIST_USERS: \"You are not allowed to list users\",\n  YOU_ARE_NOT_ALLOWED_TO_LIST_USERS_SESSIONS: \"You are not allowed to list users sessions\",\n  YOU_ARE_NOT_ALLOWED_TO_BAN_USERS: \"You are not allowed to ban users\",\n  YOU_ARE_NOT_ALLOWED_TO_IMPERSONATE_USERS: \"You are not allowed to impersonate users\",\n  YOU_ARE_NOT_ALLOWED_TO_REVOKE_USERS_SESSIONS: \"You are not allowed to revoke users sessions\",\n  YOU_ARE_NOT_ALLOWED_TO_DELETE_USERS: \"You are not allowed to delete users\",\n  YOU_ARE_NOT_ALLOWED_TO_SET_USERS_PASSWORD: \"You are not allowed to set users password\",\n  BANNED_USER: \"You have been banned from this application\",\n  YOU_ARE_NOT_ALLOWED_TO_GET_USER: \"You are not allowed to get user\",\n  NO_DATA_TO_UPDATE: \"No data to update\",\n  YOU_ARE_NOT_ALLOWED_TO_UPDATE_USERS: \"You are not allowed to update users\",\n  YOU_CANNOT_REMOVE_YOURSELF: \"You cannot remove yourself\"\n});\n\nconst schema = {\n  user: {\n    fields: {\n      role: {\n        type: \"string\",\n        required: false,\n        input: false\n      },\n      banned: {\n        type: \"boolean\",\n        defaultValue: false,\n        required: false,\n        input: false\n      },\n      banReason: {\n        type: \"string\",\n        required: false,\n        input: false\n      },\n      banExpires: {\n        type: \"date\",\n        required: false,\n        input: false\n      }\n    }\n  },\n  session: {\n    fields: {\n      impersonatedBy: {\n        type: \"string\",\n        required: false\n      }\n    }\n  }\n};\n\nfunction parseRoles(roles) {\n  return Array.isArray(roles) ? roles.join(\",\") : roles;\n}\nconst admin = (options) => {\n  const opts = {\n    defaultRole: options?.defaultRole ?? \"user\",\n    adminRoles: options?.adminRoles ?? [\"admin\"],\n    bannedUserMessage: options?.bannedUserMessage ?? \"You have been banned from this application. Please contact support if you believe this is an error.\",\n    ...options\n  };\n  const adminMiddleware = createAuthMiddleware(async (ctx) => {\n    const session = await getSessionFromCtx(ctx);\n    if (!session) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    return {\n      session\n    };\n  });\n  return {\n    id: \"admin\",\n    init() {\n      return {\n        options: {\n          databaseHooks: {\n            user: {\n              create: {\n                async before(user) {\n                  return {\n                    data: {\n                      role: options?.defaultRole ?? \"user\",\n                      ...user\n                    }\n                  };\n                }\n              }\n            },\n            session: {\n              create: {\n                async before(session, ctx) {\n                  if (!ctx) {\n                    return;\n                  }\n                  const user = await ctx.context.internalAdapter.findUserById(\n                    session.userId\n                  );\n                  if (user.banned) {\n                    if (user.banExpires && new Date(user.banExpires).getTime() < Date.now()) {\n                      await ctx.context.internalAdapter.updateUser(\n                        session.userId,\n                        {\n                          banned: false,\n                          banReason: null,\n                          banExpires: null\n                        }\n                      );\n                      return;\n                    }\n                    if (ctx && (ctx.path.startsWith(\"/callback\") || ctx.path.startsWith(\"/oauth2/callback\"))) {\n                      const redirectURI = ctx.context.options.onAPIError?.errorURL || `${ctx.context.baseURL}/error`;\n                      throw ctx.redirect(\n                        `${redirectURI}?error=banned&error_description=${opts.bannedUserMessage}`\n                      );\n                    }\n                    throw new APIError(\"FORBIDDEN\", {\n                      message: opts.bannedUserMessage,\n                      code: \"BANNED_USER\"\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      };\n    },\n    hooks: {\n      after: [\n        {\n          matcher(context) {\n            return context.path === \"/list-sessions\";\n          },\n          handler: createAuthMiddleware(async (ctx) => {\n            const response = await getEndpointResponse(ctx);\n            if (!response) {\n              return;\n            }\n            const newJson = response.filter((session) => {\n              return !session.impersonatedBy;\n            });\n            return ctx.json(newJson);\n          })\n        }\n      ]\n    },\n    endpoints: {\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/set-role`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.setRole`\n       *\n       * **client:**\n       * `authClient.admin.setRole`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-set-role)\n       */\n      setRole: createAuthEndpoint(\n        \"/admin/set-role\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.coerce.string().meta({\n              description: \"The user id\"\n            }),\n            role: z.union([\n              z.string().meta({\n                description: \"The role to set. `admin` or `user` by default\"\n              }),\n              z.array(\n                z.string().meta({\n                  description: \"The roles to set. `admin` or `user` by default\"\n                })\n              )\n            ]).meta({\n              description: \"The role to set, this can be a string or an array of strings. Eg: `admin` or `[admin, user]`\"\n            })\n          }),\n          requireHeaders: true,\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"setRole\",\n              summary: \"Set the role of a user\",\n              description: \"Set the role of a user\",\n              responses: {\n                200: {\n                  description: \"User role updated\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          user: {\n                            $ref: \"#/components/schemas/User\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            $Infer: {\n              body: {}\n            }\n          }\n        },\n        async (ctx) => {\n          const canSetRole = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: ctx.context.session.user.role,\n            options: opts,\n            permissions: {\n              user: [\"set-role\"]\n            }\n          });\n          if (!canSetRole) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_CHANGE_USERS_ROLE\n            });\n          }\n          const updatedUser = await ctx.context.internalAdapter.updateUser(\n            ctx.body.userId,\n            {\n              role: parseRoles(ctx.body.role)\n            },\n            ctx\n          );\n          return ctx.json({\n            user: updatedUser\n          });\n        }\n      ),\n      getUser: createAuthEndpoint(\n        \"/admin/get-user\",\n        {\n          method: \"GET\",\n          query: z.object({\n            id: z.string().meta({\n              description: \"The id of the User\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"getUser\",\n              summary: \"Get an existing user\",\n              description: \"Get an existing user\",\n              responses: {\n                200: {\n                  description: \"User\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          user: {\n                            $ref: \"#/components/schemas/User\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const { id } = ctx.query;\n          const canGetUser = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: ctx.context.session.user.role,\n            options: opts,\n            permissions: {\n              user: [\"get\"]\n            }\n          });\n          if (!canGetUser) {\n            throw ctx.error(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_GET_USER,\n              code: \"YOU_ARE_NOT_ALLOWED_TO_GET_USER\"\n            });\n          }\n          const user = await ctx.context.internalAdapter.findUserById(id);\n          if (!user) {\n            throw new APIError(\"NOT_FOUND\", {\n              message: BASE_ERROR_CODES.USER_NOT_FOUND\n            });\n          }\n          return parseUserOutput(ctx.context.options, user);\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/create-user`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.createUser`\n       *\n       * **client:**\n       * `authClient.admin.createUser`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-create-user)\n       */\n      createUser: createAuthEndpoint(\n        \"/admin/create-user\",\n        {\n          method: \"POST\",\n          body: z.object({\n            email: z.string().meta({\n              description: \"The email of the user\"\n            }),\n            password: z.string().meta({\n              description: \"The password of the user\"\n            }),\n            name: z.string().meta({\n              description: \"The name of the user\"\n            }),\n            role: z.union([\n              z.string().meta({\n                description: \"The role of the user\"\n              }),\n              z.array(\n                z.string().meta({\n                  description: \"The roles of user\"\n                })\n              )\n            ]).optional().meta({\n              description: `A string or array of strings representing the roles to apply to the new user. Eg: \"user\"`\n            }),\n            /**\n             * extra fields for user\n             */\n            data: z.record(z.string(), z.any()).optional().meta({\n              description: \"Extra fields for the user. Including custom additional fields.\"\n            })\n          }),\n          metadata: {\n            openapi: {\n              operationId: \"createUser\",\n              summary: \"Create a new user\",\n              description: \"Create a new user\",\n              responses: {\n                200: {\n                  description: \"User created\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          user: {\n                            $ref: \"#/components/schemas/User\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            $Infer: {\n              body: {}\n            }\n          }\n        },\n        async (ctx) => {\n          const session = await getSessionFromCtx(ctx);\n          if (!session && (ctx.request || ctx.headers)) {\n            throw ctx.error(\"UNAUTHORIZED\");\n          }\n          if (session) {\n            const canCreateUser = hasPermission({\n              userId: session.user.id,\n              role: session.user.role,\n              options: opts,\n              permissions: {\n                user: [\"create\"]\n              }\n            });\n            if (!canCreateUser) {\n              throw new APIError(\"FORBIDDEN\", {\n                message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_CREATE_USERS\n              });\n            }\n          }\n          const existUser = await ctx.context.internalAdapter.findUserByEmail(\n            ctx.body.email\n          );\n          if (existUser) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: ADMIN_ERROR_CODES.USER_ALREADY_EXISTS_USE_ANOTHER_EMAIL\n            });\n          }\n          const user = await ctx.context.internalAdapter.createUser(\n            {\n              email: ctx.body.email,\n              name: ctx.body.name,\n              role: (ctx.body.role && parseRoles(ctx.body.role)) ?? options?.defaultRole ?? \"user\",\n              ...ctx.body.data\n            },\n            ctx\n          );\n          if (!user) {\n            throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n              message: ADMIN_ERROR_CODES.FAILED_TO_CREATE_USER\n            });\n          }\n          const hashedPassword = await ctx.context.password.hash(\n            ctx.body.password\n          );\n          await ctx.context.internalAdapter.linkAccount(\n            {\n              accountId: user.id,\n              providerId: \"credential\",\n              password: hashedPassword,\n              userId: user.id\n            },\n            ctx\n          );\n          return ctx.json({\n            user\n          });\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/update-user`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.adminUpdateUser`\n       *\n       * **client:**\n       * `authClient.admin.updateUser`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-update-user)\n       */\n      adminUpdateUser: createAuthEndpoint(\n        \"/admin/update-user\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.coerce.string().meta({\n              description: \"The user id\"\n            }),\n            data: z.record(z.any(), z.any()).meta({\n              description: \"The user data to update\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"updateUser\",\n              summary: \"Update a user\",\n              description: \"Update a user's details\",\n              responses: {\n                200: {\n                  description: \"User updated\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          user: {\n                            $ref: \"#/components/schemas/User\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const canUpdateUser = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: ctx.context.session.user.role,\n            options: opts,\n            permissions: {\n              user: [\"update\"]\n            }\n          });\n          if (!canUpdateUser) {\n            throw ctx.error(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_UPDATE_USERS,\n              code: \"YOU_ARE_NOT_ALLOWED_TO_UPDATE_USERS\"\n            });\n          }\n          if (Object.keys(ctx.body.data).length === 0) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: ADMIN_ERROR_CODES.NO_DATA_TO_UPDATE\n            });\n          }\n          if (ctx.body.data?.role) {\n            ctx.body.data.role = parseRoles(ctx.body.data.role);\n          }\n          const updatedUser = await ctx.context.internalAdapter.updateUser(\n            ctx.body.userId,\n            ctx.body.data,\n            ctx\n          );\n          return ctx.json(updatedUser);\n        }\n      ),\n      listUsers: createAuthEndpoint(\n        \"/admin/list-users\",\n        {\n          method: \"GET\",\n          use: [adminMiddleware],\n          query: z.object({\n            searchValue: z.string().optional().meta({\n              description: 'The value to search for. Eg: \"some name\"'\n            }),\n            searchField: z.enum([\"email\", \"name\"]).meta({\n              description: 'The field to search in, defaults to email. Can be `email` or `name`. Eg: \"name\"'\n            }).optional(),\n            searchOperator: z.enum([\"contains\", \"starts_with\", \"ends_with\"]).meta({\n              description: 'The operator to use for the search. Can be `contains`, `starts_with` or `ends_with`. Eg: \"contains\"'\n            }).optional(),\n            limit: z.string().meta({\n              description: \"The number of users to return\"\n            }).or(z.number()).optional(),\n            offset: z.string().meta({\n              description: \"The offset to start from\"\n            }).or(z.number()).optional(),\n            sortBy: z.string().meta({\n              description: \"The field to sort by\"\n            }).optional(),\n            sortDirection: z.enum([\"asc\", \"desc\"]).meta({\n              description: \"The direction to sort by\"\n            }).optional(),\n            filterField: z.string().meta({\n              description: \"The field to filter by\"\n            }).optional(),\n            filterValue: z.string().meta({\n              description: \"The value to filter by\"\n            }).or(z.number()).or(z.boolean()).optional(),\n            filterOperator: z.enum([\"eq\", \"ne\", \"lt\", \"lte\", \"gt\", \"gte\", \"contains\"]).meta({\n              description: \"The operator to use for the filter\"\n            }).optional()\n          }),\n          metadata: {\n            openapi: {\n              operationId: \"listUsers\",\n              summary: \"List users\",\n              description: \"List users\",\n              responses: {\n                200: {\n                  description: \"List of users\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          users: {\n                            type: \"array\",\n                            items: {\n                              $ref: \"#/components/schemas/User\"\n                            }\n                          },\n                          total: {\n                            type: \"number\"\n                          },\n                          limit: {\n                            type: \"number\"\n                          },\n                          offset: {\n                            type: \"number\"\n                          }\n                        },\n                        required: [\"users\", \"total\"]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canListUsers = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permissions: {\n              user: [\"list\"]\n            }\n          });\n          if (!canListUsers) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_LIST_USERS\n            });\n          }\n          const where = [];\n          if (ctx.query?.searchValue) {\n            where.push({\n              field: ctx.query.searchField || \"email\",\n              operator: ctx.query.searchOperator || \"contains\",\n              value: ctx.query.searchValue\n            });\n          }\n          if (ctx.query?.filterValue) {\n            where.push({\n              field: ctx.query.filterField || \"email\",\n              operator: ctx.query.filterOperator || \"eq\",\n              value: ctx.query.filterValue\n            });\n          }\n          try {\n            const users = await ctx.context.internalAdapter.listUsers(\n              Number(ctx.query?.limit) || void 0,\n              Number(ctx.query?.offset) || void 0,\n              ctx.query?.sortBy ? {\n                field: ctx.query.sortBy,\n                direction: ctx.query.sortDirection || \"asc\"\n              } : void 0,\n              where.length ? where : void 0\n            );\n            const total = await ctx.context.internalAdapter.countTotalUsers(\n              where.length ? where : void 0\n            );\n            return ctx.json({\n              users,\n              total,\n              limit: Number(ctx.query?.limit) || void 0,\n              offset: Number(ctx.query?.offset) || void 0\n            });\n          } catch (e) {\n            return ctx.json({\n              users: [],\n              total: 0\n            });\n          }\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/list-user-sessions`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.listUserSessions`\n       *\n       * **client:**\n       * `authClient.admin.listUserSessions`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-list-user-sessions)\n       */\n      listUserSessions: createAuthEndpoint(\n        \"/admin/list-user-sessions\",\n        {\n          method: \"POST\",\n          use: [adminMiddleware],\n          body: z.object({\n            userId: z.coerce.string().meta({\n              description: \"The user id\"\n            })\n          }),\n          metadata: {\n            openapi: {\n              operationId: \"listUserSessions\",\n              summary: \"List user sessions\",\n              description: \"List user sessions\",\n              responses: {\n                200: {\n                  description: \"List of user sessions\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          sessions: {\n                            type: \"array\",\n                            items: {\n                              $ref: \"#/components/schemas/Session\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canListSessions = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permissions: {\n              session: [\"list\"]\n            }\n          });\n          if (!canListSessions) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_LIST_USERS_SESSIONS\n            });\n          }\n          const sessions = await ctx.context.internalAdapter.listSessions(ctx.body.userId);\n          return {\n            sessions\n          };\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/unban-user`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.unbanUser`\n       *\n       * **client:**\n       * `authClient.admin.unbanUser`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-unban-user)\n       */\n      unbanUser: createAuthEndpoint(\n        \"/admin/unban-user\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.coerce.string().meta({\n              description: \"The user id\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"unbanUser\",\n              summary: \"Unban a user\",\n              description: \"Unban a user\",\n              responses: {\n                200: {\n                  description: \"User unbanned\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          user: {\n                            $ref: \"#/components/schemas/User\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canBanUser = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permissions: {\n              user: [\"ban\"]\n            }\n          });\n          if (!canBanUser) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_BAN_USERS\n            });\n          }\n          const user = await ctx.context.internalAdapter.updateUser(\n            ctx.body.userId,\n            {\n              banned: false,\n              banExpires: null,\n              banReason: null,\n              updatedAt: /* @__PURE__ */ new Date()\n            }\n          );\n          return ctx.json({\n            user\n          });\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/ban-user`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.banUser`\n       *\n       * **client:**\n       * `authClient.admin.banUser`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-ban-user)\n       */\n      banUser: createAuthEndpoint(\n        \"/admin/ban-user\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.coerce.string().meta({\n              description: \"The user id\"\n            }),\n            /**\n             * Reason for the ban\n             */\n            banReason: z.string().meta({\n              description: \"The reason for the ban\"\n            }).optional(),\n            /**\n             * Number of seconds until the ban expires\n             */\n            banExpiresIn: z.number().meta({\n              description: \"The number of seconds until the ban expires\"\n            }).optional()\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"banUser\",\n              summary: \"Ban a user\",\n              description: \"Ban a user\",\n              responses: {\n                200: {\n                  description: \"User banned\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          user: {\n                            $ref: \"#/components/schemas/User\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canBanUser = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permissions: {\n              user: [\"ban\"]\n            }\n          });\n          if (!canBanUser) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_BAN_USERS\n            });\n          }\n          const foundUser = await ctx.context.internalAdapter.findUserById(\n            ctx.body.userId\n          );\n          if (!foundUser) {\n            throw new APIError(\"NOT_FOUND\", {\n              message: BASE_ERROR_CODES.USER_NOT_FOUND\n            });\n          }\n          if (ctx.body.userId === ctx.context.session.user.id) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: ADMIN_ERROR_CODES.YOU_CANNOT_BAN_YOURSELF\n            });\n          }\n          const user = await ctx.context.internalAdapter.updateUser(\n            ctx.body.userId,\n            {\n              banned: true,\n              banReason: ctx.body.banReason || options?.defaultBanReason || \"No reason\",\n              banExpires: ctx.body.banExpiresIn ? getDate(ctx.body.banExpiresIn, \"sec\") : options?.defaultBanExpiresIn ? getDate(options.defaultBanExpiresIn, \"sec\") : void 0,\n              updatedAt: /* @__PURE__ */ new Date()\n            },\n            ctx\n          );\n          await ctx.context.internalAdapter.deleteSessions(ctx.body.userId);\n          return ctx.json({\n            user\n          });\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/impersonate-user`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.impersonateUser`\n       *\n       * **client:**\n       * `authClient.admin.impersonateUser`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-impersonate-user)\n       */\n      impersonateUser: createAuthEndpoint(\n        \"/admin/impersonate-user\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.coerce.string().meta({\n              description: \"The user id\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"impersonateUser\",\n              summary: \"Impersonate a user\",\n              description: \"Impersonate a user\",\n              responses: {\n                200: {\n                  description: \"Impersonation session created\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          session: {\n                            $ref: \"#/components/schemas/Session\"\n                          },\n                          user: {\n                            $ref: \"#/components/schemas/User\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const canImpersonateUser = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: ctx.context.session.user.role,\n            options: opts,\n            permissions: {\n              user: [\"impersonate\"]\n            }\n          });\n          if (!canImpersonateUser) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_IMPERSONATE_USERS\n            });\n          }\n          const targetUser = await ctx.context.internalAdapter.findUserById(\n            ctx.body.userId\n          );\n          if (!targetUser) {\n            throw new APIError(\"NOT_FOUND\", {\n              message: \"User not found\"\n            });\n          }\n          const session = await ctx.context.internalAdapter.createSession(\n            targetUser.id,\n            ctx,\n            true,\n            {\n              impersonatedBy: ctx.context.session.user.id,\n              expiresAt: options?.impersonationSessionDuration ? getDate(options.impersonationSessionDuration, \"sec\") : getDate(60 * 60, \"sec\")\n              // 1 hour\n            },\n            true\n          );\n          if (!session) {\n            throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n              message: ADMIN_ERROR_CODES.FAILED_TO_CREATE_USER\n            });\n          }\n          const authCookies = ctx.context.authCookies;\n          deleteSessionCookie(ctx);\n          const dontRememberMeCookie = await ctx.getSignedCookie(\n            ctx.context.authCookies.dontRememberToken.name,\n            ctx.context.secret\n          );\n          const adminCookieProp = ctx.context.createAuthCookie(\"admin_session\");\n          await ctx.setSignedCookie(\n            adminCookieProp.name,\n            `${ctx.context.session.session.token}:${dontRememberMeCookie || \"\"}`,\n            ctx.context.secret,\n            authCookies.sessionToken.options\n          );\n          await setSessionCookie(\n            ctx,\n            {\n              session,\n              user: targetUser\n            },\n            true\n          );\n          return ctx.json({\n            session,\n            user: targetUser\n          });\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/stop-impersonating`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.stopImpersonating`\n       *\n       * **client:**\n       * `authClient.admin.stopImpersonating`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-stop-impersonating)\n       */\n      stopImpersonating: createAuthEndpoint(\n        \"/admin/stop-impersonating\",\n        {\n          method: \"POST\",\n          requireHeaders: true\n        },\n        async (ctx) => {\n          const session = await getSessionFromCtx(ctx);\n          if (!session) {\n            throw new APIError(\"UNAUTHORIZED\");\n          }\n          if (!session.session.impersonatedBy) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: \"You are not impersonating anyone\"\n            });\n          }\n          const user = await ctx.context.internalAdapter.findUserById(\n            session.session.impersonatedBy\n          );\n          if (!user) {\n            throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n              message: \"Failed to find user\"\n            });\n          }\n          const adminCookieName = ctx.context.createAuthCookie(\"admin_session\").name;\n          const adminCookie = await ctx.getSignedCookie(\n            adminCookieName,\n            ctx.context.secret\n          );\n          if (!adminCookie) {\n            throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n              message: \"Failed to find admin session\"\n            });\n          }\n          const [adminSessionToken, dontRememberMeCookie] = adminCookie?.split(\":\");\n          const adminSession = await ctx.context.internalAdapter.findSession(\n            adminSessionToken\n          );\n          if (!adminSession || adminSession.session.userId !== user.id) {\n            throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n              message: \"Failed to find admin session\"\n            });\n          }\n          await ctx.context.internalAdapter.deleteSession(\n            session.session.token\n          );\n          await setSessionCookie(ctx, adminSession, !!dontRememberMeCookie);\n          return ctx.json(adminSession);\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/revoke-user-session`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.revokeUserSession`\n       *\n       * **client:**\n       * `authClient.admin.revokeUserSession`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-revoke-user-session)\n       */\n      revokeUserSession: createAuthEndpoint(\n        \"/admin/revoke-user-session\",\n        {\n          method: \"POST\",\n          body: z.object({\n            sessionToken: z.string().meta({\n              description: \"The session token\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"revokeUserSession\",\n              summary: \"Revoke a user session\",\n              description: \"Revoke a user session\",\n              responses: {\n                200: {\n                  description: \"Session revoked\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          success: {\n                            type: \"boolean\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canRevokeSession = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permissions: {\n              session: [\"revoke\"]\n            }\n          });\n          if (!canRevokeSession) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_REVOKE_USERS_SESSIONS\n            });\n          }\n          await ctx.context.internalAdapter.deleteSession(\n            ctx.body.sessionToken\n          );\n          return ctx.json({\n            success: true\n          });\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/revoke-user-sessions`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.revokeUserSessions`\n       *\n       * **client:**\n       * `authClient.admin.revokeUserSessions`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-revoke-user-sessions)\n       */\n      revokeUserSessions: createAuthEndpoint(\n        \"/admin/revoke-user-sessions\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.coerce.string().meta({\n              description: \"The user id\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"revokeUserSessions\",\n              summary: \"Revoke all user sessions\",\n              description: \"Revoke all user sessions\",\n              responses: {\n                200: {\n                  description: \"Sessions revoked\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          success: {\n                            type: \"boolean\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canRevokeSession = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permissions: {\n              session: [\"revoke\"]\n            }\n          });\n          if (!canRevokeSession) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_REVOKE_USERS_SESSIONS\n            });\n          }\n          await ctx.context.internalAdapter.deleteSessions(ctx.body.userId);\n          return ctx.json({\n            success: true\n          });\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/remove-user`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.removeUser`\n       *\n       * **client:**\n       * `authClient.admin.removeUser`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-remove-user)\n       */\n      removeUser: createAuthEndpoint(\n        \"/admin/remove-user\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.coerce.string().meta({\n              description: \"The user id\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"removeUser\",\n              summary: \"Remove a user\",\n              description: \"Delete a user and all their sessions and accounts. Cannot be undone.\",\n              responses: {\n                200: {\n                  description: \"User removed\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          success: {\n                            type: \"boolean\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canDeleteUser = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permissions: {\n              user: [\"delete\"]\n            }\n          });\n          if (!canDeleteUser) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_DELETE_USERS\n            });\n          }\n          if (ctx.body.userId === ctx.context.session.user.id) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: ADMIN_ERROR_CODES.YOU_CANNOT_REMOVE_YOURSELF\n            });\n          }\n          const user = await ctx.context.internalAdapter.findUserById(\n            ctx.body.userId\n          );\n          if (!user) {\n            throw new APIError(\"NOT_FOUND\", {\n              message: \"User not found\"\n            });\n          }\n          await ctx.context.internalAdapter.deleteUser(ctx.body.userId);\n          return ctx.json({\n            success: true\n          });\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/set-user-password`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.setUserPassword`\n       *\n       * **client:**\n       * `authClient.admin.setUserPassword`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-set-user-password)\n       */\n      setUserPassword: createAuthEndpoint(\n        \"/admin/set-user-password\",\n        {\n          method: \"POST\",\n          body: z.object({\n            newPassword: z.string().meta({\n              description: \"The new password\"\n            }),\n            userId: z.coerce.string().meta({\n              description: \"The user id\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"setUserPassword\",\n              summary: \"Set a user's password\",\n              description: \"Set a user's password\",\n              responses: {\n                200: {\n                  description: \"Password set\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          status: {\n                            type: \"boolean\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const canSetUserPassword = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: ctx.context.session.user.role,\n            options: opts,\n            permissions: {\n              user: [\"set-password\"]\n            }\n          });\n          if (!canSetUserPassword) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_SET_USERS_PASSWORD\n            });\n          }\n          const hashedPassword = await ctx.context.password.hash(\n            ctx.body.newPassword\n          );\n          await ctx.context.internalAdapter.updatePassword(\n            ctx.body.userId,\n            hashedPassword\n          );\n          return ctx.json({\n            status: true\n          });\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/has-permission`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.userHasPermission`\n       *\n       * **client:**\n       * `authClient.admin.hasPermission`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-has-permission)\n       */\n      userHasPermission: createAuthEndpoint(\n        \"/admin/has-permission\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.coerce.string().optional().meta({\n              description: `The user id. Eg: \"user-id\"`\n            }),\n            role: z.string().optional().meta({\n              description: `The role to check permission for. Eg: \"admin\"`\n            })\n          }).and(\n            z.union([\n              z.object({\n                permission: z.record(z.string(), z.array(z.string())),\n                permissions: z.undefined()\n              }),\n              z.object({\n                permission: z.undefined(),\n                permissions: z.record(z.string(), z.array(z.string()))\n              })\n            ])\n          ),\n          metadata: {\n            openapi: {\n              description: \"Check if the user has permission\",\n              requestBody: {\n                content: {\n                  \"application/json\": {\n                    schema: {\n                      type: \"object\",\n                      properties: {\n                        permission: {\n                          type: \"object\",\n                          description: \"The permission to check\",\n                          deprecated: true\n                        },\n                        permissions: {\n                          type: \"object\",\n                          description: \"The permission to check\"\n                        }\n                      },\n                      required: [\"permissions\"]\n                    }\n                  }\n                }\n              },\n              responses: {\n                \"200\": {\n                  description: \"Success\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          error: {\n                            type: \"string\"\n                          },\n                          success: {\n                            type: \"boolean\"\n                          }\n                        },\n                        required: [\"success\"]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            $Infer: {\n              body: {}\n            }\n          }\n        },\n        async (ctx) => {\n          if (!ctx.body?.permission && !ctx.body?.permissions) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: \"invalid permission check. no permission(s) were passed.\"\n            });\n          }\n          const session = await getSessionFromCtx(ctx);\n          if (!session && (ctx.request || ctx.headers)) {\n            throw new APIError(\"UNAUTHORIZED\");\n          }\n          if (!session && !ctx.body.userId && !ctx.body.role) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: \"user id or role is required\"\n            });\n          }\n          const user = session?.user || (ctx.body.role ? { id: ctx.body.userId || \"\", role: ctx.body.role } : null) || await ctx.context.internalAdapter.findUserById(\n            ctx.body.userId\n          );\n          if (!user) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: \"user not found\"\n            });\n          }\n          const result = hasPermission({\n            userId: user.id,\n            role: user.role,\n            options,\n            permissions: ctx.body.permissions ?? ctx.body.permission\n          });\n          return ctx.json({\n            error: null,\n            success: result\n          });\n        }\n      )\n    },\n    $ERROR_CODES: ADMIN_ERROR_CODES,\n    schema: mergeSchema(schema, opts.schema),\n    options\n  };\n};\n\nexport { admin as a };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7447, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.DDuRjwGK.mjs"],"sourcesContent":["import { generateKeyPair, exportJWK, importJWK, SignJWT } from 'jose';\nimport { B as BetterAuthError } from './better-auth.DdzSJf-n.mjs';\nimport { symmetricEncrypt, symmetricDecrypt } from '../crypto/index.mjs';\nimport '@better-auth/utils';\nimport '@better-auth/utils/base64';\n\nconst getJwksAdapter = (adapter) => {\n  return {\n    getAllKeys: async () => {\n      return await adapter.findMany({\n        model: \"jwks\"\n      });\n    },\n    getLatestKey: async () => {\n      const key = await adapter.findMany({\n        model: \"jwks\",\n        sortBy: {\n          field: \"createdAt\",\n          direction: \"desc\"\n        },\n        limit: 1\n      });\n      return key[0];\n    },\n    createJwk: async (webKey) => {\n      const jwk = await adapter.create({\n        model: \"jwks\",\n        data: {\n          ...webKey,\n          createdAt: /* @__PURE__ */ new Date()\n        }\n      });\n      return jwk;\n    }\n  };\n};\n\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nfunction joseSecs(str) {\n  const matched = REGEX.exec(str);\n  if (!matched || matched[4] && matched[1]) {\n    throw new TypeError(\"Invalid time period format\");\n  }\n  const value = parseFloat(matched[2]);\n  const unit = matched[3].toLowerCase();\n  let numericDate;\n  switch (unit) {\n    case \"sec\":\n    case \"secs\":\n    case \"second\":\n    case \"seconds\":\n    case \"s\":\n      numericDate = Math.round(value);\n      break;\n    case \"minute\":\n    case \"minutes\":\n    case \"min\":\n    case \"mins\":\n    case \"m\":\n      numericDate = Math.round(value * minute);\n      break;\n    case \"hour\":\n    case \"hours\":\n    case \"hr\":\n    case \"hrs\":\n    case \"h\":\n      numericDate = Math.round(value * hour);\n      break;\n    case \"day\":\n    case \"days\":\n    case \"d\":\n      numericDate = Math.round(value * day);\n      break;\n    case \"week\":\n    case \"weeks\":\n    case \"w\":\n      numericDate = Math.round(value * week);\n      break;\n    // years matched\n    default:\n      numericDate = Math.round(value * year);\n      break;\n  }\n  if (matched[1] === \"-\" || matched[4] === \"ago\") {\n    return -numericDate;\n  }\n  return numericDate;\n}\n\nfunction toExpJWT(expirationTime, iat) {\n  if (typeof expirationTime === \"number\") {\n    return expirationTime;\n  } else if (expirationTime instanceof Date) {\n    return Math.floor(expirationTime.getTime() / 1e3);\n  } else {\n    return iat + joseSecs(expirationTime);\n  }\n}\nasync function generateExportedKeyPair(options) {\n  const { alg, ...cfg } = options?.jwks?.keyPairConfig ?? {\n    alg: \"EdDSA\",\n    crv: \"Ed25519\"\n  };\n  const { publicKey, privateKey } = await generateKeyPair(alg, {\n    ...cfg,\n    extractable: true\n  });\n  const publicWebKey = await exportJWK(publicKey);\n  const privateWebKey = await exportJWK(privateKey);\n  return { publicWebKey, privateWebKey, alg, cfg };\n}\nasync function createJwk(ctx, options) {\n  const { publicWebKey, privateWebKey, alg, cfg } = await generateExportedKeyPair(options);\n  const stringifiedPrivateWebKey = JSON.stringify(privateWebKey);\n  const privateKeyEncryptionEnabled = !options?.jwks?.disablePrivateKeyEncryption;\n  let jwk = {\n    alg,\n    ...cfg && \"crv\" in cfg ? {\n      crv: cfg.crv\n    } : {},\n    publicKey: JSON.stringify(publicWebKey),\n    privateKey: privateKeyEncryptionEnabled ? JSON.stringify(\n      await symmetricEncrypt({\n        key: ctx.context.secret,\n        data: stringifiedPrivateWebKey\n      })\n    ) : stringifiedPrivateWebKey,\n    createdAt: /* @__PURE__ */ new Date()\n  };\n  const adapter = getJwksAdapter(ctx.context.adapter);\n  const key = await adapter.createJwk(jwk);\n  return key;\n}\n\nasync function signJWT(ctx, config) {\n  const { options, payload } = config;\n  const nowSeconds = Math.floor(Date.now() / 1e3);\n  const iat = payload.iat;\n  let exp = payload.exp;\n  const defaultExp = toExpJWT(\n    options?.jwt?.expirationTime ?? \"15m\",\n    iat ?? nowSeconds\n  );\n  exp = exp ?? defaultExp;\n  const nbf = payload.nbf;\n  const iss = payload.iss;\n  const defaultIss = options?.jwt?.issuer ?? ctx.context.options.baseURL;\n  const aud = payload.aud;\n  const defaultAud = options?.jwt?.audience ?? ctx.context.options.baseURL;\n  if (options?.jwt?.sign) {\n    const jwtPayload = {\n      ...payload,\n      iat,\n      exp,\n      nbf,\n      iss: iss ?? defaultIss,\n      aud: aud ?? defaultAud\n    };\n    return options.jwt.sign(jwtPayload);\n  }\n  const adapter = getJwksAdapter(ctx.context.adapter);\n  let key = await adapter.getLatestKey();\n  const privateKeyEncryptionEnabled = !options?.jwks?.disablePrivateKeyEncryption;\n  if (key === void 0) {\n    key = await createJwk(ctx, options);\n  }\n  let privateWebKey = privateKeyEncryptionEnabled ? await symmetricDecrypt({\n    key: ctx.context.secret,\n    data: JSON.parse(key.privateKey)\n  }).catch(() => {\n    throw new BetterAuthError(\n      \"Failed to decrypt private private key. Make sure the secret currently in use is the same as the one used to encrypt the private key. If you are using a different secret, either cleanup your jwks or disable private key encryption.\"\n    );\n  }) : key.privateKey;\n  const alg = key.alg ?? options?.jwks?.keyPairConfig?.alg ?? \"EdDSA\";\n  const privateKey = await importJWK(JSON.parse(privateWebKey), alg);\n  const jwt = new SignJWT(payload).setProtectedHeader({\n    alg,\n    kid: key.id\n  }).setExpirationTime(exp).setIssuer(iss ?? defaultIss).setAudience(aud ?? defaultAud);\n  if (iat) jwt.setIssuedAt(iat);\n  if (payload.sub) jwt.setSubject(payload.sub);\n  if (payload.nbf) jwt.setNotBefore(payload.nbf);\n  if (payload.jti) jwt.setJti(payload.jti);\n  return await jwt.sign(privateKey);\n}\nasync function getJwtToken(ctx, options) {\n  const payload = !options?.jwt?.definePayload ? ctx.context.session.user : await options?.jwt.definePayload(ctx.context.session);\n  return await signJWT(ctx, {\n    options,\n    payload: {\n      iat: Math.floor(Date.now() / 1e3),\n      ...payload,\n      sub: await options?.jwt?.getSubject?.(ctx.context.session) ?? ctx.context.session.user.id\n    }\n  });\n}\n\nexport { getJwksAdapter as a, generateExportedKeyPair as b, createJwk as c, getJwtToken as g, signJWT as s };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7668, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.BDO3prN3.mjs"],"sourcesContent":["import * as z from 'zod';\nimport { SignJWT } from 'jose';\nimport { APIError } from 'better-call';\nimport './better-auth.C3-_8m-g.mjs';\nimport { g as getSessionFromCtx, a as createAuthEndpoint, c as createAuthMiddleware, s as sessionMiddleware } from './better-auth.C5vDERgF.mjs';\nimport './better-auth.CiuwFiHM.mjs';\nimport { base64Url, base64 } from '@better-auth/utils/base64';\nimport '@better-auth/utils/hmac';\nimport './better-auth.DgGir396.mjs';\nimport '@better-auth/utils/binary';\nimport { p as parseSetCookieHeader } from './better-auth.DiMXeqeq.mjs';\nimport '@better-auth/core/db';\nimport { m as mergeSchema } from './better-auth.BLnvK9hk.mjs';\nimport '@better-auth/utils/random';\nimport { symmetricEncrypt, symmetricDecrypt } from '../crypto/index.mjs';\nimport 'kysely';\nimport { createHash } from '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha.js';\nimport '@noble/ciphers/utils.js';\nimport '@noble/hashes/scrypt.js';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils.js';\nimport { g as generateRandomString } from './better-auth.B4Qoxdgc.mjs';\nimport { g as getJwtToken } from './better-auth.DDuRjwGK.mjs';\n\nconst schema = {\n  oauthApplication: {\n    modelName: \"oauthApplication\",\n    fields: {\n      name: {\n        type: \"string\"\n      },\n      icon: {\n        type: \"string\",\n        required: false\n      },\n      metadata: {\n        type: \"string\",\n        required: false\n      },\n      clientId: {\n        type: \"string\",\n        unique: true\n      },\n      clientSecret: {\n        type: \"string\",\n        required: false\n      },\n      redirectURLs: {\n        type: \"string\"\n      },\n      type: {\n        type: \"string\"\n      },\n      disabled: {\n        type: \"boolean\",\n        required: false,\n        defaultValue: false\n      },\n      userId: {\n        type: \"string\",\n        required: false,\n        references: {\n          model: \"user\",\n          field: \"id\",\n          onDelete: \"cascade\"\n        }\n      },\n      createdAt: {\n        type: \"date\"\n      },\n      updatedAt: {\n        type: \"date\"\n      }\n    }\n  },\n  oauthAccessToken: {\n    modelName: \"oauthAccessToken\",\n    fields: {\n      accessToken: {\n        type: \"string\",\n        unique: true\n      },\n      refreshToken: {\n        type: \"string\",\n        unique: true\n      },\n      accessTokenExpiresAt: {\n        type: \"date\"\n      },\n      refreshTokenExpiresAt: {\n        type: \"date\"\n      },\n      clientId: {\n        type: \"string\",\n        references: {\n          model: \"oauthApplication\",\n          field: \"clientId\",\n          onDelete: \"cascade\"\n        }\n      },\n      userId: {\n        type: \"string\",\n        required: false,\n        references: {\n          model: \"user\",\n          field: \"id\",\n          onDelete: \"cascade\"\n        }\n      },\n      scopes: {\n        type: \"string\"\n      },\n      createdAt: {\n        type: \"date\"\n      },\n      updatedAt: {\n        type: \"date\"\n      }\n    }\n  },\n  oauthConsent: {\n    modelName: \"oauthConsent\",\n    fields: {\n      clientId: {\n        type: \"string\",\n        references: {\n          model: \"oauthApplication\",\n          field: \"clientId\",\n          onDelete: \"cascade\"\n        }\n      },\n      userId: {\n        type: \"string\",\n        references: {\n          model: \"user\",\n          field: \"id\",\n          onDelete: \"cascade\"\n        }\n      },\n      scopes: {\n        type: \"string\"\n      },\n      createdAt: {\n        type: \"date\"\n      },\n      updatedAt: {\n        type: \"date\"\n      },\n      consentGiven: {\n        type: \"boolean\"\n      }\n    }\n  }\n};\n\nfunction formatErrorURL(url, error, description) {\n  return `${url.includes(\"?\") ? \"&\" : \"?\"}error=${error}&error_description=${description}`;\n}\nfunction getErrorURL(ctx, error, description) {\n  const baseURL = ctx.context.options.onAPIError?.errorURL || `${ctx.context.baseURL}/error`;\n  const formattedURL = formatErrorURL(baseURL, error, description);\n  return formattedURL;\n}\nasync function authorize(ctx, options) {\n  const handleRedirect = (url) => {\n    const fromFetch = ctx.request?.headers.get(\"sec-fetch-mode\") === \"cors\";\n    if (fromFetch) {\n      return ctx.json({\n        redirect: true,\n        url\n      });\n    } else {\n      throw ctx.redirect(url);\n    }\n  };\n  const opts = {\n    codeExpiresIn: 600,\n    defaultScope: \"openid\",\n    ...options,\n    scopes: [\n      \"openid\",\n      \"profile\",\n      \"email\",\n      \"offline_access\",\n      ...options?.scopes || []\n    ]\n  };\n  if (!ctx.request) {\n    throw new APIError(\"UNAUTHORIZED\", {\n      error_description: \"request not found\",\n      error: \"invalid_request\"\n    });\n  }\n  const session = await getSessionFromCtx(ctx);\n  if (!session) {\n    await ctx.setSignedCookie(\n      \"oidc_login_prompt\",\n      JSON.stringify(ctx.query),\n      ctx.context.secret,\n      {\n        maxAge: 600,\n        path: \"/\",\n        sameSite: \"lax\"\n      }\n    );\n    const queryFromURL = ctx.request.url?.split(\"?\")[1];\n    return handleRedirect(`${options.loginPage}?${queryFromURL}`);\n  }\n  const query = ctx.query;\n  if (!query.client_id) {\n    const errorURL = getErrorURL(\n      ctx,\n      \"invalid_client\",\n      \"client_id is required\"\n    );\n    throw ctx.redirect(errorURL);\n  }\n  if (!query.response_type) {\n    getErrorURL(\n      ctx,\n      \"invalid_request\",\n      \"response_type is required\"\n    );\n    throw ctx.redirect(\n      getErrorURL(ctx, \"invalid_request\", \"response_type is required\")\n    );\n  }\n  const client = await getClient(\n    ctx.query.client_id,\n    ctx.context.adapter,\n    options.trustedClients || []\n  );\n  if (!client) {\n    const errorURL = getErrorURL(\n      ctx,\n      \"invalid_client\",\n      \"client_id is required\"\n    );\n    throw ctx.redirect(errorURL);\n  }\n  const redirectURI = client.redirectURLs.find(\n    (url) => url === ctx.query.redirect_uri\n  );\n  if (!redirectURI || !query.redirect_uri) {\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"Invalid redirect URI\"\n    });\n  }\n  if (client.disabled) {\n    const errorURL = getErrorURL(ctx, \"client_disabled\", \"client is disabled\");\n    throw ctx.redirect(errorURL);\n  }\n  if (query.response_type !== \"code\") {\n    const errorURL = getErrorURL(\n      ctx,\n      \"unsupported_response_type\",\n      \"unsupported response type\"\n    );\n    throw ctx.redirect(errorURL);\n  }\n  const requestScope = query.scope?.split(\" \").filter((s) => s) || opts.defaultScope.split(\" \");\n  const invalidScopes = requestScope.filter((scope) => {\n    return !opts.scopes.includes(scope);\n  });\n  if (invalidScopes.length) {\n    return handleRedirect(\n      formatErrorURL(\n        query.redirect_uri,\n        \"invalid_scope\",\n        `The following scopes are invalid: ${invalidScopes.join(\", \")}`\n      )\n    );\n  }\n  if ((!query.code_challenge || !query.code_challenge_method) && options.requirePKCE) {\n    return handleRedirect(\n      formatErrorURL(query.redirect_uri, \"invalid_request\", \"pkce is required\")\n    );\n  }\n  if (!query.code_challenge_method) {\n    query.code_challenge_method = \"plain\";\n  }\n  if (![\n    \"s256\",\n    options.allowPlainCodeChallengeMethod ? \"plain\" : \"s256\"\n  ].includes(query.code_challenge_method?.toLowerCase() || \"\")) {\n    return handleRedirect(\n      formatErrorURL(\n        query.redirect_uri,\n        \"invalid_request\",\n        \"invalid code_challenge method\"\n      )\n    );\n  }\n  const code = generateRandomString(32, \"a-z\", \"A-Z\", \"0-9\");\n  const codeExpiresInMs = opts.codeExpiresIn * 1e3;\n  const expiresAt = new Date(Date.now() + codeExpiresInMs);\n  const skipConsentForTrustedClient = client.skipConsent;\n  const hasAlreadyConsented = await ctx.context.adapter.findOne({\n    model: \"oauthConsent\",\n    where: [\n      {\n        field: \"clientId\",\n        value: client.clientId\n      },\n      {\n        field: \"userId\",\n        value: session.user.id\n      }\n    ]\n  }).then((res) => !!res?.consentGiven);\n  const requireConsent = !skipConsentForTrustedClient && (!hasAlreadyConsented || query.prompt === \"consent\");\n  try {\n    await ctx.context.internalAdapter.createVerificationValue(\n      {\n        value: JSON.stringify({\n          clientId: client.clientId,\n          redirectURI: query.redirect_uri,\n          scope: requestScope,\n          userId: session.user.id,\n          authTime: new Date(session.session.createdAt).getTime(),\n          /**\n           * Consent is required per OIDC spec unless:\n           * 1. Client is trusted (skipConsent = true)\n           * 2. User has already consented (and prompt is not \"consent\")\n           *\n           * When consent is required, the code needs to be treated as a\n           * consent request. Once the user consents, the code will be\n           * updated with the actual authorization code.\n           */\n          requireConsent,\n          state: requireConsent ? query.state : null,\n          codeChallenge: query.code_challenge,\n          codeChallengeMethod: query.code_challenge_method,\n          nonce: query.nonce\n        }),\n        identifier: code,\n        expiresAt\n      },\n      ctx\n    );\n  } catch (e) {\n    return handleRedirect(\n      formatErrorURL(\n        query.redirect_uri,\n        \"server_error\",\n        \"An error occurred while processing the request\"\n      )\n    );\n  }\n  if (!requireConsent) {\n    const redirectURIWithCode = new URL(redirectURI);\n    redirectURIWithCode.searchParams.set(\"code\", code);\n    redirectURIWithCode.searchParams.set(\"state\", ctx.query.state);\n    return handleRedirect(redirectURIWithCode.toString());\n  }\n  if (options?.consentPage) {\n    await ctx.setSignedCookie(\"oidc_consent_prompt\", code, ctx.context.secret, {\n      maxAge: 600,\n      path: \"/\",\n      sameSite: \"lax\"\n    });\n    const urlParams = new URLSearchParams();\n    urlParams.set(\"consent_code\", code);\n    urlParams.set(\"client_id\", client.clientId);\n    urlParams.set(\"scope\", requestScope.join(\" \"));\n    const consentURI = `${options.consentPage}?${urlParams.toString()}`;\n    return handleRedirect(consentURI);\n  }\n  const htmlFn = options?.getConsentHTML;\n  if (!htmlFn) {\n    throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n      message: \"No consent page provided\"\n    });\n  }\n  return new Response(\n    htmlFn({\n      scopes: requestScope,\n      clientMetadata: client.metadata,\n      clientIcon: client?.icon,\n      clientId: client.clientId,\n      clientName: client.name,\n      code\n    }),\n    {\n      headers: {\n        \"content-type\": \"text/html\"\n      }\n    }\n  );\n}\n\nconst defaultClientSecretHasher = async (clientSecret) => {\n  const hash = await createHash(\"SHA-256\").digest(\n    new TextEncoder().encode(clientSecret)\n  );\n  const hashed = base64Url.encode(new Uint8Array(hash), {\n    padding: false\n  });\n  return hashed;\n};\n\nconst getJwtPlugin = (ctx) => {\n  return ctx.context.options.plugins?.find(\n    (plugin) => plugin.id === \"jwt\"\n  );\n};\nasync function getClient(clientId, adapter, trustedClients = []) {\n  const trustedClient = trustedClients.find(\n    (client) => client.clientId === clientId\n  );\n  if (trustedClient) {\n    return trustedClient;\n  }\n  const dbClient = await adapter.findOne({\n    model: \"oauthApplication\",\n    where: [{ field: \"clientId\", value: clientId }]\n  }).then((res) => {\n    if (!res) {\n      return null;\n    }\n    return {\n      ...res,\n      redirectURLs: (res.redirectURLs ?? \"\").split(\",\"),\n      metadata: res.metadata ? JSON.parse(res.metadata) : {}\n    };\n  });\n  return dbClient;\n}\nconst getMetadata = (ctx, options) => {\n  const jwtPlugin = getJwtPlugin(ctx);\n  const issuer = jwtPlugin && jwtPlugin.options?.jwt && jwtPlugin.options.jwt.issuer ? jwtPlugin.options.jwt.issuer : ctx.context.options.baseURL;\n  const baseURL = ctx.context.baseURL;\n  const supportedAlgs = options?.useJWTPlugin ? [\"RS256\", \"EdDSA\", \"none\"] : [\"HS256\", \"none\"];\n  return {\n    issuer,\n    authorization_endpoint: `${baseURL}/oauth2/authorize`,\n    token_endpoint: `${baseURL}/oauth2/token`,\n    userinfo_endpoint: `${baseURL}/oauth2/userinfo`,\n    jwks_uri: `${baseURL}/jwks`,\n    registration_endpoint: `${baseURL}/oauth2/register`,\n    scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n    response_types_supported: [\"code\"],\n    response_modes_supported: [\"query\"],\n    grant_types_supported: [\"authorization_code\", \"refresh_token\"],\n    acr_values_supported: [\n      \"urn:mace:incommon:iap:silver\",\n      \"urn:mace:incommon:iap:bronze\"\n    ],\n    subject_types_supported: [\"public\"],\n    id_token_signing_alg_values_supported: supportedAlgs,\n    token_endpoint_auth_methods_supported: [\n      \"client_secret_basic\",\n      \"client_secret_post\",\n      \"none\"\n    ],\n    code_challenge_methods_supported: [\"S256\"],\n    claims_supported: [\n      \"sub\",\n      \"iss\",\n      \"aud\",\n      \"exp\",\n      \"nbf\",\n      \"iat\",\n      \"jti\",\n      \"email\",\n      \"email_verified\",\n      \"name\"\n    ],\n    ...options?.metadata\n  };\n};\nconst oidcProvider = (options) => {\n  const modelName = {\n    oauthClient: \"oauthApplication\",\n    oauthAccessToken: \"oauthAccessToken\",\n    oauthConsent: \"oauthConsent\"\n  };\n  const opts = {\n    codeExpiresIn: 600,\n    defaultScope: \"openid\",\n    accessTokenExpiresIn: 3600,\n    refreshTokenExpiresIn: 604800,\n    allowPlainCodeChallengeMethod: true,\n    storeClientSecret: \"plain\",\n    ...options,\n    scopes: [\n      \"openid\",\n      \"profile\",\n      \"email\",\n      \"offline_access\",\n      ...options?.scopes || []\n    ]\n  };\n  const trustedClients = options.trustedClients || [];\n  async function storeClientSecret(ctx, clientSecret) {\n    if (opts.storeClientSecret === \"encrypted\") {\n      return await symmetricEncrypt({\n        key: ctx.context.secret,\n        data: clientSecret\n      });\n    }\n    if (opts.storeClientSecret === \"hashed\") {\n      return await defaultClientSecretHasher(clientSecret);\n    }\n    if (typeof opts.storeClientSecret === \"object\" && \"hash\" in opts.storeClientSecret) {\n      return await opts.storeClientSecret.hash(clientSecret);\n    }\n    if (typeof opts.storeClientSecret === \"object\" && \"encrypt\" in opts.storeClientSecret) {\n      return await opts.storeClientSecret.encrypt(clientSecret);\n    }\n    return clientSecret;\n  }\n  async function verifyStoredClientSecret(ctx, storedClientSecret, clientSecret) {\n    if (opts.storeClientSecret === \"encrypted\") {\n      return await symmetricDecrypt({\n        key: ctx.context.secret,\n        data: storedClientSecret\n      }) === clientSecret;\n    }\n    if (opts.storeClientSecret === \"hashed\") {\n      const hashedClientSecret = await defaultClientSecretHasher(clientSecret);\n      return hashedClientSecret === storedClientSecret;\n    }\n    if (typeof opts.storeClientSecret === \"object\" && \"hash\" in opts.storeClientSecret) {\n      const hashedClientSecret = await opts.storeClientSecret.hash(clientSecret);\n      return hashedClientSecret === storedClientSecret;\n    }\n    if (typeof opts.storeClientSecret === \"object\" && \"decrypt\" in opts.storeClientSecret) {\n      const decryptedClientSecret = await opts.storeClientSecret.decrypt(storedClientSecret);\n      return decryptedClientSecret === clientSecret;\n    }\n    return clientSecret === storedClientSecret;\n  }\n  return {\n    id: \"oidc\",\n    hooks: {\n      after: [\n        {\n          matcher() {\n            return true;\n          },\n          handler: createAuthMiddleware(async (ctx) => {\n            const cookie = await ctx.getSignedCookie(\n              \"oidc_login_prompt\",\n              ctx.context.secret\n            );\n            const cookieName = ctx.context.authCookies.sessionToken.name;\n            const parsedSetCookieHeader = parseSetCookieHeader(\n              ctx.context.responseHeaders?.get(\"set-cookie\") || \"\"\n            );\n            const hasSessionToken = parsedSetCookieHeader.has(cookieName);\n            if (!cookie || !hasSessionToken) {\n              return;\n            }\n            ctx.setCookie(\"oidc_login_prompt\", \"\", {\n              maxAge: 0\n            });\n            const sessionCookie = parsedSetCookieHeader.get(cookieName)?.value;\n            const sessionToken = sessionCookie?.split(\".\")[0];\n            if (!sessionToken) {\n              return;\n            }\n            const session = await ctx.context.internalAdapter.findSession(sessionToken);\n            if (!session) {\n              return;\n            }\n            ctx.query = JSON.parse(cookie);\n            ctx.context.session = session;\n            const response = await authorize(ctx, opts);\n            return response;\n          })\n        }\n      ]\n    },\n    endpoints: {\n      getOpenIdConfig: createAuthEndpoint(\n        \"/.well-known/openid-configuration\",\n        {\n          method: \"GET\",\n          metadata: {\n            isAction: false\n          }\n        },\n        async (ctx) => {\n          const metadata = getMetadata(ctx, options);\n          return ctx.json(metadata);\n        }\n      ),\n      oAuth2authorize: createAuthEndpoint(\n        \"/oauth2/authorize\",\n        {\n          method: \"GET\",\n          query: z.record(z.string(), z.any()),\n          metadata: {\n            openapi: {\n              description: \"Authorize an OAuth2 request\",\n              responses: {\n                \"200\": {\n                  description: \"Authorization response generated successfully\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        additionalProperties: true,\n                        description: \"Authorization response, contents depend on the authorize function implementation\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          return authorize(ctx, opts);\n        }\n      ),\n      oAuthConsent: createAuthEndpoint(\n        \"/oauth2/consent\",\n        {\n          method: \"POST\",\n          body: z.object({\n            accept: z.boolean(),\n            consent_code: z.string().optional().nullish()\n          }),\n          use: [sessionMiddleware],\n          metadata: {\n            openapi: {\n              description: \"Handle OAuth2 consent. Supports both URL parameter-based flows (consent_code in body) and cookie-based flows (signed cookie).\",\n              requestBody: {\n                required: true,\n                content: {\n                  \"application/json\": {\n                    schema: {\n                      type: \"object\",\n                      properties: {\n                        accept: {\n                          type: \"boolean\",\n                          description: \"Whether the user accepts or denies the consent request\"\n                        },\n                        consent_code: {\n                          type: \"string\",\n                          description: \"The consent code from the authorization request. Optional if using cookie-based flow.\"\n                        }\n                      },\n                      required: [\"accept\"]\n                    }\n                  }\n                }\n              },\n              responses: {\n                \"200\": {\n                  description: \"Consent processed successfully\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          redirectURI: {\n                            type: \"string\",\n                            format: \"uri\",\n                            description: \"The URI to redirect to, either with an authorization code or an error\"\n                          }\n                        },\n                        required: [\"redirectURI\"]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          let consentCode = ctx.body.consent_code || null;\n          if (!consentCode) {\n            consentCode = await ctx.getSignedCookie(\n              \"oidc_consent_prompt\",\n              ctx.context.secret\n            );\n          }\n          if (!consentCode) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"consent_code is required (either in body or cookie)\",\n              error: \"invalid_request\"\n            });\n          }\n          const verification = await ctx.context.internalAdapter.findVerificationValue(\n            consentCode\n          );\n          if (!verification) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"Invalid code\",\n              error: \"invalid_request\"\n            });\n          }\n          if (verification.expiresAt < /* @__PURE__ */ new Date()) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"Code expired\",\n              error: \"invalid_request\"\n            });\n          }\n          ctx.setCookie(\"oidc_consent_prompt\", \"\", {\n            maxAge: 0\n          });\n          const value = JSON.parse(verification.value);\n          if (!value.requireConsent) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"Consent not required\",\n              error: \"invalid_request\"\n            });\n          }\n          if (!ctx.body.accept) {\n            await ctx.context.internalAdapter.deleteVerificationValue(\n              verification.id\n            );\n            return ctx.json({\n              redirectURI: `${value.redirectURI}?error=access_denied&error_description=User denied access`\n            });\n          }\n          const code = generateRandomString(32, \"a-z\", \"A-Z\", \"0-9\");\n          const codeExpiresInMs = opts.codeExpiresIn * 1e3;\n          const expiresAt = new Date(Date.now() + codeExpiresInMs);\n          await ctx.context.internalAdapter.updateVerificationValue(\n            verification.id,\n            {\n              value: JSON.stringify({\n                ...value,\n                requireConsent: false\n              }),\n              identifier: code,\n              expiresAt\n            }\n          );\n          await ctx.context.adapter.create({\n            model: modelName.oauthConsent,\n            data: {\n              clientId: value.clientId,\n              userId: value.userId,\n              scopes: value.scope.join(\" \"),\n              consentGiven: true,\n              createdAt: /* @__PURE__ */ new Date(),\n              updatedAt: /* @__PURE__ */ new Date()\n            }\n          });\n          const redirectURI = new URL(value.redirectURI);\n          redirectURI.searchParams.set(\"code\", code);\n          if (value.state) redirectURI.searchParams.set(\"state\", value.state);\n          return ctx.json({\n            redirectURI: redirectURI.toString()\n          });\n        }\n      ),\n      oAuth2token: createAuthEndpoint(\n        \"/oauth2/token\",\n        {\n          method: \"POST\",\n          body: z.record(z.any(), z.any()),\n          metadata: {\n            isAction: false\n          }\n        },\n        async (ctx) => {\n          let { body } = ctx;\n          if (!body) {\n            throw new APIError(\"BAD_REQUEST\", {\n              error_description: \"request body not found\",\n              error: \"invalid_request\"\n            });\n          }\n          if (body instanceof FormData) {\n            body = Object.fromEntries(body.entries());\n          }\n          if (!(body instanceof Object)) {\n            throw new APIError(\"BAD_REQUEST\", {\n              error_description: \"request body is not an object\",\n              error: \"invalid_request\"\n            });\n          }\n          let { client_id, client_secret } = body;\n          const authorization = ctx.request?.headers.get(\"authorization\") || null;\n          if (authorization && !client_id && !client_secret && authorization.startsWith(\"Basic \")) {\n            try {\n              const encoded = authorization.replace(\"Basic \", \"\");\n              const decoded = new TextDecoder().decode(base64.decode(encoded));\n              if (!decoded.includes(\":\")) {\n                throw new APIError(\"UNAUTHORIZED\", {\n                  error_description: \"invalid authorization header format\",\n                  error: \"invalid_client\"\n                });\n              }\n              const [id, secret] = decoded.split(\":\");\n              if (!id || !secret) {\n                throw new APIError(\"UNAUTHORIZED\", {\n                  error_description: \"invalid authorization header format\",\n                  error: \"invalid_client\"\n                });\n              }\n              client_id = id;\n              client_secret = secret;\n            } catch (error) {\n              throw new APIError(\"UNAUTHORIZED\", {\n                error_description: \"invalid authorization header format\",\n                error: \"invalid_client\"\n              });\n            }\n          }\n          const now = Date.now();\n          const iat = Math.floor(now / 1e3);\n          const exp = iat + (opts.accessTokenExpiresIn ?? 3600);\n          const accessTokenExpiresAt = new Date(exp * 1e3);\n          const refreshTokenExpiresAt = new Date(\n            (iat + (opts.refreshTokenExpiresIn ?? 604800)) * 1e3\n          );\n          const {\n            grant_type,\n            code,\n            redirect_uri,\n            refresh_token,\n            code_verifier\n          } = body;\n          if (grant_type === \"refresh_token\") {\n            if (!refresh_token) {\n              throw new APIError(\"BAD_REQUEST\", {\n                error_description: \"refresh_token is required\",\n                error: \"invalid_request\"\n              });\n            }\n            const token = await ctx.context.adapter.findOne({\n              model: modelName.oauthAccessToken,\n              where: [\n                {\n                  field: \"refreshToken\",\n                  value: refresh_token.toString()\n                }\n              ]\n            });\n            if (!token) {\n              throw new APIError(\"UNAUTHORIZED\", {\n                error_description: \"invalid refresh token\",\n                error: \"invalid_grant\"\n              });\n            }\n            if (token.clientId !== client_id?.toString()) {\n              throw new APIError(\"UNAUTHORIZED\", {\n                error_description: \"invalid client_id\",\n                error: \"invalid_client\"\n              });\n            }\n            if (token.refreshTokenExpiresAt < /* @__PURE__ */ new Date()) {\n              throw new APIError(\"UNAUTHORIZED\", {\n                error_description: \"refresh token expired\",\n                error: \"invalid_grant\"\n              });\n            }\n            const accessToken2 = generateRandomString(32, \"a-z\", \"A-Z\");\n            const newRefreshToken = generateRandomString(32, \"a-z\", \"A-Z\");\n            await ctx.context.adapter.create({\n              model: modelName.oauthAccessToken,\n              data: {\n                accessToken: accessToken2,\n                refreshToken: newRefreshToken,\n                accessTokenExpiresAt,\n                refreshTokenExpiresAt,\n                clientId: client_id.toString(),\n                userId: token.userId,\n                scopes: token.scopes,\n                createdAt: new Date(iat * 1e3),\n                updatedAt: new Date(iat * 1e3)\n              }\n            });\n            return ctx.json({\n              access_token: accessToken2,\n              token_type: \"bearer\",\n              expires_in: opts.accessTokenExpiresIn,\n              refresh_token: newRefreshToken,\n              scope: token.scopes\n            });\n          }\n          if (!code) {\n            throw new APIError(\"BAD_REQUEST\", {\n              error_description: \"code is required\",\n              error: \"invalid_request\"\n            });\n          }\n          if (options.requirePKCE && !code_verifier) {\n            throw new APIError(\"BAD_REQUEST\", {\n              error_description: \"code verifier is missing\",\n              error: \"invalid_request\"\n            });\n          }\n          const verificationValue = await ctx.context.internalAdapter.findVerificationValue(\n            code.toString()\n          );\n          if (!verificationValue) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"invalid code\",\n              error: \"invalid_grant\"\n            });\n          }\n          if (verificationValue.expiresAt < /* @__PURE__ */ new Date()) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"code expired\",\n              error: \"invalid_grant\"\n            });\n          }\n          await ctx.context.internalAdapter.deleteVerificationValue(\n            verificationValue.id\n          );\n          if (!client_id) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"client_id is required\",\n              error: \"invalid_client\"\n            });\n          }\n          if (!grant_type) {\n            throw new APIError(\"BAD_REQUEST\", {\n              error_description: \"grant_type is required\",\n              error: \"invalid_request\"\n            });\n          }\n          if (grant_type !== \"authorization_code\") {\n            throw new APIError(\"BAD_REQUEST\", {\n              error_description: \"grant_type must be 'authorization_code'\",\n              error: \"unsupported_grant_type\"\n            });\n          }\n          if (!redirect_uri) {\n            throw new APIError(\"BAD_REQUEST\", {\n              error_description: \"redirect_uri is required\",\n              error: \"invalid_request\"\n            });\n          }\n          const client = await getClient(\n            client_id.toString(),\n            ctx.context.adapter,\n            trustedClients\n          );\n          if (!client) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"invalid client_id\",\n              error: \"invalid_client\"\n            });\n          }\n          if (client.disabled) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"client is disabled\",\n              error: \"invalid_client\"\n            });\n          }\n          const value = JSON.parse(\n            verificationValue.value\n          );\n          if (value.clientId !== client_id.toString()) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"invalid client_id\",\n              error: \"invalid_client\"\n            });\n          }\n          if (value.redirectURI !== redirect_uri.toString()) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"invalid redirect_uri\",\n              error: \"invalid_client\"\n            });\n          }\n          if (value.codeChallenge && !code_verifier) {\n            throw new APIError(\"BAD_REQUEST\", {\n              error_description: \"code verifier is missing\",\n              error: \"invalid_request\"\n            });\n          }\n          if (client.type === \"public\") {\n            if (!code_verifier) {\n              throw new APIError(\"BAD_REQUEST\", {\n                error_description: \"code verifier is required for public clients\",\n                error: \"invalid_request\"\n              });\n            }\n          } else {\n            if (!client.clientSecret || !client_secret) {\n              throw new APIError(\"UNAUTHORIZED\", {\n                error_description: \"client_secret is required for confidential clients\",\n                error: \"invalid_client\"\n              });\n            }\n            const isValidSecret = await verifyStoredClientSecret(\n              ctx,\n              client.clientSecret,\n              client_secret.toString()\n            );\n            if (!isValidSecret) {\n              throw new APIError(\"UNAUTHORIZED\", {\n                error_description: \"invalid client_secret\",\n                error: \"invalid_client\"\n              });\n            }\n          }\n          const challenge = value.codeChallengeMethod === \"plain\" ? code_verifier : await createHash(\"SHA-256\", \"base64urlnopad\").digest(\n            code_verifier\n          );\n          if (challenge !== value.codeChallenge) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"code verification failed\",\n              error: \"invalid_request\"\n            });\n          }\n          const requestedScopes = value.scope;\n          await ctx.context.internalAdapter.deleteVerificationValue(\n            verificationValue.id\n          );\n          const accessToken = generateRandomString(32, \"a-z\", \"A-Z\");\n          const refreshToken = generateRandomString(32, \"A-Z\", \"a-z\");\n          await ctx.context.adapter.create({\n            model: modelName.oauthAccessToken,\n            data: {\n              accessToken,\n              refreshToken,\n              accessTokenExpiresAt,\n              refreshTokenExpiresAt,\n              clientId: client_id.toString(),\n              userId: value.userId,\n              scopes: requestedScopes.join(\" \"),\n              createdAt: new Date(iat * 1e3),\n              updatedAt: new Date(iat * 1e3)\n            }\n          });\n          const user = await ctx.context.internalAdapter.findUserById(\n            value.userId\n          );\n          if (!user) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"user not found\",\n              error: \"invalid_grant\"\n            });\n          }\n          const profile = {\n            given_name: user.name.split(\" \")[0],\n            family_name: user.name.split(\" \")[1],\n            name: user.name,\n            profile: user.image,\n            updated_at: new Date(user.updatedAt).toISOString()\n          };\n          const email = {\n            email: user.email,\n            email_verified: user.emailVerified\n          };\n          const userClaims = {\n            ...requestedScopes.includes(\"profile\") ? profile : {},\n            ...requestedScopes.includes(\"email\") ? email : {}\n          };\n          const additionalUserClaims = options.getAdditionalUserInfoClaim ? await options.getAdditionalUserInfoClaim(\n            user,\n            requestedScopes,\n            client\n          ) : {};\n          const payload = {\n            sub: user.id,\n            aud: client_id.toString(),\n            iat: Date.now(),\n            auth_time: ctx.context.session ? new Date(ctx.context.session.session.createdAt).getTime() : void 0,\n            nonce: value.nonce,\n            acr: \"urn:mace:incommon:iap:silver\",\n            // default to silver - ⚠︎ this should be configurable and should be validated against the client's metadata\n            ...userClaims,\n            ...additionalUserClaims\n          };\n          const expirationTime = Math.floor(Date.now() / 1e3) + opts.accessTokenExpiresIn;\n          let idToken;\n          if (options.useJWTPlugin) {\n            const jwtPlugin = getJwtPlugin(ctx);\n            if (!jwtPlugin) {\n              ctx.context.logger.error(\n                \"OIDC: `useJWTPlugin` is enabled but the JWT plugin is not available. Make sure you have the JWT Plugin in your plugins array or set `useJWTPlugin` to false.\"\n              );\n              throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n                error_description: \"JWT plugin is not enabled\",\n                error: \"internal_server_error\"\n              });\n            }\n            idToken = await getJwtToken(\n              {\n                ...ctx,\n                context: {\n                  ...ctx.context,\n                  session: {\n                    session: {\n                      id: generateRandomString(32, \"a-z\", \"A-Z\"),\n                      createdAt: new Date(iat * 1e3),\n                      updatedAt: new Date(iat * 1e3),\n                      userId: user.id,\n                      expiresAt: accessTokenExpiresAt,\n                      token: accessToken,\n                      ipAddress: ctx.request?.headers.get(\"x-forwarded-for\")\n                    },\n                    user\n                  }\n                }\n              },\n              {\n                ...jwtPlugin.options,\n                jwt: {\n                  ...jwtPlugin.options?.jwt,\n                  getSubject: () => user.id,\n                  audience: client_id.toString(),\n                  issuer: ctx.context.options.baseURL,\n                  expirationTime,\n                  definePayload: () => payload\n                }\n              }\n            );\n          } else {\n            idToken = await new SignJWT(payload).setProtectedHeader({ alg: \"HS256\" }).setIssuedAt(iat).setExpirationTime(accessTokenExpiresAt).sign(new TextEncoder().encode(client.clientSecret));\n          }\n          return ctx.json(\n            {\n              access_token: accessToken,\n              token_type: \"Bearer\",\n              expires_in: opts.accessTokenExpiresIn,\n              refresh_token: requestedScopes.includes(\"offline_access\") ? refreshToken : void 0,\n              scope: requestedScopes.join(\" \"),\n              id_token: requestedScopes.includes(\"openid\") ? idToken : void 0\n            },\n            {\n              headers: {\n                \"Cache-Control\": \"no-store\",\n                Pragma: \"no-cache\"\n              }\n            }\n          );\n        }\n      ),\n      oAuth2userInfo: createAuthEndpoint(\n        \"/oauth2/userinfo\",\n        {\n          method: \"GET\",\n          metadata: {\n            isAction: false,\n            openapi: {\n              description: \"Get OAuth2 user information\",\n              responses: {\n                \"200\": {\n                  description: \"User information retrieved successfully\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          sub: {\n                            type: \"string\",\n                            description: \"Subject identifier (user ID)\"\n                          },\n                          email: {\n                            type: \"string\",\n                            format: \"email\",\n                            nullable: true,\n                            description: \"User's email address, included if 'email' scope is granted\"\n                          },\n                          name: {\n                            type: \"string\",\n                            nullable: true,\n                            description: \"User's full name, included if 'profile' scope is granted\"\n                          },\n                          picture: {\n                            type: \"string\",\n                            format: \"uri\",\n                            nullable: true,\n                            description: \"User's profile picture URL, included if 'profile' scope is granted\"\n                          },\n                          given_name: {\n                            type: \"string\",\n                            nullable: true,\n                            description: \"User's given name, included if 'profile' scope is granted\"\n                          },\n                          family_name: {\n                            type: \"string\",\n                            nullable: true,\n                            description: \"User's family name, included if 'profile' scope is granted\"\n                          },\n                          email_verified: {\n                            type: \"boolean\",\n                            nullable: true,\n                            description: \"Whether the email is verified, included if 'email' scope is granted\"\n                          }\n                        },\n                        required: [\"sub\"]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          if (!ctx.request) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"request not found\",\n              error: \"invalid_request\"\n            });\n          }\n          const authorization = ctx.request.headers.get(\"authorization\");\n          if (!authorization) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"authorization header not found\",\n              error: \"invalid_request\"\n            });\n          }\n          const token = authorization.replace(\"Bearer \", \"\");\n          const accessToken = await ctx.context.adapter.findOne({\n            model: modelName.oauthAccessToken,\n            where: [\n              {\n                field: \"accessToken\",\n                value: token\n              }\n            ]\n          });\n          if (!accessToken) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"invalid access token\",\n              error: \"invalid_token\"\n            });\n          }\n          if (accessToken.accessTokenExpiresAt < /* @__PURE__ */ new Date()) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"The Access Token expired\",\n              error: \"invalid_token\"\n            });\n          }\n          const client = await getClient(\n            accessToken.clientId,\n            ctx.context.adapter,\n            trustedClients\n          );\n          if (!client) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"client not found\",\n              error: \"invalid_token\"\n            });\n          }\n          const user = await ctx.context.internalAdapter.findUserById(\n            accessToken.userId\n          );\n          if (!user) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"user not found\",\n              error: \"invalid_token\"\n            });\n          }\n          const requestedScopes = accessToken.scopes.split(\" \");\n          const baseUserClaims = {\n            sub: user.id,\n            email: requestedScopes.includes(\"email\") ? user.email : void 0,\n            name: requestedScopes.includes(\"profile\") ? user.name : void 0,\n            picture: requestedScopes.includes(\"profile\") ? user.image : void 0,\n            given_name: requestedScopes.includes(\"profile\") ? user.name.split(\" \")[0] : void 0,\n            family_name: requestedScopes.includes(\"profile\") ? user.name.split(\" \")[1] : void 0,\n            email_verified: requestedScopes.includes(\"email\") ? user.emailVerified : void 0\n          };\n          const userClaims = options.getAdditionalUserInfoClaim ? await options.getAdditionalUserInfoClaim(\n            user,\n            requestedScopes,\n            client\n          ) : baseUserClaims;\n          return ctx.json({\n            ...baseUserClaims,\n            ...userClaims\n          });\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/oauth2/register`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.registerOAuthApplication`\n       *\n       * **client:**\n       * `authClient.oauth2.register`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/oidc-provider#api-method-oauth2-register)\n       */\n      registerOAuthApplication: createAuthEndpoint(\n        \"/oauth2/register\",\n        {\n          method: \"POST\",\n          body: z.object({\n            redirect_uris: z.array(z.string()).meta({\n              description: 'A list of redirect URIs. Eg: [\"https://client.example.com/callback\"]'\n            }),\n            token_endpoint_auth_method: z.enum([\"none\", \"client_secret_basic\", \"client_secret_post\"]).meta({\n              description: 'The authentication method for the token endpoint. Eg: \"client_secret_basic\"'\n            }).default(\"client_secret_basic\").optional(),\n            grant_types: z.array(\n              z.enum([\n                \"authorization_code\",\n                \"implicit\",\n                \"password\",\n                \"client_credentials\",\n                \"refresh_token\",\n                \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n                \"urn:ietf:params:oauth:grant-type:saml2-bearer\"\n              ])\n            ).meta({\n              description: 'The grant types supported by the application. Eg: [\"authorization_code\"]'\n            }).default([\"authorization_code\"]).optional(),\n            response_types: z.array(z.enum([\"code\", \"token\"])).meta({\n              description: 'The response types supported by the application. Eg: [\"code\"]'\n            }).default([\"code\"]).optional(),\n            client_name: z.string().meta({\n              description: 'The name of the application. Eg: \"My App\"'\n            }).optional(),\n            client_uri: z.string().meta({\n              description: 'The URI of the application. Eg: \"https://client.example.com\"'\n            }).optional(),\n            logo_uri: z.string().meta({\n              description: 'The URI of the application logo. Eg: \"https://client.example.com/logo.png\"'\n            }).optional(),\n            scope: z.string().meta({\n              description: 'The scopes supported by the application. Separated by spaces. Eg: \"profile email\"'\n            }).optional(),\n            contacts: z.array(z.string()).meta({\n              description: 'The contact information for the application. Eg: [\"admin@example.com\"]'\n            }).optional(),\n            tos_uri: z.string().meta({\n              description: 'The URI of the application terms of service. Eg: \"https://client.example.com/tos\"'\n            }).optional(),\n            policy_uri: z.string().meta({\n              description: 'The URI of the application privacy policy. Eg: \"https://client.example.com/policy\"'\n            }).optional(),\n            jwks_uri: z.string().meta({\n              description: 'The URI of the application JWKS. Eg: \"https://client.example.com/jwks\"'\n            }).optional(),\n            jwks: z.record(z.any(), z.any()).meta({\n              description: 'The JWKS of the application. Eg: {\"keys\": [{\"kty\": \"RSA\", \"alg\": \"RS256\", \"use\": \"sig\", \"n\": \"...\", \"e\": \"...\"}]}'\n            }).optional(),\n            metadata: z.record(z.any(), z.any()).meta({\n              description: 'The metadata of the application. Eg: {\"key\": \"value\"}'\n            }).optional(),\n            software_id: z.string().meta({\n              description: 'The software ID of the application. Eg: \"my-software\"'\n            }).optional(),\n            software_version: z.string().meta({\n              description: 'The software version of the application. Eg: \"1.0.0\"'\n            }).optional(),\n            software_statement: z.string().meta({\n              description: \"The software statement of the application.\"\n            }).optional()\n          }),\n          metadata: {\n            openapi: {\n              description: \"Register an OAuth2 application\",\n              responses: {\n                \"200\": {\n                  description: \"OAuth2 application registered successfully\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          name: {\n                            type: \"string\",\n                            description: \"Name of the OAuth2 application\"\n                          },\n                          icon: {\n                            type: \"string\",\n                            nullable: true,\n                            description: \"Icon URL for the application\"\n                          },\n                          metadata: {\n                            type: \"object\",\n                            additionalProperties: true,\n                            nullable: true,\n                            description: \"Additional metadata for the application\"\n                          },\n                          clientId: {\n                            type: \"string\",\n                            description: \"Unique identifier for the client\"\n                          },\n                          clientSecret: {\n                            type: \"string\",\n                            description: \"Secret key for the client\"\n                          },\n                          redirectURLs: {\n                            type: \"array\",\n                            items: { type: \"string\", format: \"uri\" },\n                            description: \"List of allowed redirect URLs\"\n                          },\n                          type: {\n                            type: \"string\",\n                            description: \"Type of the client\",\n                            enum: [\"web\"]\n                          },\n                          authenticationScheme: {\n                            type: \"string\",\n                            description: \"Authentication scheme used by the client\",\n                            enum: [\"client_secret\"]\n                          },\n                          disabled: {\n                            type: \"boolean\",\n                            description: \"Whether the client is disabled\",\n                            enum: [false]\n                          },\n                          userId: {\n                            type: \"string\",\n                            nullable: true,\n                            description: \"ID of the user who registered the client, null if registered anonymously\"\n                          },\n                          createdAt: {\n                            type: \"string\",\n                            format: \"date-time\",\n                            description: \"Creation timestamp\"\n                          },\n                          updatedAt: {\n                            type: \"string\",\n                            format: \"date-time\",\n                            description: \"Last update timestamp\"\n                          }\n                        },\n                        required: [\n                          \"name\",\n                          \"clientId\",\n                          \"clientSecret\",\n                          \"redirectURLs\",\n                          \"type\",\n                          \"authenticationScheme\",\n                          \"disabled\",\n                          \"createdAt\",\n                          \"updatedAt\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const body = ctx.body;\n          const session = await getSessionFromCtx(ctx);\n          if (!session && !options.allowDynamicClientRegistration) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error: \"invalid_token\",\n              error_description: \"Authentication required for client registration\"\n            });\n          }\n          if ((!body.grant_types || body.grant_types.includes(\"authorization_code\") || body.grant_types.includes(\"implicit\")) && (!body.redirect_uris || body.redirect_uris.length === 0)) {\n            throw new APIError(\"BAD_REQUEST\", {\n              error: \"invalid_redirect_uri\",\n              error_description: \"Redirect URIs are required for authorization_code and implicit grant types\"\n            });\n          }\n          if (body.grant_types && body.response_types) {\n            if (body.grant_types.includes(\"authorization_code\") && !body.response_types.includes(\"code\")) {\n              throw new APIError(\"BAD_REQUEST\", {\n                error: \"invalid_client_metadata\",\n                error_description: \"When 'authorization_code' grant type is used, 'code' response type must be included\"\n              });\n            }\n            if (body.grant_types.includes(\"implicit\") && !body.response_types.includes(\"token\")) {\n              throw new APIError(\"BAD_REQUEST\", {\n                error: \"invalid_client_metadata\",\n                error_description: \"When 'implicit' grant type is used, 'token' response type must be included\"\n              });\n            }\n          }\n          const clientId = options.generateClientId?.() || generateRandomString(32, \"a-z\", \"A-Z\");\n          const clientSecret = options.generateClientSecret?.() || generateRandomString(32, \"a-z\", \"A-Z\");\n          const storedClientSecret = await storeClientSecret(ctx, clientSecret);\n          const client = await ctx.context.adapter.create({\n            model: modelName.oauthClient,\n            data: {\n              name: body.client_name,\n              icon: body.logo_uri,\n              metadata: body.metadata ? JSON.stringify(body.metadata) : null,\n              clientId,\n              clientSecret: storedClientSecret,\n              redirectURLs: body.redirect_uris.join(\",\"),\n              type: \"web\",\n              authenticationScheme: body.token_endpoint_auth_method || \"client_secret_basic\",\n              disabled: false,\n              userId: session?.session.userId,\n              createdAt: /* @__PURE__ */ new Date(),\n              updatedAt: /* @__PURE__ */ new Date()\n            }\n          });\n          return ctx.json(\n            {\n              client_id: clientId,\n              ...client.type !== \"public\" ? {\n                client_secret: clientSecret,\n                client_secret_expires_at: 0\n                // 0 means it doesn't expire\n              } : {},\n              client_id_issued_at: Math.floor(Date.now() / 1e3),\n              client_secret_expires_at: 0,\n              // 0 means it doesn't expire\n              redirect_uris: body.redirect_uris,\n              token_endpoint_auth_method: body.token_endpoint_auth_method || \"client_secret_basic\",\n              grant_types: body.grant_types || [\"authorization_code\"],\n              response_types: body.response_types || [\"code\"],\n              client_name: body.client_name,\n              client_uri: body.client_uri,\n              logo_uri: body.logo_uri,\n              scope: body.scope,\n              contacts: body.contacts,\n              tos_uri: body.tos_uri,\n              policy_uri: body.policy_uri,\n              jwks_uri: body.jwks_uri,\n              jwks: body.jwks,\n              software_id: body.software_id,\n              software_version: body.software_version,\n              software_statement: body.software_statement,\n              metadata: body.metadata\n            },\n            {\n              status: 201,\n              headers: {\n                \"Cache-Control\": \"no-store\",\n                Pragma: \"no-cache\"\n              }\n            }\n          );\n        }\n      ),\n      getOAuthClient: createAuthEndpoint(\n        \"/oauth2/client/:id\",\n        {\n          method: \"GET\",\n          use: [sessionMiddleware],\n          metadata: {\n            openapi: {\n              description: \"Get OAuth2 client details\",\n              responses: {\n                \"200\": {\n                  description: \"OAuth2 client retrieved successfully\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          clientId: {\n                            type: \"string\",\n                            description: \"Unique identifier for the client\"\n                          },\n                          name: {\n                            type: \"string\",\n                            description: \"Name of the OAuth2 application\"\n                          },\n                          icon: {\n                            type: \"string\",\n                            nullable: true,\n                            description: \"Icon URL for the application\"\n                          }\n                        },\n                        required: [\"clientId\", \"name\"]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const client = await getClient(\n            ctx.params.id,\n            ctx.context.adapter,\n            trustedClients\n          );\n          if (!client) {\n            throw new APIError(\"NOT_FOUND\", {\n              error_description: \"client not found\",\n              error: \"not_found\"\n            });\n          }\n          return ctx.json({\n            clientId: client.clientId,\n            name: client.name,\n            icon: client.icon\n          });\n        }\n      )\n    },\n    schema: mergeSchema(schema, options?.schema)\n  };\n};\n\nexport { getMetadata as a, getClient as g, oidcProvider as o, schema as s };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9191, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/shared/better-auth.BpA03GIs.mjs"],"sourcesContent":["const deviceAuthorizationClient = () => {\n  return {\n    id: \"device-authorization\",\n    $InferServerPlugin: {},\n    pathMethods: {\n      \"/device/code\": \"POST\",\n      \"/device/token\": \"POST\",\n      \"/device\": \"GET\",\n      \"/device/approve\": \"POST\",\n      \"/device/deny\": \"POST\"\n    }\n  };\n};\n\nexport { deviceAuthorizationClient as d };\n"],"names":[],"mappings":";;;;AAAA,MAAM,4BAA4B;IAChC,OAAO;QACL,IAAI;QACJ,oBAAoB,CAAC;QACrB,aAAa;YACX,gBAAgB;YAChB,iBAAiB;YACjB,WAAW;YACX,mBAAmB;YACnB,gBAAgB;QAClB;IACF;AACF","ignoreList":[0],"debugId":null}}]
}