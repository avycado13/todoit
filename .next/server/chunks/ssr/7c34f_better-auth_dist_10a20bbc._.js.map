{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/crypto/index.mjs"],"sourcesContent":["import { createHash } from '@better-auth/utils/hash';\nimport { xchacha20poly1305 } from '@noble/ciphers/chacha.js';\nimport { utf8ToBytes, managedNonce, bytesToHex, hexToBytes as hexToBytes$1 } from '@noble/ciphers/utils.js';\nimport { base64 } from '@better-auth/utils/base64';\nimport { SignJWT } from 'jose';\nimport { scryptAsync } from '@noble/hashes/scrypt.js';\nimport { hex } from '@better-auth/utils/hex';\nimport { hexToBytes } from '@noble/hashes/utils.js';\nimport { B as BetterAuthError } from '../shared/better-auth.DdzSJf-n.mjs';\nexport { g as generateRandomString } from '../shared/better-auth.B4Qoxdgc.mjs';\nimport '@better-auth/utils/random';\n\nasync function signJWT(payload, secret, expiresIn = 3600) {\n  const jwt = await new SignJWT(payload).setProtectedHeader({ alg: \"HS256\" }).setIssuedAt().setExpirationTime(Math.floor(Date.now() / 1e3) + expiresIn).sign(new TextEncoder().encode(secret));\n  return jwt;\n}\n\nfunction constantTimeEqual(a, b) {\n  const aBuffer = new Uint8Array(a);\n  const bBuffer = new Uint8Array(b);\n  let c = aBuffer.length ^ bBuffer.length;\n  const length = Math.max(aBuffer.length, bBuffer.length);\n  for (let i = 0; i < length; i++) {\n    c |= (i < aBuffer.length ? aBuffer[i] : 0) ^ (i < bBuffer.length ? bBuffer[i] : 0);\n  }\n  return c === 0;\n}\n\nasync function hashToBase64(data) {\n  const buffer = await createHash(\"SHA-256\").digest(data);\n  return base64.encode(buffer);\n}\nasync function compareHash(data, hash) {\n  const buffer = await createHash(\"SHA-256\").digest(\n    typeof data === \"string\" ? new TextEncoder().encode(data) : data\n  );\n  const hashBuffer = base64.decode(hash);\n  return constantTimeEqual(buffer, hashBuffer);\n}\n\nconst config = {\n  N: 16384,\n  r: 16,\n  p: 1,\n  dkLen: 64\n};\nasync function generateKey(password, salt) {\n  return await scryptAsync(password.normalize(\"NFKC\"), salt, {\n    N: config.N,\n    p: config.p,\n    r: config.r,\n    dkLen: config.dkLen,\n    maxmem: 128 * config.N * config.r * 2\n  });\n}\nconst hashPassword = async (password) => {\n  const salt = hex.encode(crypto.getRandomValues(new Uint8Array(16)));\n  const key = await generateKey(password, salt);\n  return `${salt}:${hex.encode(key)}`;\n};\nconst verifyPassword = async ({\n  hash,\n  password\n}) => {\n  const [salt, key] = hash.split(\":\");\n  if (!salt || !key) {\n    throw new BetterAuthError(\"Invalid password hash\");\n  }\n  const targetKey = await generateKey(password, salt);\n  return constantTimeEqual(targetKey, hexToBytes(key));\n};\n\nconst symmetricEncrypt = async ({\n  key,\n  data\n}) => {\n  const keyAsBytes = await createHash(\"SHA-256\").digest(key);\n  const dataAsBytes = utf8ToBytes(data);\n  const chacha = managedNonce(xchacha20poly1305)(new Uint8Array(keyAsBytes));\n  return bytesToHex(chacha.encrypt(dataAsBytes));\n};\nconst symmetricDecrypt = async ({\n  key,\n  data\n}) => {\n  const keyAsBytes = await createHash(\"SHA-256\").digest(key);\n  const dataAsBytes = hexToBytes$1(data);\n  const chacha = managedNonce(xchacha20poly1305)(new Uint8Array(keyAsBytes));\n  return new TextDecoder().decode(chacha.decrypt(dataAsBytes));\n};\n\nexport { compareHash, constantTimeEqual, hashPassword, hashToBase64, signJWT, symmetricDecrypt, symmetricEncrypt, verifyPassword };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAEA,eAAe,QAAQ,OAAO,EAAE,MAAM,EAAE,YAAY,IAAI;IACtD,MAAM,MAAM,MAAM,IAAI,iNAAO,CAAC,SAAS,kBAAkB,CAAC;QAAE,KAAK;IAAQ,GAAG,WAAW,GAAG,iBAAiB,CAAC,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK,OAAO,WAAW,IAAI,CAAC,IAAI,cAAc,MAAM,CAAC;IACpL,OAAO;AACT;AAEA,SAAS,kBAAkB,CAAC,EAAE,CAAC;IAC7B,MAAM,UAAU,IAAI,WAAW;IAC/B,MAAM,UAAU,IAAI,WAAW;IAC/B,IAAI,IAAI,QAAQ,MAAM,GAAG,QAAQ,MAAM;IACvC,MAAM,SAAS,KAAK,GAAG,CAAC,QAAQ,MAAM,EAAE,QAAQ,MAAM;IACtD,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,IAAK;QAC/B,KAAK,CAAC,IAAI,QAAQ,MAAM,GAAG,OAAO,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,QAAQ,MAAM,GAAG,OAAO,CAAC,EAAE,GAAG,CAAC;IACnF;IACA,OAAO,MAAM;AACf;AAEA,eAAe,aAAa,IAAI;IAC9B,MAAM,SAAS,MAAM,IAAA,8OAAU,EAAC,WAAW,MAAM,CAAC;IAClD,OAAO,4OAAM,CAAC,MAAM,CAAC;AACvB;AACA,eAAe,YAAY,IAAI,EAAE,IAAI;IACnC,MAAM,SAAS,MAAM,IAAA,8OAAU,EAAC,WAAW,MAAM,CAC/C,OAAO,SAAS,WAAW,IAAI,cAAc,MAAM,CAAC,QAAQ;IAE9D,MAAM,aAAa,4OAAM,CAAC,MAAM,CAAC;IACjC,OAAO,kBAAkB,QAAQ;AACnC;AAEA,MAAM,SAAS;IACb,GAAG;IACH,GAAG;IACH,GAAG;IACH,OAAO;AACT;AACA,eAAe,YAAY,QAAQ,EAAE,IAAI;IACvC,OAAO,MAAM,IAAA,wNAAW,EAAC,SAAS,SAAS,CAAC,SAAS,MAAM;QACzD,GAAG,OAAO,CAAC;QACX,GAAG,OAAO,CAAC;QACX,GAAG,OAAO,CAAC;QACX,OAAO,OAAO,KAAK;QACnB,QAAQ,MAAM,OAAO,CAAC,GAAG,OAAO,CAAC,GAAG;IACtC;AACF;AACA,MAAM,eAAe,OAAO;IAC1B,MAAM,OAAO,sOAAG,CAAC,MAAM,CAAC,OAAO,eAAe,CAAC,IAAI,WAAW;IAC9D,MAAM,MAAM,MAAM,YAAY,UAAU;IACxC,OAAO,GAAG,KAAK,CAAC,EAAE,sOAAG,CAAC,MAAM,CAAC,MAAM;AACrC;AACA,MAAM,iBAAiB,OAAO,EAC5B,IAAI,EACJ,QAAQ,EACT;IACC,MAAM,CAAC,MAAM,IAAI,GAAG,KAAK,KAAK,CAAC;IAC/B,IAAI,CAAC,QAAQ,CAAC,KAAK;QACjB,MAAM,IAAI,yYAAe,CAAC;IAC5B;IACA,MAAM,YAAY,MAAM,YAAY,UAAU;IAC9C,OAAO,kBAAkB,WAAW,IAAA,sNAAU,EAAC;AACjD;AAEA,MAAM,mBAAmB,OAAO,EAC9B,GAAG,EACH,IAAI,EACL;IACC,MAAM,aAAa,MAAM,IAAA,8OAAU,EAAC,WAAW,MAAM,CAAC;IACtD,MAAM,cAAc,IAAA,yNAAW,EAAC;IAChC,MAAM,SAAS,IAAA,0NAAY,EAAC,gOAAiB,EAAE,IAAI,WAAW;IAC9D,OAAO,IAAA,wNAAU,EAAC,OAAO,OAAO,CAAC;AACnC;AACA,MAAM,mBAAmB,OAAO,EAC9B,GAAG,EACH,IAAI,EACL;IACC,MAAM,aAAa,MAAM,IAAA,8OAAU,EAAC,WAAW,MAAM,CAAC;IACtD,MAAM,cAAc,IAAA,wNAAY,EAAC;IACjC,MAAM,SAAS,IAAA,0NAAY,EAAC,gOAAiB,EAAE,IAAI,WAAW;IAC9D,OAAO,IAAI,cAAc,MAAM,CAAC,OAAO,OAAO,CAAC;AACjD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/api/index.mjs"],"sourcesContent":["import { APIError, createRouter } from 'better-call';\nexport { APIError } from 'better-call';\nimport { k as createEmailVerificationToken, w as wildcardMatch, u as updateUser, t as toAuthEndpoints, l as originCheckMiddleware, m as error, n as ok, q as accountInfo, x as getAccessToken, y as refreshToken, z as unlinkAccount, A as deleteUserCallback, B as listUserAccounts, C as linkSocialAccount, D as requestPasswordResetCallback, E as requestPasswordReset, F as forgetPasswordCallback, G as deleteUser, I as setPassword, J as changePassword, K as changeEmail, L as sendVerificationEmail, M as verifyEmail, N as resetPassword, O as forgetPassword, P as signInEmail, Q as signOut, R as callbackOAuth, S as signInSocial } from '../shared/better-auth.C3-_8m-g.mjs';\nexport { o as originCheck, T as sendVerificationEmailFn } from '../shared/better-auth.C3-_8m-g.mjs';\nimport { a as createAuthEndpoint, B as BASE_ERROR_CODES, l as listSessions, b as getSession, r as revokeOtherSessions, d as revokeSessions, e as revokeSession } from '../shared/better-auth.C5vDERgF.mjs';\nexport { c as createAuthMiddleware, f as freshSessionMiddleware, g as getSessionFromCtx, h as getSessionQuerySchema, o as optionsMiddleware, j as requestOnlySessionMiddleware, i as sensitiveSessionMiddleware, s as sessionMiddleware } from '../shared/better-auth.C5vDERgF.mjs';\nimport * as z from 'zod';\nimport { s as setSessionCookie } from '../shared/better-auth.DiMXeqeq.mjs';\nimport { a as isDevelopment } from '../shared/better-auth.CiuwFiHM.mjs';\nimport '@better-auth/core/db';\nimport { d as parseUserInput } from '../shared/better-auth.BLnvK9hk.mjs';\nimport { a as logger } from '../shared/better-auth.DgGir396.mjs';\nimport '@better-auth/utils/random';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha.js';\nimport '@noble/ciphers/utils.js';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt.js';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils.js';\nimport '../shared/better-auth.B4Qoxdgc.mjs';\nimport 'kysely';\nimport { s as safeJSONParse } from '../shared/better-auth.BTrSrKsi.mjs';\nimport { g as getIp } from '../shared/better-auth.BQOp-6ij.mjs';\nimport '../shared/better-auth.CW6D9eSx.mjs';\nimport '../crypto/index.mjs';\nimport '../shared/better-auth.DdzSJf-n.mjs';\nimport '@better-fetch/fetch';\nimport '../shared/better-auth.BRFtaovt.mjs';\nimport 'jose/errors';\nimport '../shared/better-auth.BUPPRXfK.mjs';\nimport '@better-auth/utils/hmac';\nimport '@better-auth/utils/binary';\nimport 'defu';\nimport '../shared/better-auth.D2xndZ2p.mjs';\n\nconst signUpEmail = () => createAuthEndpoint(\n  \"/sign-up/email\",\n  {\n    method: \"POST\",\n    body: z.record(z.string(), z.any()),\n    metadata: {\n      $Infer: {\n        body: {}\n      },\n      openapi: {\n        description: \"Sign up a user using email and password\",\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  name: {\n                    type: \"string\",\n                    description: \"The name of the user\"\n                  },\n                  email: {\n                    type: \"string\",\n                    description: \"The email of the user\"\n                  },\n                  password: {\n                    type: \"string\",\n                    description: \"The password of the user\"\n                  },\n                  image: {\n                    type: \"string\",\n                    description: \"The profile image URL of the user\"\n                  },\n                  callbackURL: {\n                    type: \"string\",\n                    description: \"The URL to use for email verification callback\"\n                  },\n                  rememberMe: {\n                    type: \"boolean\",\n                    description: \"If this is false, the session will not be remembered. Default is `true`.\"\n                  }\n                },\n                required: [\"name\", \"email\", \"password\"]\n              }\n            }\n          }\n        },\n        responses: {\n          \"200\": {\n            description: \"Successfully created user\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    token: {\n                      type: \"string\",\n                      nullable: true,\n                      description: \"Authentication token for the session\"\n                    },\n                    user: {\n                      type: \"object\",\n                      properties: {\n                        id: {\n                          type: \"string\",\n                          description: \"The unique identifier of the user\"\n                        },\n                        email: {\n                          type: \"string\",\n                          format: \"email\",\n                          description: \"The email address of the user\"\n                        },\n                        name: {\n                          type: \"string\",\n                          description: \"The name of the user\"\n                        },\n                        image: {\n                          type: \"string\",\n                          format: \"uri\",\n                          nullable: true,\n                          description: \"The profile image URL of the user\"\n                        },\n                        emailVerified: {\n                          type: \"boolean\",\n                          description: \"Whether the email has been verified\"\n                        },\n                        createdAt: {\n                          type: \"string\",\n                          format: \"date-time\",\n                          description: \"When the user was created\"\n                        },\n                        updatedAt: {\n                          type: \"string\",\n                          format: \"date-time\",\n                          description: \"When the user was last updated\"\n                        }\n                      },\n                      required: [\n                        \"id\",\n                        \"email\",\n                        \"name\",\n                        \"emailVerified\",\n                        \"createdAt\",\n                        \"updatedAt\"\n                      ]\n                    }\n                  },\n                  required: [\"user\"]\n                  // token is optional\n                }\n              }\n            }\n          },\n          \"422\": {\n            description: \"Unprocessable Entity. User already exists or failed to create user.\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    message: {\n                      type: \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options.emailAndPassword?.enabled || ctx.context.options.emailAndPassword?.disableSignUp) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Email and password sign up is not enabled\"\n      });\n    }\n    const body = ctx.body;\n    const { name, email, password, image, callbackURL, rememberMe, ...rest } = body;\n    const isValidEmail = z.email().safeParse(email);\n    if (!isValidEmail.success) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.INVALID_EMAIL\n      });\n    }\n    const minPasswordLength = ctx.context.password.config.minPasswordLength;\n    if (password.length < minPasswordLength) {\n      ctx.context.logger.error(\"Password is too short\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_SHORT\n      });\n    }\n    const maxPasswordLength = ctx.context.password.config.maxPasswordLength;\n    if (password.length > maxPasswordLength) {\n      ctx.context.logger.error(\"Password is too long\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_LONG\n      });\n    }\n    const dbUser = await ctx.context.internalAdapter.findUserByEmail(email);\n    if (dbUser?.user) {\n      ctx.context.logger.info(`Sign-up attempt for existing email: ${email}`);\n      throw new APIError(\"UNPROCESSABLE_ENTITY\", {\n        message: BASE_ERROR_CODES.USER_ALREADY_EXISTS_USE_ANOTHER_EMAIL\n      });\n    }\n    const hash = await ctx.context.password.hash(password);\n    let createdUser;\n    try {\n      const data = parseUserInput(ctx.context.options, rest, \"create\");\n      createdUser = await ctx.context.internalAdapter.createUser(\n        {\n          email: email.toLowerCase(),\n          name,\n          image,\n          ...data,\n          emailVerified: false\n        },\n        ctx\n      );\n      if (!createdUser) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: BASE_ERROR_CODES.FAILED_TO_CREATE_USER\n        });\n      }\n    } catch (e) {\n      if (isDevelopment) {\n        ctx.context.logger.error(\"Failed to create user\", e);\n      }\n      if (e instanceof APIError) {\n        throw e;\n      }\n      ctx.context.logger?.error(\"Failed to create user\", e);\n      throw new APIError(\"UNPROCESSABLE_ENTITY\", {\n        message: BASE_ERROR_CODES.FAILED_TO_CREATE_USER,\n        details: e\n      });\n    }\n    if (!createdUser) {\n      throw new APIError(\"UNPROCESSABLE_ENTITY\", {\n        message: BASE_ERROR_CODES.FAILED_TO_CREATE_USER\n      });\n    }\n    await ctx.context.internalAdapter.linkAccount(\n      {\n        userId: createdUser.id,\n        providerId: \"credential\",\n        accountId: createdUser.id,\n        password: hash\n      },\n      ctx\n    );\n    if (ctx.context.options.emailVerification?.sendOnSignUp || ctx.context.options.emailAndPassword.requireEmailVerification) {\n      const token = await createEmailVerificationToken(\n        ctx.context.secret,\n        createdUser.email,\n        void 0,\n        ctx.context.options.emailVerification?.expiresIn\n      );\n      const url = `${ctx.context.baseURL}/verify-email?token=${token}&callbackURL=${body.callbackURL || \"/\"}`;\n      const args = ctx.request ? [\n        {\n          user: createdUser,\n          url,\n          token\n        },\n        ctx.request\n      ] : [\n        {\n          user: createdUser,\n          url,\n          token\n        }\n      ];\n      await ctx.context.options.emailVerification?.sendVerificationEmail?.(\n        ...args\n      );\n    }\n    if (ctx.context.options.emailAndPassword.autoSignIn === false || ctx.context.options.emailAndPassword.requireEmailVerification) {\n      return ctx.json({\n        token: null,\n        user: {\n          id: createdUser.id,\n          email: createdUser.email,\n          name: createdUser.name,\n          image: createdUser.image,\n          emailVerified: createdUser.emailVerified,\n          createdAt: createdUser.createdAt,\n          updatedAt: createdUser.updatedAt\n        }\n      });\n    }\n    const session = await ctx.context.internalAdapter.createSession(\n      createdUser.id,\n      ctx,\n      rememberMe === false\n    );\n    if (!session) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.FAILED_TO_CREATE_SESSION\n      });\n    }\n    await setSessionCookie(\n      ctx,\n      {\n        session,\n        user: createdUser\n      },\n      rememberMe === false\n    );\n    return ctx.json({\n      token: session.token,\n      user: {\n        id: createdUser.id,\n        email: createdUser.email,\n        name: createdUser.name,\n        image: createdUser.image,\n        emailVerified: createdUser.emailVerified,\n        createdAt: createdUser.createdAt,\n        updatedAt: createdUser.updatedAt\n      }\n    });\n  }\n);\n\nfunction shouldRateLimit(max, window, rateLimitData) {\n  const now = Date.now();\n  const windowInMs = window * 1e3;\n  const timeSinceLastRequest = now - rateLimitData.lastRequest;\n  return timeSinceLastRequest < windowInMs && rateLimitData.count >= max;\n}\nfunction rateLimitResponse(retryAfter) {\n  return new Response(\n    JSON.stringify({\n      message: \"Too many requests. Please try again later.\"\n    }),\n    {\n      status: 429,\n      statusText: \"Too Many Requests\",\n      headers: {\n        \"X-Retry-After\": retryAfter.toString()\n      }\n    }\n  );\n}\nfunction getRetryAfter(lastRequest, window) {\n  const now = Date.now();\n  const windowInMs = window * 1e3;\n  return Math.ceil((lastRequest + windowInMs - now) / 1e3);\n}\nfunction createDBStorage(ctx) {\n  const model = \"rateLimit\";\n  const db = ctx.adapter;\n  return {\n    get: async (key) => {\n      const res = await db.findMany({\n        model,\n        where: [{ field: \"key\", value: key }]\n      });\n      const data = res[0];\n      if (typeof data?.lastRequest === \"bigint\") {\n        data.lastRequest = Number(data.lastRequest);\n      }\n      return data;\n    },\n    set: async (key, value, _update) => {\n      try {\n        if (_update) {\n          await db.updateMany({\n            model,\n            where: [{ field: \"key\", value: key }],\n            update: {\n              count: value.count,\n              lastRequest: value.lastRequest\n            }\n          });\n        } else {\n          await db.create({\n            model,\n            data: {\n              key,\n              count: value.count,\n              lastRequest: value.lastRequest\n            }\n          });\n        }\n      } catch (e) {\n        ctx.logger.error(\"Error setting rate limit\", e);\n      }\n    }\n  };\n}\nconst memory = /* @__PURE__ */ new Map();\nfunction getRateLimitStorage(ctx, rateLimitSettings) {\n  if (ctx.options.rateLimit?.customStorage) {\n    return ctx.options.rateLimit.customStorage;\n  }\n  const storage = ctx.rateLimit.storage;\n  if (storage === \"secondary-storage\") {\n    return {\n      get: async (key) => {\n        const data = await ctx.options.secondaryStorage?.get(key);\n        return data ? safeJSONParse(data) : void 0;\n      },\n      set: async (key, value, _update) => {\n        const ttl = rateLimitSettings?.window ?? ctx.options.rateLimit?.window ?? 10;\n        await ctx.options.secondaryStorage?.set?.(\n          key,\n          JSON.stringify(value),\n          ttl\n        );\n      }\n    };\n  } else if (storage === \"memory\") {\n    return {\n      async get(key) {\n        return memory.get(key);\n      },\n      async set(key, value, _update) {\n        memory.set(key, value);\n      }\n    };\n  }\n  return createDBStorage(ctx);\n}\nasync function onRequestRateLimit(req, ctx) {\n  if (!ctx.rateLimit.enabled) {\n    return;\n  }\n  const path = new URL(req.url).pathname.replace(\n    ctx.options.basePath || \"/api/auth\",\n    \"\"\n  );\n  let window = ctx.rateLimit.window;\n  let max = ctx.rateLimit.max;\n  const ip = getIp(req, ctx.options);\n  if (!ip) {\n    return;\n  }\n  const key = ip + path;\n  const specialRules = getDefaultSpecialRules();\n  const specialRule = specialRules.find((rule) => rule.pathMatcher(path));\n  if (specialRule) {\n    window = specialRule.window;\n    max = specialRule.max;\n  }\n  for (const plugin of ctx.options.plugins || []) {\n    if (plugin.rateLimit) {\n      const matchedRule = plugin.rateLimit.find(\n        (rule) => rule.pathMatcher(path)\n      );\n      if (matchedRule) {\n        window = matchedRule.window;\n        max = matchedRule.max;\n        break;\n      }\n    }\n  }\n  if (ctx.rateLimit.customRules) {\n    const _path = Object.keys(ctx.rateLimit.customRules).find((p) => {\n      if (p.includes(\"*\")) {\n        const isMatch = wildcardMatch(p)(path);\n        return isMatch;\n      }\n      return p === path;\n    });\n    if (_path) {\n      const customRule = ctx.rateLimit.customRules[_path];\n      const resolved = typeof customRule === \"function\" ? await customRule(req) : customRule;\n      if (resolved) {\n        window = resolved.window;\n        max = resolved.max;\n      }\n      if (resolved === false) {\n        return;\n      }\n    }\n  }\n  const storage = getRateLimitStorage(ctx, {\n    window\n  });\n  const data = await storage.get(key);\n  const now = Date.now();\n  if (!data) {\n    await storage.set(key, {\n      key,\n      count: 1,\n      lastRequest: now\n    });\n  } else {\n    const timeSinceLastRequest = now - data.lastRequest;\n    if (shouldRateLimit(max, window, data)) {\n      const retryAfter = getRetryAfter(data.lastRequest, window);\n      return rateLimitResponse(retryAfter);\n    } else if (timeSinceLastRequest > window * 1e3) {\n      await storage.set(\n        key,\n        {\n          ...data,\n          count: 1,\n          lastRequest: now\n        },\n        true\n      );\n    } else {\n      await storage.set(\n        key,\n        {\n          ...data,\n          count: data.count + 1,\n          lastRequest: now\n        },\n        true\n      );\n    }\n  }\n}\nfunction getDefaultSpecialRules() {\n  const specialRules = [\n    {\n      pathMatcher(path) {\n        return path.startsWith(\"/sign-in\") || path.startsWith(\"/sign-up\") || path.startsWith(\"/change-password\") || path.startsWith(\"/change-email\");\n      },\n      window: 10,\n      max: 3\n    }\n  ];\n  return specialRules;\n}\n\nfunction checkEndpointConflicts(options, logger2) {\n  const endpointRegistry = /* @__PURE__ */ new Map();\n  options.plugins?.forEach((plugin) => {\n    if (plugin.endpoints) {\n      for (const [key, endpoint] of Object.entries(plugin.endpoints)) {\n        if (endpoint && \"path\" in endpoint) {\n          const path = endpoint.path;\n          let methods = [];\n          if (endpoint.options && \"method\" in endpoint.options) {\n            if (Array.isArray(endpoint.options.method)) {\n              methods = endpoint.options.method;\n            } else if (typeof endpoint.options.method === \"string\") {\n              methods = [endpoint.options.method];\n            }\n          }\n          if (methods.length === 0) {\n            methods = [\"*\"];\n          }\n          if (!endpointRegistry.has(path)) {\n            endpointRegistry.set(path, []);\n          }\n          endpointRegistry.get(path).push({\n            pluginId: plugin.id,\n            endpointKey: key,\n            methods\n          });\n        }\n      }\n    }\n  });\n  const conflicts = [];\n  for (const [path, entries] of endpointRegistry.entries()) {\n    if (entries.length > 1) {\n      const methodMap = /* @__PURE__ */ new Map();\n      let hasConflict = false;\n      for (const entry of entries) {\n        for (const method of entry.methods) {\n          if (!methodMap.has(method)) {\n            methodMap.set(method, []);\n          }\n          methodMap.get(method).push(entry.pluginId);\n          if (methodMap.get(method).length > 1) {\n            hasConflict = true;\n          }\n          if (method === \"*\" && entries.length > 1) {\n            hasConflict = true;\n          } else if (method !== \"*\" && methodMap.has(\"*\")) {\n            hasConflict = true;\n          }\n        }\n      }\n      if (hasConflict) {\n        const uniquePlugins = [...new Set(entries.map((e) => e.pluginId))];\n        const conflictingMethods = [];\n        for (const [method, plugins] of methodMap.entries()) {\n          if (plugins.length > 1 || method === \"*\" && entries.length > 1 || method !== \"*\" && methodMap.has(\"*\")) {\n            conflictingMethods.push(method);\n          }\n        }\n        conflicts.push({\n          path,\n          plugins: uniquePlugins,\n          conflictingMethods\n        });\n      }\n    }\n  }\n  if (conflicts.length > 0) {\n    const conflictMessages = conflicts.map(\n      (conflict) => `  - \"${conflict.path}\" [${conflict.conflictingMethods.join(\", \")}] used by plugins: ${conflict.plugins.join(\", \")}`\n    ).join(\"\\n\");\n    logger2.error(\n      `Endpoint path conflicts detected! Multiple plugins are trying to use the same endpoint paths with conflicting HTTP methods:\n${conflictMessages}\n\nTo resolve this, you can:\n\t1. Use only one of the conflicting plugins\n\t2. Configure the plugins to use different paths (if supported)\n\t3. Ensure plugins use different HTTP methods for the same path\n`\n    );\n  }\n}\nfunction getEndpoints(ctx, options) {\n  const pluginEndpoints = options.plugins?.reduce((acc, plugin) => {\n    return {\n      ...acc,\n      ...plugin.endpoints\n    };\n  }, {}) ?? {};\n  const middlewares = options.plugins?.map(\n    (plugin) => plugin.middlewares?.map((m) => {\n      const middleware = (async (context) => {\n        const authContext = await ctx;\n        return m.middleware({\n          ...context,\n          context: {\n            ...authContext,\n            ...context.context\n          }\n        });\n      });\n      middleware.options = m.middleware.options;\n      return {\n        path: m.path,\n        middleware\n      };\n    })\n  ).filter((plugin) => plugin !== void 0).flat() || [];\n  const baseEndpoints = {\n    signInSocial,\n    callbackOAuth,\n    getSession: getSession(),\n    signOut,\n    signUpEmail: signUpEmail(),\n    signInEmail,\n    forgetPassword,\n    resetPassword,\n    verifyEmail,\n    sendVerificationEmail,\n    changeEmail,\n    changePassword,\n    setPassword,\n    updateUser: updateUser(),\n    deleteUser,\n    forgetPasswordCallback,\n    requestPasswordReset,\n    requestPasswordResetCallback,\n    listSessions: listSessions(),\n    revokeSession,\n    revokeSessions,\n    revokeOtherSessions,\n    linkSocialAccount,\n    listUserAccounts,\n    deleteUserCallback,\n    unlinkAccount,\n    refreshToken,\n    getAccessToken,\n    accountInfo\n  };\n  const endpoints = {\n    ...baseEndpoints,\n    ...pluginEndpoints,\n    ok,\n    error\n  };\n  const api = toAuthEndpoints(endpoints, ctx);\n  return {\n    api,\n    middlewares\n  };\n}\nconst router = (ctx, options) => {\n  const { api, middlewares } = getEndpoints(ctx, options);\n  const basePath = new URL(ctx.baseURL).pathname;\n  return createRouter(api, {\n    routerContext: ctx,\n    openapi: {\n      disabled: true\n    },\n    basePath,\n    routerMiddleware: [\n      {\n        path: \"/**\",\n        middleware: originCheckMiddleware\n      },\n      ...middlewares\n    ],\n    async onRequest(req) {\n      const disabledPaths = ctx.options.disabledPaths || [];\n      const path = new URL(req.url).pathname.replace(basePath, \"\");\n      if (disabledPaths.includes(path)) {\n        return new Response(\"Not Found\", { status: 404 });\n      }\n      for (const plugin of ctx.options.plugins || []) {\n        if (plugin.onRequest) {\n          const response = await plugin.onRequest(req, ctx);\n          if (response && \"response\" in response) {\n            return response.response;\n          }\n        }\n      }\n      return onRequestRateLimit(req, ctx);\n    },\n    async onResponse(res) {\n      for (const plugin of ctx.options.plugins || []) {\n        if (plugin.onResponse) {\n          const response = await plugin.onResponse(res, ctx);\n          if (response) {\n            return response.response;\n          }\n        }\n      }\n      return res;\n    },\n    onError(e) {\n      if (e instanceof APIError && e.status === \"FOUND\") {\n        return;\n      }\n      if (options.onAPIError?.throw) {\n        throw e;\n      }\n      if (options.onAPIError?.onError) {\n        options.onAPIError.onError(e, ctx);\n        return;\n      }\n      const optLogLevel = options.logger?.level;\n      const log = optLogLevel === \"error\" || optLogLevel === \"warn\" || optLogLevel === \"debug\" ? logger : void 0;\n      if (options.logger?.disabled !== true) {\n        if (e && typeof e === \"object\" && \"message\" in e && typeof e.message === \"string\") {\n          if (e.message.includes(\"no column\") || e.message.includes(\"column\") || e.message.includes(\"relation\") || e.message.includes(\"table\") || e.message.includes(\"does not exist\")) {\n            ctx.logger?.error(e.message);\n            return;\n          }\n        }\n        if (e instanceof APIError) {\n          if (e.status === \"INTERNAL_SERVER_ERROR\") {\n            ctx.logger.error(e.status, e);\n          }\n          log?.error(e.message);\n        } else {\n          ctx.logger?.error(\n            e && typeof e === \"object\" && \"name\" in e ? e.name : \"\",\n            e\n          );\n        }\n      }\n    }\n  });\n};\n\nexport { accountInfo, callbackOAuth, changeEmail, changePassword, checkEndpointConflicts, createAuthEndpoint, createEmailVerificationToken, deleteUser, deleteUserCallback, error, forgetPassword, forgetPasswordCallback, getAccessToken, getEndpoints, getSession, linkSocialAccount, listSessions, listUserAccounts, ok, originCheckMiddleware, refreshToken, requestPasswordReset, requestPasswordResetCallback, resetPassword, revokeOtherSessions, revokeSession, revokeSessions, router, sendVerificationEmail, setPassword, signInEmail, signInSocial, signOut, signUpEmail, unlinkAccount, updateUser, verifyEmail };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 879, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/index.mjs"],"sourcesContent":["export { b as betterAuth, c as createTelemetry, g as getTelemetryAuthConfig } from './shared/better-auth.mPTDVpKF.mjs';\nexport { B as BetterAuthError, M as MissingDependencyError } from './shared/better-auth.DdzSJf-n.mjs';\nexport { c as capitalizeFirstLetter } from './shared/better-auth.D-2CmEwz.mjs';\nexport { H as HIDE_METADATA, g as generateState, p as parseState } from './shared/better-auth.C3-_8m-g.mjs';\nexport { g as generateId } from './shared/better-auth.BUPPRXfK.mjs';\nexport { c as createLogger, l as levels, a as logger, s as shouldPublishLog } from './shared/better-auth.DgGir396.mjs';\nexport { APIError } from 'better-call';\nimport './shared/better-auth.C5vDERgF.mjs';\nimport 'zod';\nimport './shared/better-auth.CiuwFiHM.mjs';\nimport '@better-auth/utils/base64';\nimport '@better-auth/utils/hmac';\nimport '@better-auth/utils/binary';\nimport '@better-auth/core/db';\nimport 'kysely';\nimport './api/index.mjs';\nimport './shared/better-auth.DiMXeqeq.mjs';\nimport './shared/better-auth.CW6D9eSx.mjs';\nimport './shared/better-auth.BTrSrKsi.mjs';\nimport './shared/better-auth.BRFtaovt.mjs';\nimport './shared/better-auth.BLnvK9hk.mjs';\nimport '@better-auth/utils/random';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha.js';\nimport '@noble/ciphers/utils.js';\nimport 'jose';\nimport '@noble/hashes/scrypt.js';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils.js';\nimport './shared/better-auth.B4Qoxdgc.mjs';\nimport './shared/better-auth.BQOp-6ij.mjs';\nimport 'defu';\nimport './crypto/index.mjs';\nimport './shared/better-auth.D-L3RQ6y.mjs';\nimport './shared/better-auth.DhziC0ap.mjs';\nimport './shared/better-auth.BAk2ZmIN.mjs';\nimport './shared/better-auth.BvvYEWCP.mjs';\nimport './shared/better-auth.QSZgH9k6.mjs';\nimport './shared/better-auth.YwDQhoPc.mjs';\nimport '@better-fetch/fetch';\nimport 'jose/errors';\nimport './shared/better-auth.D2xndZ2p.mjs';\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 960, "column": 0}, "map": {"version":3,"sources":["file:///Users/avy/Code/todoit/node_modules/.pnpm/better-auth%401.3.27_next%4015.5.4_%40opentelemetry%2Bapi%401.9.0_react-dom%4019.1.0_react%4019.1.0___ed7dd2f5da0a3d3042fc65fe0fb08700/node_modules/better-auth/dist/adapters/drizzle-adapter/index.mjs"],"sourcesContent":["import { count, desc, asc, inArray, notInArray, like, lt, lte, ne, gt, gte, eq, and, or, sql } from 'drizzle-orm';\nimport { B as BetterAuthError } from '../../shared/better-auth.DdzSJf-n.mjs';\nimport { c as createAdapterFactory } from '../../shared/better-auth.BvvYEWCP.mjs';\nimport '../../shared/better-auth.BTrSrKsi.mjs';\nimport '../../shared/better-auth.DgGir396.mjs';\nimport '../../shared/better-auth.CiuwFiHM.mjs';\nimport '../../shared/better-auth.DhziC0ap.mjs';\nimport '../../shared/better-auth.BUPPRXfK.mjs';\nimport '@better-auth/utils/random';\nimport 'zod';\nimport 'better-call';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha.js';\nimport '@noble/ciphers/utils.js';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt.js';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils.js';\nimport '../../shared/better-auth.B4Qoxdgc.mjs';\n\nconst drizzleAdapter = (db, config) => {\n  let lazyOptions = null;\n  const createCustomAdapter = (db2) => ({ getFieldName, debugLog }) => {\n    function getSchema(model) {\n      const schema = config.schema || db2._.fullSchema;\n      if (!schema) {\n        throw new BetterAuthError(\n          \"Drizzle adapter failed to initialize. Schema not found. Please provide a schema object in the adapter options object.\"\n        );\n      }\n      const schemaModel = schema[model];\n      if (!schemaModel) {\n        throw new BetterAuthError(\n          `[# Drizzle Adapter]: The model \"${model}\" was not found in the schema object. Please pass the schema directly to the adapter options.`\n        );\n      }\n      return schemaModel;\n    }\n    const withReturning = async (model, builder, data, where) => {\n      if (config.provider !== \"mysql\") {\n        const c = await builder.returning();\n        return c[0];\n      }\n      await builder.execute();\n      const schemaModel = getSchema(model);\n      const builderVal = builder.config?.values;\n      if (where?.length) {\n        const updatedWhere = where.map((w) => {\n          if (data[w.field] !== void 0) {\n            return { ...w, value: data[w.field] };\n          }\n          return w;\n        });\n        const clause = convertWhereClause(updatedWhere, model);\n        const res = await db2.select().from(schemaModel).where(...clause);\n        return res[0];\n      } else if (builderVal && builderVal[0]?.id?.value) {\n        let tId = builderVal[0]?.id?.value;\n        if (!tId) {\n          const lastInsertId = await db2.select({ id: sql`LAST_INSERT_ID()` }).from(schemaModel).orderBy(desc(schemaModel.id)).limit(1);\n          tId = lastInsertId[0].id;\n        }\n        const res = await db2.select().from(schemaModel).where(eq(schemaModel.id, tId)).limit(1).execute();\n        return res[0];\n      } else if (data.id) {\n        const res = await db2.select().from(schemaModel).where(eq(schemaModel.id, data.id)).limit(1).execute();\n        return res[0];\n      } else {\n        if (!(\"id\" in schemaModel)) {\n          throw new BetterAuthError(\n            `The model \"${model}\" does not have an \"id\" field. Please use the \"id\" field as your primary key.`\n          );\n        }\n        const res = await db2.select().from(schemaModel).orderBy(desc(schemaModel.id)).limit(1).execute();\n        return res[0];\n      }\n    };\n    function convertWhereClause(where, model) {\n      const schemaModel = getSchema(model);\n      if (!where) return [];\n      if (where.length === 1) {\n        const w = where[0];\n        if (!w) {\n          return [];\n        }\n        const field = getFieldName({ model, field: w.field });\n        if (!schemaModel[field]) {\n          throw new BetterAuthError(\n            `The field \"${w.field}\" does not exist in the schema for the model \"${model}\". Please update your schema.`\n          );\n        }\n        if (w.operator === \"in\") {\n          if (!Array.isArray(w.value)) {\n            throw new BetterAuthError(\n              `The value for the field \"${w.field}\" must be an array when using the \"in\" operator.`\n            );\n          }\n          return [inArray(schemaModel[field], w.value)];\n        }\n        if (w.operator === \"not_in\") {\n          if (!Array.isArray(w.value)) {\n            throw new BetterAuthError(\n              `The value for the field \"${w.field}\" must be an array when using the \"not_in\" operator.`\n            );\n          }\n          return [notInArray(schemaModel[field], w.value)];\n        }\n        if (w.operator === \"contains\") {\n          return [like(schemaModel[field], `%${w.value}%`)];\n        }\n        if (w.operator === \"starts_with\") {\n          return [like(schemaModel[field], `${w.value}%`)];\n        }\n        if (w.operator === \"ends_with\") {\n          return [like(schemaModel[field], `%${w.value}`)];\n        }\n        if (w.operator === \"lt\") {\n          return [lt(schemaModel[field], w.value)];\n        }\n        if (w.operator === \"lte\") {\n          return [lte(schemaModel[field], w.value)];\n        }\n        if (w.operator === \"ne\") {\n          return [ne(schemaModel[field], w.value)];\n        }\n        if (w.operator === \"gt\") {\n          return [gt(schemaModel[field], w.value)];\n        }\n        if (w.operator === \"gte\") {\n          return [gte(schemaModel[field], w.value)];\n        }\n        return [eq(schemaModel[field], w.value)];\n      }\n      const andGroup = where.filter(\n        (w) => w.connector === \"AND\" || !w.connector\n      );\n      const orGroup = where.filter((w) => w.connector === \"OR\");\n      const andClause = and(\n        ...andGroup.map((w) => {\n          const field = getFieldName({ model, field: w.field });\n          if (w.operator === \"in\") {\n            if (!Array.isArray(w.value)) {\n              throw new BetterAuthError(\n                `The value for the field \"${w.field}\" must be an array when using the \"in\" operator.`\n              );\n            }\n            return inArray(schemaModel[field], w.value);\n          }\n          if (w.operator === \"not_in\") {\n            if (!Array.isArray(w.value)) {\n              throw new BetterAuthError(\n                `The value for the field \"${w.field}\" must be an array when using the \"not_in\" operator.`\n              );\n            }\n            return notInArray(schemaModel[field], w.value);\n          }\n          return eq(schemaModel[field], w.value);\n        })\n      );\n      const orClause = or(\n        ...orGroup.map((w) => {\n          const field = getFieldName({ model, field: w.field });\n          return eq(schemaModel[field], w.value);\n        })\n      );\n      const clause = [];\n      if (andGroup.length) clause.push(andClause);\n      if (orGroup.length) clause.push(orClause);\n      return clause;\n    }\n    function checkMissingFields(schema, model, values) {\n      if (!schema) {\n        throw new BetterAuthError(\n          \"Drizzle adapter failed to initialize. Schema not found. Please provide a schema object in the adapter options object.\"\n        );\n      }\n      for (const key in values) {\n        if (!schema[key]) {\n          throw new BetterAuthError(\n            `The field \"${key}\" does not exist in the \"${model}\" schema. Please update your drizzle schema or re-generate using \"npx @better-auth/cli generate\".`\n          );\n        }\n      }\n    }\n    return {\n      async create({ model, data: values }) {\n        const schemaModel = getSchema(model);\n        checkMissingFields(schemaModel, model, values);\n        const builder = db2.insert(schemaModel).values(values);\n        const returned = await withReturning(model, builder, values);\n        return returned;\n      },\n      async findOne({ model, where }) {\n        const schemaModel = getSchema(model);\n        const clause = convertWhereClause(where, model);\n        const res = await db2.select().from(schemaModel).where(...clause);\n        if (!res.length) return null;\n        return res[0];\n      },\n      async findMany({ model, where, sortBy, limit, offset }) {\n        const schemaModel = getSchema(model);\n        const clause = where ? convertWhereClause(where, model) : [];\n        const sortFn = sortBy?.direction === \"desc\" ? desc : asc;\n        const builder = db2.select().from(schemaModel).limit(limit || 100).offset(offset || 0);\n        if (sortBy?.field) {\n          builder.orderBy(\n            sortFn(\n              schemaModel[getFieldName({ model, field: sortBy?.field })]\n            )\n          );\n        }\n        return await builder.where(...clause);\n      },\n      async count({ model, where }) {\n        const schemaModel = getSchema(model);\n        const clause = where ? convertWhereClause(where, model) : [];\n        const res = await db2.select({ count: count() }).from(schemaModel).where(...clause);\n        return res[0].count;\n      },\n      async update({ model, where, update: values }) {\n        const schemaModel = getSchema(model);\n        const clause = convertWhereClause(where, model);\n        const builder = db2.update(schemaModel).set(values).where(...clause);\n        return await withReturning(model, builder, values, where);\n      },\n      async updateMany({ model, where, update: values }) {\n        const schemaModel = getSchema(model);\n        const clause = convertWhereClause(where, model);\n        const builder = db2.update(schemaModel).set(values).where(...clause);\n        return await builder;\n      },\n      async delete({ model, where }) {\n        const schemaModel = getSchema(model);\n        const clause = convertWhereClause(where, model);\n        const builder = db2.delete(schemaModel).where(...clause);\n        return await builder;\n      },\n      async deleteMany({ model, where }) {\n        const schemaModel = getSchema(model);\n        const clause = convertWhereClause(where, model);\n        const builder = db2.delete(schemaModel).where(...clause);\n        return await builder;\n      },\n      options: config\n    };\n  };\n  let adapterOptions = null;\n  adapterOptions = {\n    config: {\n      adapterId: \"drizzle\",\n      adapterName: \"Drizzle Adapter\",\n      usePlural: config.usePlural ?? false,\n      debugLogs: config.debugLogs ?? false,\n      transaction: config.transaction ?? false ? (cb) => db.transaction((tx) => {\n        const adapter2 = createAdapterFactory({\n          config: adapterOptions.config,\n          adapter: createCustomAdapter(tx)\n        })(lazyOptions);\n        return cb(adapter2);\n      }) : false\n    },\n    adapter: createCustomAdapter(db)\n  };\n  const adapter = createAdapterFactory(adapterOptions);\n  return (options) => {\n    lazyOptions = options;\n    return adapter(options);\n  };\n};\n\nexport { drizzleAdapter };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}