import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { headers } from "next/headers"
import "./globals.css";
import { auth } from "@/lib/auth";
import { ZeroInit } from "@/components/zero-init";
import { Toaster } from "@/components/ui/sonner"

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await auth.api.getSession({ headers: await headers() });
  let jwtToken = { token: null as string | null };
  if (session) {
    jwtToken = await auth.api.getToken({ headers: await headers() });
  }
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>

        <ZeroInit userID={session?.user.id || 'anon'} token={jwtToken.token || ''}>
          <main>

            {children}
          </main>
          <Toaster />

        </ZeroInit>


      </body>
    </html>
  );
}
